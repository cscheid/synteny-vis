{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap f34ecf7bdd8e438dcb18","webpack:///./src/top.js","webpack:///./~/lodash/index.js","webpack:///./~/d3/d3.js","webpack:///./src/utils.js","webpack:///./src/dotplot.js","webpack:///./src/histogram.js","webpack:///./src/main.js","webpack:///./src/persistence.js","webpack:///./src/synteny-vis.js","webpack:///./src/window.js","webpack:///./~/queue-async/queue.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","sv","main","refreshAutoDots","refreshAutoScale","window","location","hash","loadksData","controller","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","length","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","reverse","outer","iterIndex","data","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","values","nativeCreate","set","Set","push","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","Array","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","Math","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","pairs","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","replace","rePropName","match","quote","reEscapeChar","chunk","compact","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","filter","findWhere","find","includes","isString","map","pluck","reject","sample","toArray","rand","shuffle","some","sortBy","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isFinite","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","_","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Error","Number","String","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedIndex","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduce","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","defer","delay","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","snakeCase","startCase","e","method","methodOf","round","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","b","d","f","r","t","u","v","x","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","left","lo","hi","right","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","defineProperty","enumerable","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","i","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","j","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","top","margin","padding","border","ctm","getScreenCTM","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","d3_timer_sweep","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","join","specifier","d3_format_re","align","sign","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","date","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","getMonth","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","zips","transpose","matrix","entries","merged","empty","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","getComputedAttr","element","synteny","dataObj","initialColorScale","resizeBrushBoundary","scaling","corners","vertical","horizontal","horizontalRescale","verticalRescale","draw","elapsedMS","finalColorScale","typeHint","makeComp","roundedlogks","intermediateColorScale","gent","getGEvNTMode","DOTPLOT_COLOR_TRANS_LEN","interpolateScales","allData","currentData","activeDots","allDots","contextbak","clearRect","SYNTENY_MARGIN","height","fillStyle","UNSELECTED_DOT_FILL","dot","xScale","x_relative_offset","yScale","y_relative_offset","fillRect","CIRCLE_RADIUS","minDomX","maxDomX","minDomY","maxDomY","minRanX","maxRanX","minRanY","maxRanY","widthDomX","widthDomY","widthRanX","widthRanY","xRatio","xShift","yRatio","yShift","val","loIndex","hiIndex","diff","aDomain","bDomain","NUM_COLOR_SCALE_INTERPOLATION_SAMPLES","setSyntenyData","colorScale","setNavigationMode","setColorScale","newColorScale","setField","getXLineOffsets","getYLineOffsets","dataAspectRatio","baseID","svgElement","getElementById","computedWidth","util","computedHeight","windowAspectRatio","brushGroup","tempXOffsets","xOffsets","tempXGaps","xAxisTickValues","tempYOffsets","yOffsets","tempYGaps","yAxisTickValues","xLineAxis","xGapsAxis","yLineAxis","yGapsAxis","xAxisGapsGroup","yAxisGapsGroup","xAxisLineGroup","yAxisLineGroup","addSpatialFilter","removeSpatialFilter","getContext","TEXT_OFFSET","TEXT_BOX_HEIGHT","X_AXIS_ORGANISM_NAME","Y_AXIS_ORGANISM_NAME","xPairs","xOffsetToNameMap","getXLineNames","xAxisWrapper","yPairs","yOffsetToNameMap","getYLineNames","yAxisWrapper","addListener","setNavMode","plotBrushBrush","plotBrush","addDataFilter","plotBrushEnd","removeDataFilter","notifyListeners","makeBins","NUM_HISTOGRAM_TICKS","dataExtent","getAutoScale","console","autoScale","generateAutoScale","currentDataSummary","env","getPersistence","summary","persistence","edgeDelta","minimumDeltaEdge","mm","persist","removeNonExtrema","maxima","minima","SHOW_MAXIMA","SHOW_MINIMA","tempSelA","plot","xPlotScale","yPlotScale","colorIndex","combined","colors","UNSELECTED_BAR_FILL","updatePlotAttrs","activeFunc","plotHeight","HISTOGRAM_MARGIN","updatePlot","dataBarSel","lastYExtent","yAxisSel","HISTOGRAM_Y_SCALE_TRANS_LEN","yAxis","HISTOGRAM_COLOR_TRANS_LEN","plotWidth","prettyNames","logks","logkn","logkskn","brushSelectForBM","xAxis","sendBrushEvent","ksTextToObjects","ksLines","ksLineToSyntenyDot","ks","kn","x_chromosome_id","y_chromosome_id","ge","nt","lengthsToCumulativeBPCounts","len_list","ntLenList","kv","total","geLenList","gene_count","nameLenList","geneCounts","gene_counts","inlineKSData","xmap","ymap","ksObj","xNameShift","yNameShift","between","createDataObj","syntenyDots","xmapPair","ymapPair","filterMapForNames","getFilterFunction","dataFilters","spatial","ret","sortedDots","gentMode","setGEvNTMode","setOrder","oldFilters","validPoints","lastLow","extents","typeOfChange","DATA_OP_TIMING","ks_filename","x_id","y_id","await","x_len","y_len","organism","ksData","xCumLenMap","chromosomes","yCumLenMap","inlinedKSData","ksDataObject","here","radio","auto","checked","_refreshAutoDots","histograms","syntenyPlot","activeField","steelBlueCS","newCS","activeCS","colorScales","COLOR_RANGES","colorRange","colorScaleName","rg","dotplot","minLogKs","maxLogKs","slow","alert","rg_quantized","rainbow","rainbow_quantized","parallelism","popping","tasks","notify","awaitAll","webpackPolyfill","deprecate"],"mappings":"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","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar sv = __webpack_require__(8);\n\tvar main = __webpack_require__(6);\n\t\n\tvar refreshAutoDots = sv.refreshAutoDots;\n\tvar refreshAutoScale = sv.refreshAutoScale;\n\t\n\tswitch (window.location.hash) {\n\t\tcase '#m':\n\t\tcase '#maize':\n\t\t\tmain.loadksData('./data/6807_8082.CDS-CDS.dcmegablast.tdd10.cs0.filtered.dag.all.go_D40_g20_A10.aligncoords.gcoords.ks', '6807', '8082', sv.controller);\n\t\t\tbreak;\n\t\n\t\tcase '#e':\n\t\tcase '#ecoli':\n\t\t\tmain.loadksData('./data/4241_4242.CDS-CDS.last.tdd10.cs0.filtered.dag.all.go_D20_g10_A5.aligncoords.gcoords.ks', '4241', '4242', sv.controller);\n\t\t\tbreak;\n\t\n\t\tcase '#a':\n\t\tcase '#arabidopsis':\n\t\t\tmain.loadksData('./data/16911_3068.CDS-CDS.last.tdd10.cs0.filtered.dag.all.go_D20_g10_A5.aligncoords.gcoords.ks', '16911', '3068', sv.controller);\n\t\t\tbreak;\n\t\n\t\tdefault:\n\t\tcase '#h':\n\t\tcase '#homo':\n\t\t\twindow.location.hash = '#homo';\n\t\t\tmain.loadksData('./data/11691_25577.CDS-CDS.last.tdd10.cs0.filtered.dag.all.go_D20_g10_A5.aligncoords.gcoords.ks', '11691', '25577', sv.controller);\n\t\t\tbreak;\n\t}\n\t\n\twindow.refreshAutoScale = refreshAutoScale;\n\twindow.refreshAutoDots = refreshAutoDots;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(11)(module), (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.getComputedAttr = function getComputedAttr(element, attr) {\n\t\tvar computed = getComputedStyle(element)[attr];\n\t\treturn parseInt(computed, 10);\n\t};\n\t\n\texports.translate = function translate(x, y) {\n\t\treturn 'translate(' + x + ',' + y + ')';\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar util = __webpack_require__(3);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\tvar SYNTENY_MARGIN = 50; /* Padding around synteny plot for axes */\n\tvar CIRCLE_RADIUS = 2;\n\tvar UNSELECTED_DOT_FILL = '#D0D0D0';\n\tvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\n\tvar DOTPLOT_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\n\t\n\tfunction synteny(id, dataObj, field, initialColorScale) {\n\t\n\t\tvar xExtent = [0, _.max(dataObj.getXLineOffsets())];\n\t\tvar yExtent = [0, _.max(dataObj.getYLineOffsets())];\n\t\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\t\n\t\tvar baseID = id.substring(1);\n\t\tvar svgElement = document.getElementById(baseID);\n\t\tvar computedWidth = util.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\t\tvar computedHeight = util.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\t\tvar windowAspectRatio = computedHeight / computedWidth;\n\t\n\t\tvar width;\n\t\tvar height;\n\t\n\t\tif (windowAspectRatio / dataAspectRatio > 1) {\n\t\t\twidth = computedWidth;\n\t\t\theight = dataAspectRatio * width;\n\t\t} else {\n\t\t\theight = computedHeight;\n\t\t\twidth = 1 / dataAspectRatio * height;\n\t\t}\n\t\n\t\td3.select(id).attr('width', width + 2 * SYNTENY_MARGIN);\n\t\td3.select(id).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\n\t\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\t\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\t\n\t\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function () {\n\t\t\tvar t = d3.event.translate;\n\t\t\tvar s = d3.event.scale;\n\t\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t\t// prevents the translate from growing large. This way, you don't\n\t\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\t\tzoom.translate(t);\n\t\n\t\t\tbrushGroup.attr('transform', util.translate(t[0], t[1]) + 'scale(' + s + ')');\n\t\n\t\t\tvar tempXOffsets = _.filter(xOffsets, function (x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t});\n\t\t\tvar tempXGaps = _.filter(xAxisTickValues, function (x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t});\n\t\t\tvar tempYOffsets = _.filter(yOffsets, function (y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t});\n\t\t\tvar tempYGaps = _.filter(yAxisTickValues, function (y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t});\n\t\n\t\t\txLineAxis.tickValues(tempXOffsets);\n\t\t\txGapsAxis.tickValues(tempXGaps);\n\t\t\tyLineAxis.tickValues(tempYOffsets);\n\t\t\tyGapsAxis.tickValues(tempYGaps);\n\t\n\t\t\txAxisGapsGroup.call(xGapsAxis);\n\t\t\tyAxisGapsGroup.call(yGapsAxis);\n\t\t\txAxisLineGroup.call(xLineAxis);\n\t\t\tyAxisLineGroup.call(yLineAxis);\n\t\n\t\t\tsetSyntenyData('zoom');\n\t\t});\n\t\n\t\tfunction resizeBrushBoundary() {\n\t\t\tvar scaling = zoom.scale();\n\t\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\t\tvar vertical = ['.e', '.w'];\n\t\t\tvar horizontal = ['.n', '.s'];\n\t\t\tvar horizontalRescale = _.union(corners, vertical);\n\t\t\tvar verticalRescale = _.union(corners, horizontal);\n\t\n\t\t\t_.map(horizontalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t\t});\n\t\n\t\t\t_.map(verticalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t\t});\n\t\t}\n\t\n\t\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t  * All sorts of nasty things happen when the scales get changed underneath a\n\t  * brush. */\n\t\tvar brush = d3.svg.brush().x(xScale.copy()).y(yScale.copy()).on('brush', function () {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t}).on('brushend', function () {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t}\n\t\t});\n\t\n\t\td3.select(id + '-canvas').attr('width', width + 2 * SYNTENY_MARGIN).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\tvar context = document.getElementById(id.substring(1) + '-canvas').getContext('2d');\n\t\n\t\td3.select(id + '-canvas-bak').attr('width', width + 2 * SYNTENY_MARGIN).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\tvar contextbak = document.getElementById(id.substring(1) + '-canvas-bak').getContext('2d');\n\t\n\t\tvar svg = d3.select(id);\n\t\n\t\tvar TEXT_OFFSET = 35;\n\t\tvar TEXT_BOX_HEIGHT = 25;\n\t\tsvg.append('text').attr('x', (width + 2 * SYNTENY_MARGIN) / 3).attr('width', (width + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(dataObj.X_AXIS_ORGANISM_NAME);\n\t\n\t\tsvg.append('text').attr('transform', 'rotate(-90)').attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3).attr('width', (height + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN - TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(dataObj.Y_AXIS_ORGANISM_NAME);\n\t\n\t\tsvg.append('defs').append('clipPath').attr('id', 'plot-clip-box').append('rect').attr('x', 0).attr('width', width).attr('y', 0).attr('height', height).attr('fill', 'black');\n\t\n\t\tvar xOffsets = dataObj.getXLineOffsets();\n\t\tvar xPairs = _.zip(_.initial(xOffsets), _.rest(xOffsets));\n\t\tvar xAxisTickValues = _.map(xPairs, function (p) {\n\t\t\treturn (p[0] + p[1]) / 2;\n\t\t});\n\t\n\t\tvar xOffsetToNameMap = _.object(xAxisTickValues, dataObj.getXLineNames());\n\t\n\t\tvar xLineAxis = d3.svg.axis().scale(xScale).tickValues(xOffsets).tickFormat(_.constant('')).orient('bottom').tickSize(-height);\n\t\n\t\tvar xGapsAxis = d3.svg.axis().scale(xScale).tickValues(xAxisTickValues).tickFormat(function (x) {\n\t\t\treturn xOffsetToNameMap[x];\n\t\t}).orient('bottom').tickSize(0);\n\t\n\t\tvar xAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, height + SYNTENY_MARGIN));\n\t\tvar xAxisGapsGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xGapsAxis);\n\t\tvar xAxisLineGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xLineAxis);\n\t\n\t\tvar yOffsets = dataObj.getYLineOffsets();\n\t\tvar yPairs = _.zip(_.initial(yOffsets), _.rest(yOffsets));\n\t\tvar yAxisTickValues = _.map(yPairs, function (p) {\n\t\t\treturn (p[0] + p[1]) / 2;\n\t\t});\n\t\tvar yOffsetToNameMap = _.object(yAxisTickValues, dataObj.getYLineNames());\n\t\n\t\tvar yLineAxis = d3.svg.axis().scale(yScale).tickValues(yOffsets).tickFormat(_.constant('')).orient('left').tickSize(-width);\n\t\n\t\tvar yGapsAxis = d3.svg.axis().scale(yScale).tickValues(yAxisTickValues).tickFormat(function (x) {\n\t\t\treturn yOffsetToNameMap[x];\n\t\t}).orient('left').tickSize(0);\n\t\n\t\tvar yAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN));\n\t\tvar yAxisGapsGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yGapsAxis);\n\t\tvar yAxisLineGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yLineAxis);\n\t\n\t\tsvg = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN)).append('g').attr('id', 'zoom-group').call(zoom).on('mousedown.zoom', null); //disable panning\n\t\n\t\tvar brushGroup = svg.append('g').attr('clip-path', 'url(#plot-clip-box)').append('g').attr('id', 'brush-group').call(brush);\n\t\n\t\tvar colorScale = initialColorScale;\n\t\n\t\tfunction draw(elapsedMS, initialColorScale, finalColorScale, typeHint) {\n\t\t\tvar start = Date.now();\n\t\t\tvar gent = dataObj.getGEvNTMode();\n\t\n\t\t\tvar intermediateColorScale;\n\t\t\tif (elapsedMS === 0 && typeHint === 'data') {\n\t\t\t\tintermediateColorScale = finalColorScale;\n\t\t\t} else {\n\t\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\t\t}\n\t\n\t\t\tvar allData = dataObj.currentData();\n\t\t\tvar activeDots = allData.active;\n\t\t\tvar allDots = allData.raw;\n\t\n\t\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tif (typeHint === 'zoom') {\n\t\t\t\tcontextbak.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\t\tcontextbak.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t\t_.each(allDots, function (dot) {\n\t\t\t\t\tvar d = dot[gent];\n\t\t\t\t\tvar cx = SYNTENY_MARGIN + xScale(d.x_relative_offset);\n\t\t\t\t\tvar cy = SYNTENY_MARGIN + yScale(d.y_relative_offset);\n\t\n\t\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN) return;\n\t\n\t\t\t\t\tcontextbak.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t//console.log('Time to draw bg points:', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tcontext.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\n\t\t\t/* On top, active dots */\n\t\t\tvar minDomX = xScale.domain()[0];\n\t\t\tvar maxDomX = xScale.domain()[1];\n\t\t\tvar minDomY = yScale.domain()[0];\n\t\t\tvar maxDomY = yScale.domain()[1];\n\t\t\tvar minRanX = xScale.range()[0];\n\t\t\tvar maxRanX = xScale.range()[1];\n\t\t\tvar minRanY = yScale.range()[0];\n\t\t\tvar maxRanY = yScale.range()[1];\n\t\t\tvar widthDomX = maxDomX - minDomX;\n\t\t\tvar widthDomY = maxDomY - minDomY;\n\t\t\tvar widthRanX = maxRanX - minRanX;\n\t\t\tvar widthRanY = maxRanY - minRanY;\n\t\t\tvar xRatio = widthRanX / widthDomX;\n\t\t\tvar xShift = minDomX * xRatio + minRanX - SYNTENY_MARGIN;\n\t\t\tvar yRatio = widthRanY / widthDomY;\n\t\t\tvar yShift = maxDomY * yRatio + maxRanY - SYNTENY_MARGIN;\n\t\n\t\t\tvar groups = [];\n\t\t\tvar index = 0;\n\t\t\tfunction makeComp(v) {\n\t\t\t\treturn function (x) {\n\t\t\t\t\treturn x.roundedlogks < v;\n\t\t\t\t};\n\t\t\t}\n\t\t\twhile (index < activeDots.length) {\n\t\t\t\tvar lo = index;\n\t\t\t\tvar val = activeDots[index].roundedlogks;\n\t\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\t\troundedlogks: val\n\t\t\t\t}, makeComp(val));\n\t\t\t\tgroups.push([lo, index]);\n\t\t\t}\n\t\n\t\t\tfor (var g = 0; g < groups.length; g++) {\n\t\t\t\tvar group = groups[g];\n\t\t\t\tvar loIndex = group[0];\n\t\t\t\tvar hiIndex = group[1];\n\t\t\t\tcontext.fillStyle = intermediateColorScale(activeDots[loIndex].roundedlogks);\n\t\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\t\tvar dot = activeDots[i];\n\t\t\t\t\tvar d = dot[gent];\n\t\t\t\t\tvar cx = d.x_relative_offset * xRatio - xShift;\n\t\t\t\t\tvar cy = d.y_relative_offset * yRatio - yShift;\n\t\n\t\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN) continue;\n\t\n\t\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect(0, 0, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(0, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(SYNTENY_MARGIN + width, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(0, height + SYNTENY_MARGIN, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\n\t\t\tvar diff = Date.now() - start;\n\t\t\t//console.log('Start of call to end of draw call:', diff);\n\t\t\tif (elapsedMS > 0) {\n\t\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction interpolateScales(a, b, t) {\n\t\t\tvar aDomain = a.domain();\n\t\t\tvar bDomain = b.domain();\n\t\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\t\tvar max = Math.max(aDomain[1], bDomain[1]);\n\t\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\t\tvar domain = _.range(min, max + 1, step);\n\t\t\tvar range = _.map(domain, function (input) {\n\t\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t\t});\n\t\t\treturn d3.scale.linear().domain(domain).range(range);\n\t\t}\n\t\n\t\tfunction setSyntenyData(typeHint) {\n\t\t\tif (typeHint == 'autoscale') return;\n\t\t\tdraw(0, colorScale, colorScale, typeHint);\n\t\t}\n\t\tdataObj.addListener(setSyntenyData);\n\t\tsetSyntenyData('zoom');\n\t\n\t\tfunction setNavigationMode(mode) {\n\t\t\tif (mode === 'pan') {\n\t\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t\t} else if (mode === 'brush') {\n\t\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\t\tcolorScale = newColorScale;\n\t\t}\n\t\n\t\tfunction setField(f) {\n\t\t\tfield = f;\n\t\t\tsetSyntenyData();\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetNavMode: setNavigationMode,\n\t\t\tsetColorScale: setColorScale,\n\t\t\tsetField: setField\n\t\t};\n\t}\n\t\n\texports.synteny = synteny;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar HISTOGRAM_MARGIN = 50; /* Padding around histogram */\n\tvar HISTOGRAM_Y_SCALE_TRANS_LEN = 750; /* How long a y-axis histogram rescale takes */\n\tvar HISTOGRAM_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\n\tvar NUM_HISTOGRAM_TICKS = 100;\n\tvar UNSELECTED_BAR_FILL = '#D0D0D0';\n\t\n\tvar SHOW_MAXIMA = true;\n\tvar SHOW_MINIMA = true;\n\t\n\tvar persist = __webpack_require__(7);\n\tvar util = __webpack_require__(3);\n\tvar env = __webpack_require__(9);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\tfunction histogram(id, dataObj, field, initialColorScale) {\n\t\tvar dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\t\n\t\tvar plot = d3.select(id);\n\t\tvar plotWidth = util.getComputedAttr(plot.node(), 'width');\n\t\tvar plotHeight = util.getComputedAttr(plot.node(), 'height');\n\t\n\t\tvar prettyNames = {\n\t\t\tlogks: 'log(ks)',\n\t\t\tlogkn: 'log(kn)',\n\t\t\tlogkskn: 'log(ks/kn)'\n\t\t};\n\t\tplot.append('text').attr('x', 2 * plotHeight / 3).attr('width', plotHeight / 3).attr('y', 50).attr('height', 50).classed('histogram-title', true).text(prettyNames[field]);\n\t\n\t\tfunction plotBrushBrush() {\n\t\t\tif (!plotBrush.empty()) {\n\t\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction plotBrushEnd() {\n\t\t\tif (plotBrush.empty()) {\n\t\t\t\tdataObj.removeDataFilter(field);\n\t\t\t}\n\t\t\tdataObj.notifyListeners('autoscale');\n\t\t}\n\t\n\t\tvar colorScale = initialColorScale;\n\t\tvar xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\t\n\t\tfunction makeBins() {\n\t\t\tvar n = NUM_HISTOGRAM_TICKS;\n\t\t\tvar min = dataExtent[0];\n\t\t\tvar max = dataExtent[1];\n\t\t\tvar range = max - min;\n\t\t\tvar step = range / n;\n\t\t\treturn _.range(min, max, step);\n\t\t}\n\t\n\t\tvar bins = makeBins();\n\t\tvar lastYExtent = [0, 3 / 2 * d3.max(_.pluck(dataObj.currentDataSummary(bins, field), 'y'))];\n\t\n\t\tvar yPlotScale = d3.scale.linear().domain(lastYExtent).range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\t\n\t\tvar autoScale;\n\t\n\t\tfunction getAutoScale() {\n\t\t\tconsole.log(autoScale);\n\t\t\tif (!autoScale) generateAutoScale(dataObj.currentDataSummary(bins, field), env.getPersistence());\n\t\t\treturn autoScale;\n\t\t}\n\t\n\t\tfunction generateAutoScale(summary, persistence) {\n\t\n\t\t\tfunction edgeDelta(A, e) {\n\t\t\t\treturn Math.abs(A[e[0]].y - A[e[1]].y);\n\t\t\t}\n\t\n\t\t\tfunction minimumDeltaEdge(A) {\n\t\t\t\tvar edges = _.zip(_.range(0, A.length - 1), _.range(1, A.length));\n\t\t\t\treturn _.min(edges, _.partial(edgeDelta, A));\n\t\t\t}\n\t\n\t\t\tvar mm = persist.removeNonExtrema(summary);\n\t\t\twhile (edgeDelta(mm, minimumDeltaEdge(mm)) < persistence) {\n\t\t\t\tvar e = minimumDeltaEdge(mm);\n\t\t\t\tif (e[0] === 0) {\n\t\t\t\t\tif (mm.length <= 3) break;\n\t\t\t\t\tmm.splice(1, 1);\n\t\t\t\t} else if (e[1] === mm.length - 1) {\n\t\t\t\t\tif (mm.length <= 3) break;\n\t\t\t\t\tmm.splice(mm.length - 2, 1);\n\t\t\t\t} else {\n\t\t\t\t\tif (mm.length <= 4) break;\n\t\t\t\t\tmm.splice(e[0], 1);\n\t\t\t\t}\n\t\t\t\tmm = persist.removeNonExtrema(mm);\n\t\t\t}\n\t\n\t\t\tmm = _.partition(mm, function (p, i, a) {\n\t\t\t\treturn i === 0 || i === a.length - 1 || p.y > a[i - 1].y || p.y > a[i + 1].y;\n\t\t\t});\n\t\n\t\t\tvar maxima = mm[0];\n\t\t\tvar minima = mm[1];\n\t\n\t\t\tif (maxima.length > 3) {\n\t\t\t\tmaxima = _.chain(maxima).initial().rest().value();\n\t\t\t}\n\t\n\t\t\t_.each(maxima, function (m) {\n\t\t\t\t_.defaults(m, {\n\t\t\t\t\tmax: true\n\t\t\t\t});\n\t\t\t});\n\t\t\t_.each(minima, function (m) {\n\t\t\t\t_.defaults(m, {\n\t\t\t\t\tmax: false\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\tif (SHOW_MAXIMA || SHOW_MINIMA) {\n\t\t\t\tvar tempSelA = plot.selectAll('.maxMark').data(maxima.concat(minima));\n\t\t\t\ttempSelA.exit().remove();\n\t\t\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\t\t\ttempSelA.attr('cx', function (d) {\n\t\t\t\t\treturn xPlotScale(d.x + d.dx / 2);\n\t\t\t\t}).attr('cy', function (d) {\n\t\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t\t}).attr('r', 3).attr('fill', function (d) {\n\t\t\t\t\treturn d.max ? 'red' : 'orange';\n\t\t\t\t}).attr('opacity', function (d) {\n\t\t\t\t\treturn d.max && SHOW_MAXIMA || !d.max && SHOW_MINIMA ? 1 : 0;\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t_.each(maxima, function (m, i) {\n\t\t\t\tm.colorIndex = i;\n\t\t\t});\n\t\n\t\t\tvar combined = _.sortBy(minima.concat(maxima), 'x');\n\t\n\t\t\tvar colors = d3.scale.category10();\n\t\t\tautoScale = d3.scale.linear().domain(_.map(combined, function (d) {\n\t\t\t\treturn d.x + d.dx / 2;\n\t\t\t})).range(_.chain(combined).map(function (m) {\n\t\t\t\treturn m.max ? colors(m.colorIndex) : UNSELECTED_BAR_FILL;\n\t\t\t}).value());\n\t\t}\n\t\n\t\tvar plotBrush = d3.svg.brush().x(xPlotScale).on('brush', plotBrushBrush).on('brushend', plotBrushEnd);\n\t\n\t\tvar dataBarSel = plot.selectAll('.dataBars').data(bins).enter().append('rect').classed('dataBars', true);\n\t\n\t\tvar brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group').attr('transform', util.translate(0, HISTOGRAM_MARGIN)).call(plotBrush);\n\t\tbrushSelectForBM.selectAll('rect').attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\t\n\t\tvar xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\t\tvar yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\t\n\t\tplot.append('g').attr('transform', util.translate(0, plotHeight - HISTOGRAM_MARGIN)).classed('xAxis', true).call(xAxis);\n\t\tvar yAxisSel = plot.append('g').attr('transform', util.translate(HISTOGRAM_MARGIN, 0)).classed('yAxis', true).call(yAxis);\n\t\n\t\tfunction updatePlotAttrs(selection) {\n\t\t\tvar activeFunc = plotBrush.empty() ? _.constant(true) : function (bin) {\n\t\t\t\treturn bin.x + bin.dx > plotBrush.extent()[0] && bin.x < plotBrush.extent()[1];\n\t\t\t};\n\t\t\tselection.attr('y', function (d) {\n\t\t\t\treturn yPlotScale(d.y);\n\t\t\t}).attr('height', function (d) {\n\t\t\t\treturn plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y);\n\t\t\t}).attr('fill', function (d) {\n\t\t\t\treturn activeFunc(d) ? colorScale(d.x + d.dx / 2) : 'grey';\n\t\t\t});\n\t\t}\n\t\n\t\tfunction updatePlot(typeHint) {\n\t\n\t\t\ttypeHint = typeHint || '';\n\t\t\tif (typeHint === 'initial') {\n\t\t\t\tdataBarSel.data(dataObj.currentDataSummary(bins, field)).attr('x', function (d) {\n\t\t\t\t\treturn xPlotScale(d.x);\n\t\t\t\t}).attr('width', function (d) {\n\t\t\t\t\treturn xPlotScale(d.x + d.dx) - xPlotScale(d.x);\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar data = dataObj.currentDataSummary(bins, field);\n\t\t\tif (typeHint === 'data-stop' || typeHint == 'autoscale') generateAutoScale(data, env.getPersistence());\n\t\n\t\t\tif (typeHint.indexOf('spatial-stop') >= 0 || typeHint === 'data-stop') {\n\t\t\t\tlastYExtent = [0, 3 / 2 * d3.max(_.pluck(data, 'y'))];\n\t\t\t\tyPlotScale.domain(lastYExtent);\n\t\t\t\tyAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t\t\t\t//      plot.selectAll('.dataBars')\n\t\t\t\tdataBarSel.data(data).transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(updatePlotAttrs);\n\t\n\t\t\t\tplot.selectAll('.maxMark').transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).attr('cy', function (d) {\n\t\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//    plot.selectAll('.dataBars')\n\t\t\t\tdataBarSel.data(data).call(updatePlotAttrs);\n\t\n\t\t\t\t// To disable sharp transitions, move that chunk above down here.\n\t\t\t}\n\t\t}\n\t\n\t\tupdatePlot('initial');\n\t\tdataObj.addListener(updatePlot);\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\t/*jshint -W087*/\n\t\t\t//debugger;\n\t\t\tconsole.log('set');\n\t\t\tcolorScale = newColorScale;\n\t\t\tplot.selectAll('.dataBars').transition().duration(HISTOGRAM_COLOR_TRANS_LEN).call(updatePlotAttrs);\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetColorScale: setColorScale,\n\t\t\tgetAutoScale: getAutoScale,\n\t\t\trefreshAutoScale: updatePlot,\n\t\t\tbrush: plotBrush,\n\t\t\tsendBrushEvent: plotBrushBrush,\n\t\t\tselection: brushSelectForBM\n\t\t};\n\t}\n\t\n\texports.histogram = histogram;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar DATA_OP_TIMING = false;\n\t\n\tvar X_AXIS_ORGANISM_NAME;\n\tvar Y_AXIS_ORGANISM_NAME;\n\t\n\tvar queue = __webpack_require__(10);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\tvar loadksData = function loadksData(ks_filename, x_id, y_id, cb) {\n\t\tqueue().defer(d3.text, ks_filename)\n\t\t//.defer(d3.json, 'https://genomevolution.org/coge/api/v1/genomes/' + x_id)\n\t\t//.defer(d3.json, 'https://genomevolution.org/coge/api/v1/genomes/' + y_id)\n\t\t.defer(d3.json, 'lengths/' + x_id + '.json').defer(d3.json, 'lengths/' + y_id + '.json').await(function (err, ks, x_len, y_len) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tX_AXIS_ORGANISM_NAME = x_len.organism.name;\n\t\t\tY_AXIS_ORGANISM_NAME = y_len.organism.name;\n\t\n\t\t\tvar ksData = ksTextToObjects(ks);\n\t\t\tvar xCumLenMap = lengthsToCumulativeBPCounts(x_len.chromosomes);\n\t\t\tvar yCumLenMap = lengthsToCumulativeBPCounts(y_len.chromosomes);\n\t\t\tvar inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\t\n\t\t\tvar ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tcb(ksDataObject);\n\t\t});\n\t};\n\t\n\tfunction ksTextToObjects(text) {\n\t\t/* .ks files are delimited with a combination of tabs and double bars. */\n\t\tvar csv = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '');\n\t\tvar ksLines = _.compact(csv.split('\\n'));\n\t\treturn _.chain(ksLines).reject(function (line) {\n\t\t\treturn line[0] === '#';\n\t\t}).map(ksLineToSyntenyDot).filter(function (line) {\n\t\t\treturn isFinite(line.logks) && isFinite(line.logkn);\n\t\t}).value();\n\t}\n\t\n\tfunction ksLineToSyntenyDot(line) {\n\t\tvar fields = line.split(',');\n\t\treturn {\n\t\t\tks: Number(fields[0]),\n\t\t\tlogks: Math.log(Number(fields[0])) / Math.log(10),\n\t\t\troundedlogks: Math.floor(Math.log(Number(fields[0])) / Math.log(10) * 10) / 10,\n\t\t\tkn: Number(fields[1]),\n\t\t\tlogkn: Math.log(Number(fields[1])) / Math.log(10),\n\t\t\tlogkskn: (Math.log(Number(fields[0])) - Math.log(Number(fields[1]))) / Math.log(10),\n\t\t\tx_chromosome_id: fields[3],\n\t\t\ty_chromosome_id: fields[15],\n\t\t\tge: {\n\t\t\t\tx_relative_offset: Number(fields[10]),\n\t\t\t\ty_relative_offset: Number(fields[22])\n\t\t\t},\n\t\t\tnt: {\n\t\t\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\t\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction lengthsToCumulativeBPCounts(len_list) {\n\t\tvar ntLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar nameLenList = _.chain(len_list).sortBy('name').reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geneCounts = _.reduce(len_list, function (map, kv) {\n\t\t\tmap[kv.name] = kv.gene_count;\n\t\t\treturn map;\n\t\t}, {});\n\t\n\t\treturn {\n\t\t\tnt: ntLenList,\n\t\t\tge: geLenList,\n\t\t\tname: nameLenList,\n\t\t\tgene_counts: geneCounts\n\t\t};\n\t}\n\t\n\t// Compute absolute BP offset from chromosome and relative offset\n\tfunction inlineKSData(ks, xmap, ymap) {\n\t\t_.each(ks, function (ksObj) {\n\t\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\t\tksObj.nt.x_relative_offset += xShift;\n\t\t\tksObj.nt.y_relative_offset += yShift;\n\t\n\t\t\tvar xNameShift = xmap.name[ksObj.x_chromosome_id];\n\t\t\tvar yNameShift = ymap.name[ksObj.y_chromosome_id];\n\t\t\txShift = xmap.ge[ksObj.x_chromosome_id];\n\t\t\tyShift = ymap.ge[ksObj.y_chromosome_id];\n\t\t\tksObj.ge.x_relative_offset -= xNameShift;\n\t\t\tksObj.ge.y_relative_offset -= yNameShift;\n\t\t\tksObj.ge.x_relative_offset += xShift;\n\t\t\tksObj.ge.y_relative_offset += yShift;\n\t\t});\n\t\treturn ks;\n\t}\n\t\n\tfunction between(low, high, field) {\n\t\tif (field) {\n\t\t\treturn function (x) {\n\t\t\t\treturn low <= x[field] && x[field] < high;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function (x) {\n\t\t\t\treturn low <= x && x < high;\n\t\t\t};\n\t\t}\n\t}\n\t\n\tfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\t\tvar xmap = xmapPair.ge;\n\t\tvar ymap = ymapPair.ge;\n\t\tvar ret = {};\n\t\tconsole.log(xmap);\n\t\n\t\tvar sortedDots = {};\n\t\tvar dataFilters = {};\n\t\n\t\tret.X_AXIS_ORGANISM_NAME = X_AXIS_ORGANISM_NAME;\n\t\tret.Y_AXIS_ORGANISM_NAME = Y_AXIS_ORGANISM_NAME;\n\t\n\t\tret.getXLineOffsets = function () {\n\t\t\treturn _.chain(xmap).values().sortBy().value();\n\t\t};\n\t\n\t\tret.getYLineOffsets = function () {\n\t\t\treturn _.chain(ymap).values().sortBy().value();\n\t\t};\n\t\n\t\tvar gentMode = 'nt';\n\t\tret.setGEvNTMode = function (mode) {\n\t\t\tgentMode = mode;\n\t\t\txmap = xmapPair[mode];\n\t\t\tymap = ymapPair[mode];\n\t\t\tret.notifyListeners('ge-v-nt-change');\n\t\t};\n\t\n\t\tret.getGEvNTMode = function () {\n\t\t\treturn gentMode;\n\t\t};\n\t\n\t\tret.setOrder = function (field, descending) {\n\t\t\tsyntenyDots = _.sortBy(syntenyDots, field);\n\t\t\tif (descending) {\n\t\t\t\tsyntenyDots.reverse();\n\t\t\t}\n\t\t\tret.notifyListeners('order-change');\n\t\t};\n\t\n\t\tret.getXLineNames = function () {\n\t\t\treturn filterMapForNames(xmap);\n\t\t};\n\t\n\t\tret.getYLineNames = function () {\n\t\t\treturn filterMapForNames(ymap);\n\t\t};\n\t\n\t\tfunction filterMapForNames(map) {\n\t\t\treturn _.chain(map).pairs()\n\t\t\t// Filter out short names\n\t\t\t//.reject(function(x, i, A) {\n\t\t\t//  return i > 0 && x[1] - A[i-1][1] < NUCLEOTIDE_LOWER_NAME_LIMIT;\n\t\t\t//})\n\t\t\t.sortBy('1').pluck('0').reject(function (x) {\n\t\t\t\treturn x === 'total';\n\t\t\t}).value();\n\t\t}\n\t\n\t\tfunction getFilterFunction() {\n\t\t\tvar s = dataFilters.spatial;\n\t\t\tvar l = dataFilters.logks;\n\t\t\tvar k = dataFilters.logkn;\n\t\t\tvar m = dataFilters.logkskn;\n\t\t\tif (s && l) {\n\t\t\t\treturn function (d) {\n\t\t\t\t\treturn s(d) && l(d);\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (s) return s;\n\t\t\tif (l) return l;\n\t\t\treturn function (d) {\n\t\t\t\treturn (!s || s(d)) && (!l || l(d)) && (!k || k(d)) && (!m || m(d));\n\t\t\t};\n\t\t}\n\t\n\t\tret.currentData = function currentData() {\n\t\t\treturn {\n\t\t\t\traw: syntenyDots,\n\t\t\t\tactive: _.filter(syntenyDots, getFilterFunction())\n\t\t\t};\n\t\t};\n\t\n\t\tret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t\t\tvar oldFilters = dataFilters;\n\t\t\tdataFilters = _.omit(dataFilters, field);\n\t\n\t\t\tif (!sortedDots[field]) {\n\t\t\t\tsortedDots[field] = _.sortBy(syntenyDots, field);\n\t\t\t}\n\t\n\t\t\tvar validPoints = _.filter(sortedDots[field], getFilterFunction());\n\t\t\tdataFilters = oldFilters;\n\t\n\t\t\tvar diff = ticks[1] - ticks[0];\n\t\n\t\t\tvar lastLow = 0;\n\t\t\treturn _.chain(ticks).map(function (tick) {\n\t\t\t\tvar start = {},\n\t\t\t\t    end = {};\n\t\t\t\tstart[field] = tick;\n\t\t\t\tend[field] = tick + diff;\n\t\t\t\tvar hi = _.sortedIndex(validPoints, end, field);\n\t\t\t\tvar ret = {\n\t\t\t\t\tx: tick,\n\t\t\t\t\tdx: diff,\n\t\t\t\t\ty: hi - lastLow\n\t\t\t\t};\n\t\t\t\tlastLow = hi;\n\t\t\t\treturn ret;\n\t\t\t}).value();\n\t\t};\n\t\n\t\tret.addSpatialFilter = function (extents, typeHint) {\n\t\t\tdataFilters.spatial = function (dot) {\n\t\t\t\treturn dot[gentMode].x_relative_offset >= extents[0][0] && dot[gentMode].x_relative_offset <= extents[1][0] && dot[gentMode].y_relative_offset >= extents[0][1] && dot[gentMode].y_relative_offset <= extents[1][1];\n\t\t\t};\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.removeSpatialFilter = function (typeHint) {\n\t\t\tdelete dataFilters.spatial;\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.addDataFilter = function (extent, field, typeHint) {\n\t\t\tdataFilters[field] = between(extent[0], extent[1], field);\n\t\t\tret.notifyListeners(typeHint || 'data');\n\t\t};\n\t\n\t\tret.removeDataFilter = function (field) {\n\t\t\tdelete dataFilters[field];\n\t\t\tret.notifyListeners('data-stop');\n\t\t};\n\t\n\t\tvar listeners = [];\n\t\tret.addListener = function (x) {\n\t\t\tlisteners.push(x);\n\t\t};\n\t\n\t\tret.notifyListeners = function (typeOfChange) {\n\t\t\t_.each(listeners, function (x) {\n\t\t\t\tx(typeOfChange);\n\t\t\t});\n\t\t};\n\t\n\t\tif (DATA_OP_TIMING) {\n\t\t\tvar t = ret.currentData;\n\t\t\tret.currentData = function () {\n\t\t\t\tvar start = Date.now();\n\t\t\t\tvar x = t();\n\t\t\t\tconsole.log('currentData', Date.now() - start);\n\t\t\t\treturn x;\n\t\t\t};\n\t\n\t\t\tvar s = ret.currentDataSummary;\n\t\t\tret.currentDataSummary = function (a, b) {\n\t\t\t\tvar start = Date.now();\n\t\t\t\tvar x = s(a, b);\n\t\t\t\tconsole.log('currentDataSummary', Date.now() - start);\n\t\t\t\treturn x;\n\t\t\t};\n\t\t\tvar r = ret.notifyListeners;\n\t\t\tret.notifyListeners = function (x) {\n\t\t\t\tconsole.log('notifyListeners');\n\t\t\t\tr(x);\n\t\t\t};\n\t\t}\n\t\tret.setOrder('logks', true);\n\t\tret.setGEvNTMode(gentMode);\n\t\treturn ret;\n\t}\n\t\n\texports.loadksData = loadksData;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t/*\n\t * Given a list of\n\t *\n\t * [{y: <function value>}]\n\t *\n\t * remove all the objects that are not extrema; that is, remove the objects\n\t * that have a y-value that is not higher than both its neighbor's y-values\n\t * or lower than both its neighbor's y-values.\n\t *\n\t * The first and last point are never removed.\n\t */\n\tfunction removeNonExtrema(A) {\n\t  return _.filter(A, function (element, index) {\n\t    if (index === 0 || index === A.length - 1) return true;\n\t\n\t    var before = A[index - 1].y;\n\t    var here = element.y;\n\t    var after = A[index + 1].y;\n\t    return here > Math.max(before, after) || here < Math.min(before, after);\n\t  });\n\t}\n\t\n\texports.removeNonExtrema = removeNonExtrema;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar histogram = __webpack_require__(5);\n\tvar dotplot = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\tvar COLOR_RANGES = {\n\t\trg: ['red', 'green'],\n\t\trg_quantized: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n\t\trainbow: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\trainbow_quantized: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange']\n\t};\n\t\n\tfunction refreshAutoScale() {\n\t\tvar radio = document.getElementById('color-options');\n\t\tvar auto = _.find(radio.children, {\n\t\t\tvalue: 'auto'\n\t\t});\n\t\tauto.checked = false;\n\t\tauto.click();\n\t}\n\t\n\tvar _refreshAutoDots;\n\tfunction refreshAutoDots() {\n\t\t_refreshAutoDots();\n\t}\n\t\n\tfunction controller(dataObj) {\n\t\n\t\t_refreshAutoDots = function () {\n\t\t\t_.each(histograms, function (h) {\n\t\t\t\th.refreshAutoScale('autoscale');\n\t\t\t});\n\t\t};\n\t\n\t\tvar syntenyPlot;\n\t\t/* zoom/pan switching */\n\t\td3.selectAll('#mouse-options input[name=mouse-options]').on('change', function () {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\t\n\t\t/* summary mode switching */\n\t\td3.selectAll('#summary-options input[name=summary-options]').on('change', function () {\n\t\t\tdataObj.setOrder('logks', this.value === 'minimum');\n\t\t});\n\t\n\t\t/* Plot variable switching */\n\t\td3.selectAll('#plot-var-options input[name=plot-var-options]').on('change', function () {\n\t\t\thistograms[activeField].setColorScale(steelBlueCS);\n\t\t\tactiveField = this.value;\n\t\t\tsyntenyPlot.setField(activeField);\n\t\t\tvar newCS;\n\t\t\tif (activeCS === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][activeCS];\n\t\t\t}\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t});\n\t\n\t\t/* color mode switching */\n\t\tvar activeField = 'logks';\n\t\tvar activeCS = 'rg';\n\t\td3.selectAll('#color-options input[name=color-options]').on('change', function () {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][this.value];\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\tactiveCS = this.value;\n\t\t});\n\t\n\t\tvar fields = ['logks', 'logkn', 'logkskn'];\n\t\tvar colorScales = _.chain(fields).map(function (field) {\n\t\t\treturn [field, d3.extent(_.pluck(dataObj.currentData().raw, field))];\n\t\t}).object().mapValues(function (extent) {\n\t\t\tvar max = extent[1];\n\t\t\tvar min = extent[0];\n\t\t\tvar range = max - min;\n\t\n\t\t\treturn _.mapValues(COLOR_RANGES, function (colorRange, colorScaleName) {\n\t\t\t\tvar step = range / (colorRange.length - 1);\n\t\t\t\t// Extra .5 * step is to avoid missing a value because of floating point precision\n\t\t\t\tvar domain = _.range(min, max + 0.5 * step, step);\n\t\n\t\t\t\tvar scale = colorScaleName.indexOf('quantized') > -1 ? d3.scale.quantize() : d3.scale.linear();\n\t\t\t\treturn scale.domain(domain).range(colorRange);\n\t\t\t});\n\t\t}).value();\n\t\n\t\tvar steelBlueCS = _.constant('steelblue');\n\t\tvar initialColorScale = colorScales[activeField].rg;\n\t\n\t\tsyntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initialColorScale);\n\t\tvar histograms = {\n\t\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initialColorScale),\n\t\t\t'logkn': histogram.histogram('#plot2', dataObj, 'logkn', steelBlueCS),\n\t\t\t'logkskn': histogram.histogram('#plot3', dataObj, 'logkskn', steelBlueCS)\n\t\t};\n\t\tdataObj.notifyListeners('initial');\n\t\n\t\tvar minLogKs = d3.min(_.pluck(dataObj.currentData().raw, 'logks'));\n\t\tvar maxLogKs = d3.max(_.pluck(dataObj.currentData().raw, 'logks'));\n\t\tvar points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\t\n\t\tvar i = 0;\n\t\tvar j = 0;\n\t\tvar count = 0;\n\t\tvar time = 0;\n\t\tvar slow = 0;\n\t\tsetTimeout(function bm() {\n\t\t\tif (j >= points.length) {\n\t\t\t\ti++;\n\t\t\t\tj = 0;\n\t\t\t}\n\t\t\tif (i >= points.length) {\n\t\t\t\tconsole.log(time, count);\n\t\t\t\twindow.alert('Average brush time: ' + time / count + ', max: ' + slow);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (points[i] < points[j]) {\n\t\t\t\tvar start = Date.now();\n\t\t\t\thistograms.logks.brush.extent([points[i], points[j]]);\n\t\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t\t\tvar end = Date.now();\n\t\t\t\ttime += end - start;\n\t\t\t\tslow = Math.max(slow, end - start);\n\t\t\t\tcount++;\n\t\t\t\t//  console.log(end - start);\n\t\t\t}\n\t\t\tj++;\n\t\t\tsetTimeout(bm, 0);\n\t\t}, 1000);\n\t}\n\t\n\texports.refreshAutoDots = refreshAutoDots;\n\texports.refreshAutoScale = refreshAutoScale;\n\texports.controller = controller;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.getPersistence = function getPersistence() {\n\t\treturn Number(document.getElementById('persistence').value);\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var slice = [].slice;\n\t\n\t  function queue(parallelism) {\n\t    var q,\n\t        tasks = [],\n\t        started = 0, // number of tasks that have been started (and perhaps finished)\n\t        active = 0, // number of tasks currently being executed (started but not finished)\n\t        remaining = 0, // number of tasks not yet finished\n\t        popping, // inside a synchronous task callback?\n\t        error = null,\n\t        await = noop,\n\t        all;\n\t\n\t    if (!parallelism) parallelism = Infinity;\n\t\n\t    function pop() {\n\t      while (popping = started < tasks.length && active < parallelism) {\n\t        var i = started++,\n\t            t = tasks[i],\n\t            a = slice.call(t, 1);\n\t        a.push(callback(i));\n\t        ++active;\n\t        t[0].apply(null, a);\n\t      }\n\t    }\n\t\n\t    function callback(i) {\n\t      return function(e, r) {\n\t        --active;\n\t        if (error != null) return;\n\t        if (e != null) {\n\t          error = e; // ignore new tasks and squelch active callbacks\n\t          started = remaining = NaN; // stop queued tasks from starting\n\t          notify();\n\t        } else {\n\t          tasks[i] = r;\n\t          if (--remaining) popping || pop();\n\t          else notify();\n\t        }\n\t      };\n\t    }\n\t\n\t    function notify() {\n\t      if (error != null) await(error);\n\t      else if (all) await(error, tasks);\n\t      else await.apply(null, [error].concat(tasks));\n\t    }\n\t\n\t    return q = {\n\t      defer: function() {\n\t        if (!error) {\n\t          tasks.push(arguments);\n\t          ++remaining;\n\t          pop();\n\t        }\n\t        return q;\n\t      },\n\t      await: function(f) {\n\t        await = f;\n\t        all = false;\n\t        if (!remaining) notify();\n\t        return q;\n\t      },\n\t      awaitAll: function(f) {\n\t        await = f;\n\t        all = true;\n\t        if (!remaining) notify();\n\t        return q;\n\t      }\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  queue.version = \"1.0.7\";\n\t  if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return queue; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n\t  else this.queue = queue;\n\t})();\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** build.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f34ecf7bdd8e438dcb18\n **/","var sv = require('./synteny-vis');\nvar main = require('./main');\n\nvar refreshAutoDots = sv.refreshAutoDots;\nvar refreshAutoScale = sv.refreshAutoScale;\n\nswitch (window.location.hash) {\n\tcase '#m':\n\tcase '#maize':\n\t\tmain.loadksData('./data/6807_8082.CDS-CDS.dcmegablast.tdd10.cs0.filtered.dag.all.go_D40_g20_A10.aligncoords.gcoords.ks', '6807', '8082', sv.controller);\n\t\tbreak;\n\n\tcase '#e':\n\tcase '#ecoli':\n\t\tmain.loadksData('./data/4241_4242.CDS-CDS.last.tdd10.cs0.filtered.dag.all.go_D20_g10_A5.aligncoords.gcoords.ks', '4241', '4242', sv.controller);\n\t\tbreak;\n\n\tcase '#a':\n\tcase '#arabidopsis':\n\t\tmain.loadksData('./data/16911_3068.CDS-CDS.last.tdd10.cs0.filtered.dag.all.go_D20_g10_A5.aligncoords.gcoords.ks', '16911', '3068', sv.controller);\n\t\tbreak;\n\n\tdefault:\n\tcase '#h':\n\tcase '#homo':\n\t\twindow.location.hash = '#homo';\n\t\tmain.loadksData('./data/11691_25577.CDS-CDS.last.tdd10.cs0.filtered.dag.all.go_D20_g10_A5.aligncoords.gcoords.ks', '11691', '25577', sv.controller);\n\t\tbreak;\n}\n\nwindow.refreshAutoScale = refreshAutoScale;\nwindow.refreshAutoDots = refreshAutoDots;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/top.js\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 1\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","exports.getComputedAttr = function getComputedAttr(element, attr) {\n\tvar computed = getComputedStyle(element)[attr];\n\treturn parseInt(computed, 10);\n};\n\nexports.translate = function translate(x, y) {\n\treturn 'translate(' + x + ',' + y + ')';\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","'use strict';\n\nvar util = require('./utils.js');\nvar _ = require('lodash');\nvar d3 = require('d3');\n\nvar SYNTENY_MARGIN = 50; /* Padding around synteny plot for axes */\nvar CIRCLE_RADIUS = 2;\nvar UNSELECTED_DOT_FILL = '#D0D0D0';\nvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\nvar DOTPLOT_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\n\nfunction synteny(id, dataObj, field, initialColorScale) {\n\n\tvar xExtent = [0, _.max(dataObj.getXLineOffsets())];\n\tvar yExtent = [0, _.max(dataObj.getYLineOffsets())];\n\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\n\tconst baseID = id.substring(1);\n\tconst svgElement = document.getElementById(baseID);\n\tvar computedWidth = util.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\tvar computedHeight = util.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\tvar windowAspectRatio = computedHeight / computedWidth;\n\n\tvar width;\n\tvar height;\n\n\tif (windowAspectRatio / dataAspectRatio > 1) {\n\t\twidth = computedWidth;\n\t\theight = dataAspectRatio * width;\n\t} else {\n\t\theight = computedHeight;\n\t\twidth = 1 / dataAspectRatio * height;\n\t}\n\n\td3.select(id).attr('width', width + 2 * SYNTENY_MARGIN);\n\td3.select(id).attr('height', height + 2 * SYNTENY_MARGIN);\n\n\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\n\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function() {\n\t\tvar t = d3.event.translate;\n\t\tvar s = d3.event.scale;\n\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t// prevents the translate from growing large. This way, you don't \n\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\tzoom.translate(t);\n\n\t\tbrushGroup.attr('transform', util.translate(t[0], t[1]) + 'scale(' + s + ')');\n\n\t\tvar tempXOffsets = _.filter(xOffsets, function(x) {\n\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t});\n\t\tvar tempXGaps = _.filter(xAxisTickValues, function(x) {\n\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t});\n\t\tvar tempYOffsets = _.filter(yOffsets, function(y) {\n\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t});\n\t\tvar tempYGaps = _.filter(yAxisTickValues, function(y) {\n\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t});\n\n\t\txLineAxis.tickValues(tempXOffsets);\n\t\txGapsAxis.tickValues(tempXGaps);\n\t\tyLineAxis.tickValues(tempYOffsets);\n\t\tyGapsAxis.tickValues(tempYGaps);\n\n\t\txAxisGapsGroup.call(xGapsAxis);\n\t\tyAxisGapsGroup.call(yGapsAxis);\n\t\txAxisLineGroup.call(xLineAxis);\n\t\tyAxisLineGroup.call(yLineAxis);\n\n\t\tsetSyntenyData('zoom');\n\t});\n\n\tfunction resizeBrushBoundary() {\n\t\tvar scaling = zoom.scale();\n\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\tvar vertical = ['.e', '.w'];\n\t\tvar horizontal = ['.n', '.s'];\n\t\tvar horizontalRescale = _.union(corners, vertical);\n\t\tvar verticalRescale = _.union(corners, horizontal);\n\n\t\t_.map(horizontalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t});\n\n\t\t_.map(verticalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t});\n\t}\n\n\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t * All sorts of nasty things happen when the scales get changed underneath a\n\t * brush. */\n\tvar brush = d3.svg.brush()\n\t\t.x(xScale.copy())\n\t\t.y(yScale.copy())\n\t\t.on('brush', function() {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t})\n\t\t.on('brushend', function() {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t}\n\t\t});\n\n\td3.select(id + '-canvas')\n\t\t.attr('width', width + 2 * SYNTENY_MARGIN)\n\t\t.attr('height', height + 2 * SYNTENY_MARGIN);\n\tvar context = document.getElementById(id.substring(1) + '-canvas').getContext('2d');\n\n\td3.select(id + '-canvas-bak')\n\t\t.attr('width', width + 2 * SYNTENY_MARGIN)\n\t\t.attr('height', height + 2 * SYNTENY_MARGIN);\n\tvar contextbak = document.getElementById(id.substring(1) + '-canvas-bak').getContext('2d');\n\n\tvar svg = d3.select(id);\n\n\tvar TEXT_OFFSET = 35;\n\tvar TEXT_BOX_HEIGHT = 25;\n\tsvg.append('text')\n\t\t.attr('x', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(dataObj.X_AXIS_ORGANISM_NAME);\n\n\tsvg.append('text')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN - TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(dataObj.Y_AXIS_ORGANISM_NAME);\n\n\tsvg\n\t\t.append('defs')\n\t\t.append('clipPath')\n\t\t.attr('id', 'plot-clip-box')\n\t\t.append('rect')\n\t\t.attr('x', 0)\n\t\t.attr('width', width)\n\t\t.attr('y', 0)\n\t\t.attr('height', height)\n\t\t.attr('fill', 'black');\n\n\tvar xOffsets = dataObj.getXLineOffsets();\n\tvar xPairs = _.zip(_.initial(xOffsets), _.rest(xOffsets));\n\tvar xAxisTickValues = _.map(xPairs, function(p) {\n\t\treturn (p[0] + p[1]) / 2;\n\t});\n\n\tvar xOffsetToNameMap = _.object(xAxisTickValues, dataObj.getXLineNames());\n\n\tvar xLineAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.tickValues(xOffsets)\n\t\t.tickFormat(_.constant(''))\n\t\t.orient('bottom')\n\t\t.tickSize(-height);\n\n\tvar xGapsAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.tickValues(xAxisTickValues)\n\t\t.tickFormat(function(x) {\n\t\t\treturn xOffsetToNameMap[x];\n\t\t})\n\t\t.orient('bottom')\n\t\t.tickSize(0);\n\n\tvar xAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, height + SYNTENY_MARGIN));\n\tvar xAxisGapsGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xGapsAxis);\n\tvar xAxisLineGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xLineAxis);\n\n\tvar yOffsets = dataObj.getYLineOffsets();\n\tvar yPairs = _.zip(_.initial(yOffsets), _.rest(yOffsets));\n\tvar yAxisTickValues = _.map(yPairs, function(p) {\n\t\treturn (p[0] + p[1]) / 2;\n\t});\n\tvar yOffsetToNameMap = _.object(yAxisTickValues, dataObj.getYLineNames());\n\n\tvar yLineAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.tickValues(yOffsets)\n\t\t.tickFormat(_.constant(''))\n\t\t.orient('left')\n\t\t.tickSize(-width);\n\n\tvar yGapsAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.tickValues(yAxisTickValues)\n\t\t.tickFormat(function(x) {\n\t\t\treturn yOffsetToNameMap[x];\n\t\t})\n\t\t.orient('left')\n\t\t.tickSize(0);\n\n\tvar yAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN));\n\tvar yAxisGapsGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yGapsAxis);\n\tvar yAxisLineGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yLineAxis);\n\n\tsvg = svg\n\t\t.append('g')\n\t\t.attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN))\n\t\t.append('g').attr('id', 'zoom-group')\n\t\t.call(zoom).on('mousedown.zoom', null); //disable panning\n\n\tvar brushGroup = svg\n\t\t.append('g').attr('clip-path', 'url(#plot-clip-box)')\n\t\t.append('g').attr('id', 'brush-group')\n\t\t.call(brush);\n\n\tvar colorScale = initialColorScale;\n\n\tfunction draw(elapsedMS, initialColorScale, finalColorScale, typeHint) {\n\t\tvar start = Date.now();\n\t\tvar gent = dataObj.getGEvNTMode();\n\n\t\tvar intermediateColorScale;\n\t\tif (elapsedMS === 0 && typeHint === 'data') {\n\t\t\tintermediateColorScale = finalColorScale;\n\t\t} else {\n\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\t}\n\n\t\tvar allData = dataObj.currentData();\n\t\tvar activeDots = allData.active;\n\t\tvar allDots = allData.raw;\n\n\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tif (typeHint === 'zoom') {\n\t\t\tcontextbak.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontextbak.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t_.each(allDots, function(dot) {\n\t\t\t\tvar d = dot[gent];\n\t\t\t\tvar cx = SYNTENY_MARGIN + xScale(d.x_relative_offset);\n\t\t\t\tvar cy = SYNTENY_MARGIN + yScale(d.y_relative_offset);\n\n\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN)\n\t\t\t\t\treturn;\n\n\t\t\t\tcontextbak.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t});\n\t\t}\n\n\t\t//console.log('Time to draw bg points:', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tcontext.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\n\t\t/* On top, active dots */\n\t\tvar minDomX = xScale.domain()[0];\n\t\tvar maxDomX = xScale.domain()[1];\n\t\tvar minDomY = yScale.domain()[0];\n\t\tvar maxDomY = yScale.domain()[1];\n\t\tvar minRanX = xScale.range()[0];\n\t\tvar maxRanX = xScale.range()[1];\n\t\tvar minRanY = yScale.range()[0];\n\t\tvar maxRanY = yScale.range()[1];\n\t\tvar widthDomX = maxDomX - minDomX;\n\t\tvar widthDomY = maxDomY - minDomY;\n\t\tvar widthRanX = maxRanX - minRanX;\n\t\tvar widthRanY = maxRanY - minRanY;\n\t\tvar xRatio = widthRanX / widthDomX;\n\t\tvar xShift = minDomX * xRatio + minRanX - SYNTENY_MARGIN;\n\t\tvar yRatio = widthRanY / widthDomY;\n\t\tvar yShift = maxDomY * yRatio + maxRanY - SYNTENY_MARGIN;\n\n\t\tvar groups = [];\n\t\tvar index = 0;\n\t\tfunction makeComp(v) {\n\t\t\treturn function(x) {\n\t\t\t\treturn x.roundedlogks < v;\n\t\t\t};\n\t\t}\n\t\twhile (index < activeDots.length) {\n\t\t\tvar lo = index;\n\t\t\tvar val = activeDots[index].roundedlogks;\n\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\troundedlogks: val\n\t\t\t}, makeComp(val));\n\t\t\tgroups.push([lo, index]);\n\t\t}\n\n\t\tfor (var g = 0; g < groups.length; g++) {\n\t\t\tvar group = groups[g];\n\t\t\tvar loIndex = group[0];\n\t\t\tvar hiIndex = group[1];\n\t\t\tcontext.fillStyle = intermediateColorScale(activeDots[loIndex].roundedlogks);\n\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\tvar dot = activeDots[i];\n\t\t\t\tvar d = dot[gent];\n\t\t\t\tvar cx = d.x_relative_offset * xRatio - xShift;\n\t\t\t\tvar cy = d.y_relative_offset * yRatio - yShift;\n\n\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t}\n\t\t}\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect(0, 0, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\tcontext.fillRect(0, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\tcontext.fillRect(SYNTENY_MARGIN + width, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\tcontext.fillRect(0, height + SYNTENY_MARGIN, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\n\t\tvar diff = Date.now() - start;\n\t\t//console.log('Start of call to end of draw call:', diff);\n\t\tif (elapsedMS > 0) {\n\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t}\n\t}\n\n\tfunction interpolateScales(a, b, t) {\n\t\tvar aDomain = a.domain();\n\t\tvar bDomain = b.domain();\n\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\tvar max = Math.max(aDomain[1], bDomain[1]);\n\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\tvar domain = _.range(min, max + 1, step);\n\t\tvar range = _.map(domain, function(input) {\n\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t});\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t}\n\n\tfunction setSyntenyData(typeHint) {\n\t\tif (typeHint == 'autoscale') return;\n\t\tdraw(0, colorScale, colorScale, typeHint);\n\t}\n\tdataObj.addListener(setSyntenyData);\n\tsetSyntenyData('zoom');\n\n\tfunction setNavigationMode(mode) {\n\t\tif (mode === 'pan') {\n\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t} else if (mode === 'brush') {\n\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t}\n\t}\n\n\tfunction setColorScale(newColorScale) {\n\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\tcolorScale = newColorScale;\n\t}\n\n\tfunction setField(f) {\n\t\tfield = f;\n\t\tsetSyntenyData();\n\t}\n\n\treturn {\n\t\tsetNavMode: setNavigationMode,\n\t\tsetColorScale: setColorScale,\n\t\tsetField: setField\n\t};\n}\n\nexports.synteny = synteny;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dotplot.js\n **/","'use strict';\n\nvar HISTOGRAM_MARGIN = 50; /* Padding around histogram */\nvar HISTOGRAM_Y_SCALE_TRANS_LEN = 750; /* How long a y-axis histogram rescale takes */\nvar HISTOGRAM_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\nvar NUM_HISTOGRAM_TICKS = 100;\nvar UNSELECTED_BAR_FILL = '#D0D0D0';\n\nvar SHOW_MAXIMA = true;\nvar SHOW_MINIMA = true;\n\nvar persist = require('./persistence');\nvar util = require('./utils');\nvar env = require('./window');\nvar _ = require('lodash');\nvar d3 = require('d3');\n\nfunction histogram(id, dataObj, field, initialColorScale) {\n\tvar dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\n\tvar plot = d3.select(id);\n\tvar plotWidth = util.getComputedAttr(plot.node(), 'width');\n\tvar plotHeight = util.getComputedAttr(plot.node(), 'height');\n\n\tvar prettyNames = {\n\t\tlogks: 'log(ks)',\n\t\tlogkn: 'log(kn)',\n\t\tlogkskn: 'log(ks/kn)'\n\t};\n\tplot.append('text')\n\t\t.attr('x', 2 * plotHeight / 3)\n\t\t.attr('width', plotHeight / 3)\n\t\t.attr('y', 50)\n\t\t.attr('height', 50)\n\t\t.classed('histogram-title', true)\n\t\t.text(prettyNames[field]);\n\n\tfunction plotBrushBrush() {\n\t\tif (!plotBrush.empty()) {\n\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t}\n\t}\n\n\tfunction plotBrushEnd() {\n\t\tif (plotBrush.empty()) {\n\t\t\tdataObj.removeDataFilter(field);\n\t\t}\n\t\tdataObj.notifyListeners('autoscale');\n\t}\n\n\tvar colorScale = initialColorScale;\n\tvar xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\n\tfunction makeBins() {\n\t\tvar n = NUM_HISTOGRAM_TICKS;\n\t\tvar min = dataExtent[0];\n\t\tvar max = dataExtent[1];\n\t\tvar range = max - min;\n\t\tvar step = range / n;\n\t\treturn _.range(min, max, step);\n\t}\n\n\tvar bins = makeBins();\n\tvar lastYExtent = [0, 3 / 2 * d3.max(_.pluck(dataObj.currentDataSummary(bins, field), 'y'))];\n\n\tvar yPlotScale = d3.scale.linear().domain(lastYExtent).range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\n\tvar autoScale;\n\n\tfunction getAutoScale() {\n\t\tconsole.log(autoScale);\n\t\tif (!autoScale) generateAutoScale(dataObj.currentDataSummary(bins, field), env.getPersistence());\n\t\treturn autoScale;\n\t}\n\n\tfunction generateAutoScale(summary, persistence) {\n\n\t\tfunction edgeDelta(A, e) {\n\t\t\treturn Math.abs(A[e[0]].y - A[e[1]].y);\n\t\t}\n\n\t\tfunction minimumDeltaEdge(A) {\n\t\t\tvar edges = _.zip(_.range(0, A.length - 1), _.range(1, A.length));\n\t\t\treturn _.min(edges, _.partial(edgeDelta, A));\n\t\t}\n\n\t\tvar mm = persist.removeNonExtrema(summary);\n\t\twhile (edgeDelta(mm, minimumDeltaEdge(mm)) < persistence) {\n\t\t\tvar e = minimumDeltaEdge(mm);\n\t\t\tif (e[0] === 0) {\n\t\t\t\tif (mm.length <= 3) break;\n\t\t\t\tmm.splice(1, 1);\n\t\t\t} else if (e[1] === mm.length - 1) {\n\t\t\t\tif (mm.length <= 3) break;\n\t\t\t\tmm.splice(mm.length - 2, 1);\n\t\t\t} else {\n\t\t\t\tif (mm.length <= 4) break;\n\t\t\t\tmm.splice(e[0], 1);\n\t\t\t}\n\t\t\tmm = persist.removeNonExtrema(mm);\n\t\t}\n\n\t\tmm = _.partition(mm, function(p, i, a) {\n\t\t\treturn i === 0 || i === a.length - 1 ||\n\t\t\t\tp.y > a[i - 1].y || p.y > a[i + 1].y;\n\t\t});\n\n\t\tvar maxima = mm[0];\n\t\tvar minima = mm[1];\n\n\t\tif (maxima.length > 3) {\n\t\t\tmaxima = _.chain(maxima).initial().rest().value();\n\t\t}\n\n\t\t_.each(maxima, function(m) {\n\t\t\t_.defaults(m, {\n\t\t\t\tmax: true\n\t\t\t});\n\t\t});\n\t\t_.each(minima, function(m) {\n\t\t\t_.defaults(m, {\n\t\t\t\tmax: false\n\t\t\t});\n\t\t});\n\n\t\tif (SHOW_MAXIMA || SHOW_MINIMA) {\n\t\t\tvar tempSelA = plot.selectAll('.maxMark').data(maxima.concat(minima));\n\t\t\ttempSelA.exit().remove();\n\t\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\t\ttempSelA\n\t\t\t\t.attr('cx', function(d) {\n\t\t\t\t\treturn xPlotScale(d.x + d.dx / 2);\n\t\t\t\t})\n\t\t\t\t.attr('cy', function(d) {\n\t\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t\t})\n\t\t\t\t.attr('r', 3)\n\t\t\t\t.attr('fill', function(d) {\n\t\t\t\t\treturn d.max ? 'red' : 'orange';\n\t\t\t\t})\n\t\t\t\t.attr('opacity', function(d) {\n\t\t\t\t\treturn ((d.max && SHOW_MAXIMA) || (!d.max && SHOW_MINIMA)) ? 1 : 0;\n\t\t\t\t});\n\t\t}\n\n\t\t_.each(maxima, function(m, i) {\n\t\t\tm.colorIndex = i;\n\t\t});\n\n\t\tvar combined = _.sortBy(minima.concat(maxima), 'x');\n\n\t\tvar colors = d3.scale.category10();\n\t\tautoScale = d3.scale.linear()\n\t\t\t.domain(_.map(combined, function(d) {\n\t\t\t\treturn d.x + d.dx / 2;\n\t\t\t}))\n\t\t\t.range(_.chain(combined).map(function(m) {\n\t\t\t\treturn m.max ? colors(m.colorIndex) : UNSELECTED_BAR_FILL;\n\t\t\t}).value());\n\t}\n\n\tvar plotBrush = d3.svg.brush()\n\t\t.x(xPlotScale)\n\t\t.on('brush', plotBrushBrush)\n\t\t.on('brushend', plotBrushEnd);\n\n\tvar dataBarSel = plot.selectAll('.dataBars')\n\t\t.data(bins)\n\t\t.enter()\n\t\t.append('rect').classed('dataBars', true);\n\n\tvar brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group')\n\t\t.attr('transform', util.translate(0, HISTOGRAM_MARGIN))\n\t\t.call(plotBrush);\n\tbrushSelectForBM.selectAll('rect')\n\t\t.attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\n\n\tvar xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\tvar yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\n\tplot.append('g')\n\t\t.attr('transform', util.translate(0, plotHeight - HISTOGRAM_MARGIN))\n\t\t.classed('xAxis', true).call(xAxis);\n\tvar yAxisSel = plot.append('g')\n\t\t.attr('transform', util.translate(HISTOGRAM_MARGIN, 0))\n\t\t.classed('yAxis', true).call(yAxis);\n\n\tfunction updatePlotAttrs(selection) {\n\t\tvar activeFunc = plotBrush.empty() ? _.constant(true) : function(bin) {\n\t\t\treturn bin.x + bin.dx > plotBrush.extent()[0] &&\n\t\t\t\tbin.x < plotBrush.extent()[1];\n\t\t};\n\t\tselection\n\t\t\t.attr('y', function(d) {\n\t\t\t\treturn yPlotScale(d.y);\n\t\t\t})\n\t\t\t.attr('height', function(d) {\n\t\t\t\treturn plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y);\n\t\t\t})\n\t\t\t.attr('fill', function(d) {\n\t\t\t\treturn activeFunc(d) ? colorScale(d.x + d.dx / 2) : 'grey';\n\t\t\t});\n\t}\n\n\tfunction updatePlot(typeHint) {\n\n\t\ttypeHint = typeHint || '';\n\t\tif (typeHint === 'initial') {\n\t\t\tdataBarSel\n\t\t\t\t.data(dataObj.currentDataSummary(bins, field))\n\t\t\t\t.attr('x', function(d) {\n\t\t\t\t\treturn xPlotScale(d.x);\n\t\t\t\t})\n\t\t\t\t.attr('width', function(d) {\n\t\t\t\t\treturn (xPlotScale(d.x + d.dx) - xPlotScale(d.x));\n\t\t\t\t});\n\t\t}\n\t\tvar data = dataObj.currentDataSummary(bins, field);\n\t\tif (typeHint === 'data-stop' || typeHint == 'autoscale')\n\t\t\tgenerateAutoScale(data, env.getPersistence());\n\n\t\tif (typeHint.indexOf('spatial-stop') >= 0 || typeHint === 'data-stop') {\n\t\t\tlastYExtent = [0, 3 / 2 * d3.max(_.pluck(data, 'y'))];\n\t\t\tyPlotScale.domain(lastYExtent);\n\t\t\tyAxisSel.transition()\n\t\t\t\t.duration(HISTOGRAM_Y_SCALE_TRANS_LEN)\n\t\t\t\t.call(yAxis);\n\t\t\t//      plot.selectAll('.dataBars')\n\t\t\tdataBarSel\n\t\t\t\t.data(data)\n\t\t\t\t.transition()\n\t\t\t\t.duration(HISTOGRAM_Y_SCALE_TRANS_LEN)\n\t\t\t\t.call(updatePlotAttrs);\n\n\t\t\tplot.selectAll('.maxMark')\n\t\t\t\t.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN)\n\t\t\t\t.attr('cy', function(d) {\n\t\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t\t});\n\t\t} else {\n\t\t\t//    plot.selectAll('.dataBars')\n\t\t\tdataBarSel\n\t\t\t\t.data(data)\n\t\t\t\t.call(updatePlotAttrs);\n\n\t\t// To disable sharp transitions, move that chunk above down here. \n\t\t}\n\t}\n\n\tupdatePlot('initial');\n\tdataObj.addListener(updatePlot);\n\n\tfunction setColorScale(newColorScale) {\n\t\t/*jshint -W087*/\n\t\t//debugger;\n\t\tconsole.log('set');\n\t\tcolorScale = newColorScale;\n\t\tplot.selectAll('.dataBars')\n\t\t\t.transition().duration(HISTOGRAM_COLOR_TRANS_LEN)\n\t\t\t.call(updatePlotAttrs);\n\t}\n\n\treturn {\n\t\tsetColorScale: setColorScale,\n\t\tgetAutoScale: getAutoScale,\n\t\trefreshAutoScale: updatePlot,\n\t\tbrush: plotBrush,\n\t\tsendBrushEvent: plotBrushBrush,\n\t\tselection: brushSelectForBM\n\t};\n}\n\nexports.histogram = histogram;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/histogram.js\n **/","'use strict';\n\nvar DATA_OP_TIMING = false;\n\nvar X_AXIS_ORGANISM_NAME;\nvar Y_AXIS_ORGANISM_NAME;\n\nvar queue = require('queue-async');\nvar _ = require('lodash');\nvar d3 = require('d3');\n\nvar loadksData = function(ks_filename, x_id, y_id, cb) {\n\tqueue()\n\t\t.defer(d3.text, ks_filename)\n\t\t//.defer(d3.json, 'https://genomevolution.org/coge/api/v1/genomes/' + x_id)\n\t\t//.defer(d3.json, 'https://genomevolution.org/coge/api/v1/genomes/' + y_id)\n\t\t.defer(d3.json, 'lengths/' + x_id + '.json')\n\t\t.defer(d3.json, 'lengths/' + y_id + '.json')\n\t\t.await(function(err, ks, x_len, y_len) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tX_AXIS_ORGANISM_NAME = x_len.organism.name;\n\t\t\tY_AXIS_ORGANISM_NAME = y_len.organism.name;\n\n\t\t\tvar ksData = ksTextToObjects(ks);\n\t\t\tvar xCumLenMap = lengthsToCumulativeBPCounts(x_len.chromosomes);\n\t\t\tvar yCumLenMap = lengthsToCumulativeBPCounts(y_len.chromosomes);\n\t\t\tvar inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\n\t\t\tvar ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tcb(ksDataObject);\n\t\t});\n};\n\nfunction ksTextToObjects(text) {\n\t/* .ks files are delimited with a combination of tabs and double bars. */\n\tvar csv = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '');\n\tvar ksLines = _.compact(csv.split('\\n'));\n\treturn _.chain(ksLines)\n\t\t.reject(function(line) {\n\t\t\treturn line[0] === '#';\n\t\t})\n\t\t.map(ksLineToSyntenyDot)\n\t\t.filter(function(line) {\n\t\t\treturn isFinite(line.logks) && isFinite(line.logkn);\n\t\t})\n\t\t.value();\n}\n\nfunction ksLineToSyntenyDot(line) {\n\tvar fields = line.split(',');\n\treturn {\n\t\tks: Number(fields[0]),\n\t\tlogks: Math.log(Number(fields[0])) / Math.log(10),\n\t\troundedlogks: Math.floor(Math.log(Number(fields[0])) / Math.log(10) * 10) / 10,\n\t\tkn: Number(fields[1]),\n\t\tlogkn: Math.log(Number(fields[1])) / Math.log(10),\n\t\tlogkskn: (Math.log(Number(fields[0])) - Math.log(Number(fields[1]))) / Math.log(10),\n\t\tx_chromosome_id: fields[3],\n\t\ty_chromosome_id: fields[15],\n\t\tge: {\n\t\t\tx_relative_offset: Number(fields[10]),\n\t\t\ty_relative_offset: Number(fields[22])\n\t\t},\n\t\tnt: {\n\t\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t\t}\n\t};\n}\n\nfunction lengthsToCumulativeBPCounts(len_list) {\n\tvar ntLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tvar geLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tvar nameLenList = _.chain(len_list)\n\t\t.sortBy('name')\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tvar geneCounts = _.reduce(len_list, function(map, kv) {\n\t\tmap[kv.name] = kv.gene_count;\n\t\treturn map;\n\t}, {});\n\n\treturn {\n\t\tnt: ntLenList,\n\t\tge: geLenList,\n\t\tname: nameLenList,\n\t\tgene_counts: geneCounts\n\t};\n}\n\n// Compute absolute BP offset from chromosome and relative offset\nfunction inlineKSData(ks, xmap, ymap) {\n\t_.each(ks, function(ksObj) {\n\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\tksObj.nt.x_relative_offset += xShift;\n\t\tksObj.nt.y_relative_offset += yShift;\n\n\t\tvar xNameShift = xmap.name[ksObj.x_chromosome_id];\n\t\tvar yNameShift = ymap.name[ksObj.y_chromosome_id];\n\t\txShift = xmap.ge[ksObj.x_chromosome_id];\n\t\tyShift = ymap.ge[ksObj.y_chromosome_id];\n\t\tksObj.ge.x_relative_offset -= xNameShift;\n\t\tksObj.ge.y_relative_offset -= yNameShift;\n\t\tksObj.ge.x_relative_offset += xShift;\n\t\tksObj.ge.y_relative_offset += yShift;\n\t});\n\treturn ks;\n}\n\nfunction between(low, high, field) {\n\tif (field) {\n\t\treturn function(x) {\n\t\t\treturn low <= x[field] && x[field] < high;\n\t\t};\n\t} else {\n\t\treturn function(x) {\n\t\t\treturn low <= x && x < high;\n\t\t};\n\t}\n}\n\nfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\tvar xmap = xmapPair.ge;\n\tvar ymap = ymapPair.ge;\n\tvar ret = {};\n\tconsole.log(xmap);\n\n\tvar sortedDots = {};\n\tvar dataFilters = {};\n\n\tret.X_AXIS_ORGANISM_NAME = X_AXIS_ORGANISM_NAME;\n\tret.Y_AXIS_ORGANISM_NAME = Y_AXIS_ORGANISM_NAME;\n\n\tret.getXLineOffsets = function() {\n\t\treturn _.chain(xmap).values().sortBy().value();\n\t};\n\n\tret.getYLineOffsets = function() {\n\t\treturn _.chain(ymap).values().sortBy().value();\n\t};\n\n\tvar gentMode = 'nt';\n\tret.setGEvNTMode = function(mode) {\n\t\tgentMode = mode;\n\t\txmap = xmapPair[mode];\n\t\tymap = ymapPair[mode];\n\t\tret.notifyListeners('ge-v-nt-change');\n\t};\n\n\tret.getGEvNTMode = function() {\n\t\treturn gentMode;\n\t};\n\n\tret.setOrder = function(field, descending) {\n\t\tsyntenyDots = _.sortBy(syntenyDots, field);\n\t\tif (descending) {\n\t\t\tsyntenyDots.reverse();\n\t\t}\n\t\tret.notifyListeners('order-change');\n\t};\n\n\tret.getXLineNames = function() {\n\t\treturn filterMapForNames(xmap);\n\t};\n\n\tret.getYLineNames = function() {\n\t\treturn filterMapForNames(ymap);\n\t};\n\n\tfunction filterMapForNames(map) {\n\t\treturn _.chain(map)\n\t\t\t.pairs()\n\t\t\t// Filter out short names\n\t\t\t//.reject(function(x, i, A) {\n\t\t\t//  return i > 0 && x[1] - A[i-1][1] < NUCLEOTIDE_LOWER_NAME_LIMIT;\n\t\t\t//})\n\t\t\t.sortBy('1')\n\t\t\t.pluck('0')\n\t\t\t.reject(function(x) {\n\t\t\t\treturn x === 'total';\n\t\t\t})\n\t\t\t.value();\n\t}\n\n\tfunction getFilterFunction() {\n\t\tvar s = dataFilters.spatial;\n\t\tvar l = dataFilters.logks;\n\t\tvar k = dataFilters.logkn;\n\t\tvar m = dataFilters.logkskn;\n\t\tif (s && l) {\n\t\t\treturn function(d) {\n\t\t\t\treturn s(d) && l(d);\n\t\t\t};\n\t\t}\n\t\tif (s) return s;\n\t\tif (l) return l;\n\t\treturn function(d) {\n\t\t\treturn (!s || s(d)) && (!l || l(d)) &&\n\t\t\t\t(!k || k(d)) && (!m || m(d));\n\t\t};\n\t}\n\n\tret.currentData = function currentData() {\n\t\treturn {\n\t\t\traw: syntenyDots,\n\t\t\tactive: _.filter(syntenyDots, getFilterFunction())\n\t\t};\n\t};\n\n\tret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t\tvar oldFilters = dataFilters;\n\t\tdataFilters = _.omit(dataFilters, field);\n\n\t\tif (!sortedDots[field]) {\n\t\t\tsortedDots[field] = _.sortBy(syntenyDots, field);\n\t\t}\n\n\t\tvar validPoints = _.filter(sortedDots[field], getFilterFunction());\n\t\tdataFilters = oldFilters;\n\n\t\tvar diff = ticks[1] - ticks[0];\n\n\t\tvar lastLow = 0;\n\t\treturn _.chain(ticks)\n\t\t\t.map(function(tick) {\n\t\t\t\tvar start = {},\n\t\t\t\t\tend = {};\n\t\t\t\tstart[field] = tick;\n\t\t\t\tend[field] = tick + diff;\n\t\t\t\tvar hi = _.sortedIndex(validPoints, end, field);\n\t\t\t\tvar ret = {\n\t\t\t\t\tx: tick,\n\t\t\t\t\tdx: diff,\n\t\t\t\t\ty: hi - lastLow\n\t\t\t\t};\n\t\t\t\tlastLow = hi;\n\t\t\t\treturn ret;\n\t\t\t}).value();\n\t};\n\n\tret.addSpatialFilter = function(extents, typeHint) {\n\t\tdataFilters.spatial = function(dot) {\n\t\t\treturn dot[gentMode].x_relative_offset >= extents[0][0] &&\n\t\t\t\tdot[gentMode].x_relative_offset <= extents[1][0] &&\n\t\t\t\tdot[gentMode].y_relative_offset >= extents[0][1] &&\n\t\t\t\tdot[gentMode].y_relative_offset <= extents[1][1];\n\t\t};\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.removeSpatialFilter = function(typeHint) {\n\t\tdelete dataFilters.spatial;\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.addDataFilter = function(extent, field, typeHint) {\n\t\tdataFilters[field] = between(extent[0], extent[1], field);\n\t\tret.notifyListeners(typeHint || 'data');\n\t};\n\n\tret.removeDataFilter = function(field) {\n\t\tdelete dataFilters[field]\n\t\t;\n\t\tret.notifyListeners('data-stop');\n\t};\n\n\tvar listeners = [];\n\tret.addListener = function(x) {\n\t\tlisteners.push(x);\n\t};\n\n\tret.notifyListeners = function(typeOfChange) {\n\t\t_.each(listeners, function(x) {\n\t\t\tx(typeOfChange);\n\t\t});\n\t};\n\n\tif (DATA_OP_TIMING) {\n\t\tvar t = ret.currentData;\n\t\tret.currentData = function() {\n\t\t\tvar start = Date.now();\n\t\t\tvar x = t();\n\t\t\tconsole.log('currentData', Date.now() - start);\n\t\t\treturn x;\n\t\t};\n\n\t\tvar s = ret.currentDataSummary;\n\t\tret.currentDataSummary = function(a, b) {\n\t\t\tvar start = Date.now();\n\t\t\tvar x = s(a, b);\n\t\t\tconsole.log('currentDataSummary', Date.now() - start);\n\t\t\treturn x;\n\t\t};\n\t\tvar r = ret.notifyListeners;\n\t\tret.notifyListeners = function(x) {\n\t\t\tconsole.log('notifyListeners');\n\t\t\tr(x);\n\t\t};\n\t}\n\tret.setOrder('logks', true);\n\tret.setGEvNTMode(gentMode);\n\treturn ret;\n}\n\nexports.loadksData = loadksData;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","'use strict';\n\nvar _ = require('lodash');\n/*\n * Given a list of\n *\n * [{y: <function value>}]\n *\n * remove all the objects that are not extrema; that is, remove the objects\n * that have a y-value that is not higher than both its neighbor's y-values\n * or lower than both its neighbor's y-values.\n *\n * The first and last point are never removed.\n */\nfunction removeNonExtrema(A) {\n\treturn _.filter(A, function(element, index) {\n\t\tif (index === 0 || index === A.length - 1)\n\t\t\treturn true;\n\n\t\tvar before = A[index - 1].y;\n\t\tvar here = element.y;\n\t\tvar after = A[index + 1].y;\n\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t});\n}\n\nexports.removeNonExtrema = removeNonExtrema;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/persistence.js\n **/","'use strict';\n\nvar histogram = require('./histogram');\nvar dotplot = require('./dotplot');\nvar _ = require('lodash');\nvar d3 = require('d3');\n\nvar COLOR_RANGES = {\n\trg: ['red', 'green'],\n\trg_quantized: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n\trainbow: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\trainbow_quantized: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange']\n};\n\nfunction refreshAutoScale() {\n\tvar radio = document.getElementById('color-options');\n\tvar auto = _.find(radio.children, {\n\t\tvalue: 'auto'\n\t});\n\tauto.checked = false;\n\tauto.click();\n}\n\nvar _refreshAutoDots;\nfunction refreshAutoDots() {\n\t_refreshAutoDots();\n}\n\nfunction controller(dataObj) {\n\n\t_refreshAutoDots = function() {\n\t\t_.each(histograms, function(h) {\n\t\t\th.refreshAutoScale('autoscale');\n\t\t});\n\t};\n\n\tvar syntenyPlot;\n\t/* zoom/pan switching */\n\td3.selectAll('#mouse-options input[name=mouse-options]')\n\t\t.on('change', function() {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\n\t/* summary mode switching */\n\td3.selectAll('#summary-options input[name=summary-options]')\n\t\t.on('change', function() {\n\t\t\tdataObj.setOrder('logks', this.value === 'minimum');\n\t\t});\n\n\t/* Plot variable switching */\n\td3.selectAll('#plot-var-options input[name=plot-var-options]')\n\t\t.on('change', function() {\n\t\t\thistograms[activeField].setColorScale(steelBlueCS);\n\t\t\tactiveField = this.value;\n\t\t\tsyntenyPlot.setField(activeField);\n\t\t\tvar newCS;\n\t\t\tif (activeCS === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][activeCS];\n\t\t\t}\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t});\n\n\t/* color mode switching */\n\tvar activeField = 'logks';\n\tvar activeCS = 'rg';\n\td3.selectAll('#color-options input[name=color-options]')\n\t\t.on('change', function() {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][this.value];\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\tactiveCS = this.value;\n\t\t});\n\n\tvar fields = ['logks', 'logkn', 'logkskn'];\n\tvar colorScales = _.chain(fields)\n\t\t.map(function(field) {\n\t\t\treturn [field, d3.extent(_.pluck(dataObj.currentData().raw, field))];\n\t\t})\n\t\t.object()\n\t\t.mapValues(function(extent) {\n\t\t\tvar max = extent[1];\n\t\t\tvar min = extent[0];\n\t\t\tvar range = max - min;\n\n\t\t\treturn _.mapValues(COLOR_RANGES, function(colorRange, colorScaleName) {\n\t\t\t\tvar step = range / (colorRange.length - 1);\n\t\t\t\t// Extra .5 * step is to avoid missing a value because of floating point precision\n\t\t\t\tvar domain = _.range(min, max + 0.5 * step, step);\n\n\t\t\t\tvar scale = colorScaleName.indexOf('quantized') > -1 ? d3.scale.quantize() : d3.scale.linear();\n\t\t\t\treturn scale.domain(domain).range(colorRange);\n\t\t\t});\n\t\t})\n\t\t.value();\n\n\n\tvar steelBlueCS = _.constant('steelblue');\n\tvar initialColorScale = colorScales[activeField].rg;\n\n\tsyntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initialColorScale);\n\tvar histograms = {\n\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initialColorScale),\n\t\t'logkn': histogram.histogram('#plot2', dataObj, 'logkn', steelBlueCS),\n\t\t'logkskn': histogram.histogram('#plot3', dataObj, 'logkskn', steelBlueCS)\n\t};\n\tdataObj.notifyListeners('initial');\n\n\tvar minLogKs = d3.min(_.pluck(dataObj.currentData().raw, 'logks'));\n\tvar maxLogKs = d3.max(_.pluck(dataObj.currentData().raw, 'logks'));\n\tvar points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\n\tvar i = 0;\n\tvar j = 0;\n\tvar count = 0;\n\tvar time = 0;\n\tvar slow = 0;\n\tsetTimeout(function bm() {\n\t\tif (j >= points.length) {\n\t\t\ti++;\n\t\t\tj = 0;\n\t\t}\n\t\tif (i >= points.length) {\n\t\t\tconsole.log(time, count);\n\t\t\twindow.alert('Average brush time: ' + (time / count) + ', max: ' + slow);\n\t\t\treturn;\n\t\t}\n\t\tif (points[i] < points[j]) {\n\t\t\tvar start = Date.now();\n\t\t\thistograms.logks.brush.extent([points[i], points[j]]);\n\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t\tvar end = Date.now();\n\t\t\ttime += end - start;\n\t\t\tslow = Math.max(slow, end - start);\n\t\t\tcount++;\n\t\t//  console.log(end - start);\n\t\t}\n\t\tj++;\n\t\tsetTimeout(bm, 0);\n\t}, 1000);\n}\n\nexports.refreshAutoDots = refreshAutoDots;\nexports.refreshAutoScale = refreshAutoScale;\nexports.controller = controller;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/synteny-vis.js\n **/","'use strict';\n\nexports.getPersistence = function getPersistence() {\n\treturn Number(document.getElementById('persistence').value);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/window.js\n **/","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/queue-async/queue.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 11\n ** module chunks = 0\n **/"],"sourceRoot":""}