const _ = require('lodash');

const lines = [
	'{name} .extent {',
	'  /* Brushes */',
	'  fill: grey;',
	'  opacity: .2;',
	'}',
	'{name} .domain {',
	'  /* Plot "dodotplot." This controls the axis lines on the histograms and the',
	'   * box around the dotplot */',
	'  fill: none;',
	'  stroke: black;',
	'}',
	'{name} #dotplot-canvas {',
	'  /* The float and position properties here are some sort of black magic to',
	'   * get the canvas and svg to sit on top of each other. */',
	'  float: left;',
	'  position: absolute;',
	'}',
	'{name} #dotplot-canvas-bak {',
	'  /* The float and position properties here are some sort of black magic to',
	'   * get the canvas and svg to sit on top of each other. */',
	'  float: left;',
	'  position: absolute;',
	'}',
	'{name} #dotplot {',
	'  float: left;',
	'  position: absolute;',
	'  width: 50%;',
	'  height: 100%;',
	'}',
	'{name} #dotplot .tick line {',
	'  /* chromosome boundary lines in dotplot */',
	'  stroke: grey;',
	'}',
	'{name} #histogram-wrapper {',
	'  float: right;',
	'  width: 50%;',
	'}',
	'{name} .histogram {',
	'  width: 100%;',
	'  height: 25%;',
	'}',
	'{name} .histogram .histogram-title {',
	'  font-size: 14pt;',
	'}',
	'{name} .histogram .tick line {',
	'  /* axis ticks for histograms */',
	'  stroke: grey;',
	'}',
	'{name} #form-wrapper {',
	'  position: absolute;',
	'  bottom: 10;',
	'  right: 10;',
	'  width: 50%;',
	'  height: 12%',
	'}',
	'{name} form {',
	'  display: inline;',
	'}'
];

const cssString = _.reduce(lines, (a,b) => a + '\n' + b);
exports.getStyleSheetForDiv = (name) => cssString.replace(/{name}/g, name);
