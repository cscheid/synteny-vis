{"version":3,"sources":["webpack:///synteny-dotplot-builder.js","webpack:///webpack/bootstrap 19967790e1d3b4832c6c","webpack:///./src/main.js","webpack:///./~/lodash/index.js","webpack:///./~/d3/d3.js","webpack:///./src/utils.js","webpack:///./src/async-benchmark.js","webpack:///./src/dotplot.js","webpack:///./src/generate-css.js","webpack:///./src/histogram.js","webpack:///./src/persistence.js","webpack:///./src/synteny-vis.js","webpack:///./src/window.js","webpack:///./~/queue-async/queue.js","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","ksTextToObjects","text","csv","replace","ksLines","_","compact","split","chain","reject","line","map","ksLineToSyntenyDot","filter","isFinite","logks","logkn","value","fields","ks","Number","Math","log","roundedlogks","floor","kn","logkskn","x_chromosome_id","y_chromosome_id","x_relative_offset","round","y_relative_offset","lengthsToCumulativeBPCounts","len_list","ntLenList","sortBy","reverse","reduce","kv","name","total","length","geLenList","gene_count","nameLenList","geneCounts","nt","ge","gene_counts","inlineKSData","xmap","ymap","each","ksObj","xShift","yShift","between","low","high","field","x","createDataObj","syntenyDots","xmapPair","ymapPair","filterMapForNames","pairs","pluck","getFilterFunction","s","dataFilters","spatial","l","k","d","ret","sortedDots","X_AXIS_ORGANISM_NAME","Y_AXIS_ORGANISM_NAME","getXLineOffsets","values","getYLineOffsets","gentMode","setGEvNTMode","mode","notifyListeners","getGEvNTMode","setOrder","descending","getXLineNames","getYLineNames","currentData","raw","active","currentDataSummary","ticks","oldFilters","omit","validPoints","diff","lastLow","tick","start","end","hi","sortedIndex","dx","y","addSpatialFilter","extents","typeHint","dot","removeSpatialFilter","addDataFilter","extent","removeDataFilter","listeners","addListener","push","typeOfChange","DATA_OP_TIMING","t","Date","now","console","a","b","r","queue","d3","sv","makeSyntenyDotPlot","_ref","data_url","element_id","genome_x","genome_y","defer","await","err","ksData","xCumLenMap","chromosomes","yCumLenMap","inlinedKSData","ksDataObject","controller","window","refreshAutoScale","refreshAutoDots","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","object","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","data","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","key","has","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","set","Set","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","Array","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","TypeError","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","getNative","isNative","transforms","size","input","Object","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","match","quote","reEscapeChar","chunk","drop","n","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","isString","sample","toArray","rand","shuffle","some","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Error","String","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","delay","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","snakeCase","startCase","e","method","methodOf","backflow","collect","compose","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","f","u","v","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","left","lo","right","d3_zipLength","d3_range_integerScale","d3_class","ctor","defineProperty","enumerable","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","i","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","z","on","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","j","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","top","margin","padding","border","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","d3_timer_sweep","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","join","specifier","d3_format_re","align","sign","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","date","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","getMonth","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","zips","transpose","matrix","entries","merged","empty","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","tsv","then","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","getComputedAttr","element","benchmark","tests","done","timeIt","arg","stats","totalTime","average","results","testIndex","runOne","synteny","dataObj","initialColorScale","resizeBrushBoundary","scaling","corners","vertical","horizontal","horizontalRescale","verticalRescale","draw","elapsedMS","finalColorScale","makeComp","intermediateColorScale","DOTPLOT_COLOR_TRANS_LEN","interpolateScales","allData","activeDots","allDots","contextbak","clearRect","SYNTENY_MARGIN","height","fillStyle","UNSELECTED_DOT_FILL","xScale","yScale","fillRect","CIRCLE_RADIUS","minDomX","maxDomX","minDomY","maxDomY","minRanX","maxRanX","minRanY","maxRanY","widthDomX","widthDomY","widthRanX","widthRanY","xRatio","yRatio","val","loIndex","hiIndex","aDomain","bDomain","NUM_COLOR_SCALE_INTERPOLATION_SAMPLES","setSyntenyData","colorScale","setNavigationMode","setColorScale","newColorScale","setField","dataAspectRatio","baseID","svgElement","getElementById","computedWidth","util","computedHeight","windowAspectRatio","brushGroup","tempXOffsets","xOffsets","tempXGaps","xAxisTickValues","tempYOffsets","yOffsets","tempYGaps","yAxisTickValues","xLineAxis","xGapsAxis","yLineAxis","yGapsAxis","xAxisGapsGroup","yAxisGapsGroup","xAxisLineGroup","yAxisLineGroup","getContext","TEXT_OFFSET","TEXT_BOX_HEIGHT","xPairs","xOffsetToNameMap","xAxisWrapper","yPairs","yOffsetToNameMap","yAxisWrapper","setNavMode","cssString","getStyleSheetForDiv","plotBrushBrush","plotBrush","plotBrushEnd","makeBins","NUM_HISTOGRAM_TICKS","dataExtent","getAutoScale","summary","extrema","persistence","simplify","env","getPersistence","autoScale","generateColorScaleFromExtrema","SHOW_MAXIMA_AND_MINIMA","updateMinMaxMarkers","isMaxima","shouldBeMarked","colors","_$partition","_$partition2","_slicedToArray","peaks","valleys","coloredPeaks","allPoints","UNSELECTED_BAR_FILL","markers","tempSelA","plot","xPlotScale","yPlotScale","updatePlotAttrs","activeFunc","plotHeight","HISTOGRAM_MARGIN","updatePlot","dataBarSel","lastYExtent","yAxisSel","HISTOGRAM_Y_SCALE_TRANS_LEN","yAxis","HISTOGRAM_COLOR_TRANS_LEN","plotWidth","prettyNames","brushSelectForBM","xAxis","sendBrushEvent","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","removeNonExtrema","here","gapBetweenPoints","indexOfSmallestPointDifference","_x","_x2","_again","dirtyPoints","toRemove","radio","auto","checked","_refreshAutoDots","buildDiv","makeForm","title","optionId","elements","checkIndex","navOptions","formWrapper","navForm","label","div","css","histogramWrapper","option","persistenceOptions","histograms","syntenyPlot","activeField","steelBlueCS","newCS","activeCS","colorScales","COLOR_RANGES","colorRange","colorScaleName","rg","dotplot","DO_BENCHMARK","_d3$extent","_d3$extent2","minLogKs","maxLogKs","rangeList","_ref2","asyncBenchmark","info","alert","rg_quantized","rainbow","rainbow_quantized","parallelism","popping","tasks","notify","awaitAll","webpackPolyfill","deprecate"],"mappings":"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","file":"synteny-dotplot-builder.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar DATA_OP_TIMING = false;\n\t\n\tvar X_AXIS_ORGANISM_NAME;\n\tvar Y_AXIS_ORGANISM_NAME;\n\t\n\tvar queue = __webpack_require__(11);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar sv = __webpack_require__(9);\n\t\n\texports.makeSyntenyDotPlot = function (_ref) {\n\t\tvar data_url = _ref.data_url;\n\t\tvar element_id = _ref.element_id;\n\t\tvar genome_x = _ref.genome_x;\n\t\tvar genome_y = _ref.genome_y;\n\t\n\t\tqueue().defer(d3.text, data_url).await(function (err, ks) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tX_AXIS_ORGANISM_NAME = genome_x.name;\n\t\t\tY_AXIS_ORGANISM_NAME = genome_y.name;\n\t\n\t\t\tvar ksData = ksTextToObjects(ks);\n\t\t\tvar xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t\t\tvar yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t\t\tvar inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\t\n\t\t\tvar ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tsv.controller(ksDataObject, element_id);\n\t\t});\n\t};\n\t\n\tfunction ksTextToObjects(text) {\n\t\t/* .ks files are delimited with a combination of tabs and double bars. */\n\t\tvar csv = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '');\n\t\tvar ksLines = _.compact(csv.split('\\n'));\n\t\treturn _.chain(ksLines).reject(function (line) {\n\t\t\treturn line[0] === '#';\n\t\t}).map(ksLineToSyntenyDot).filter(function (line) {\n\t\t\treturn isFinite(line.logks) && isFinite(line.logkn);\n\t\t}).value();\n\t}\n\t\n\tfunction ksLineToSyntenyDot(line) {\n\t\tvar fields = line.split(',');\n\t\treturn {\n\t\t\tks: Number(fields[0]),\n\t\t\tlogks: Math.log(Number(fields[0])) / Math.log(10),\n\t\t\troundedlogks: Math.floor(Math.log(Number(fields[0])) / Math.log(10) * 10) / 10,\n\t\t\tkn: Number(fields[1]),\n\t\t\tlogkn: Math.log(Number(fields[1])) / Math.log(10),\n\t\t\tlogkskn: (Math.log(Number(fields[0])) - Math.log(Number(fields[1]))) / Math.log(10),\n\t\t\tx_chromosome_id: fields[3],\n\t\t\ty_chromosome_id: fields[15],\n\t\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t\t};\n\t}\n\t\n\tfunction lengthsToCumulativeBPCounts(len_list) {\n\t\tvar ntLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar nameLenList = _.chain(len_list).sortBy('name').reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geneCounts = _.reduce(len_list, function (map, kv) {\n\t\t\tmap[kv.name] = kv.gene_count;\n\t\t\treturn map;\n\t\t}, {});\n\t\n\t\treturn {\n\t\t\tnt: ntLenList,\n\t\t\tge: geLenList,\n\t\t\tname: nameLenList,\n\t\t\tgene_counts: geneCounts\n\t\t};\n\t}\n\t\n\t// Compute absolute BP offset from chromosome and relative offset\n\tfunction inlineKSData(ks, xmap, ymap) {\n\t\t_.each(ks, function (ksObj) {\n\t\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\t\tksObj.x_relative_offset += xShift;\n\t\t\tksObj.y_relative_offset += yShift;\n\t\t});\n\t\treturn ks;\n\t}\n\t\n\tfunction between(low, high, field) {\n\t\tif (field) {\n\t\t\treturn function (x) {\n\t\t\t\treturn low <= x[field] && x[field] < high;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function (x) {\n\t\t\t\treturn low <= x && x < high;\n\t\t\t};\n\t\t}\n\t}\n\t\n\tfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\t\tvar xmap = xmapPair.ge;\n\t\tvar ymap = ymapPair.ge;\n\t\tvar ret = {};\n\t\n\t\tvar sortedDots = {};\n\t\tvar dataFilters = {};\n\t\n\t\tret.X_AXIS_ORGANISM_NAME = X_AXIS_ORGANISM_NAME;\n\t\tret.Y_AXIS_ORGANISM_NAME = Y_AXIS_ORGANISM_NAME;\n\t\n\t\tret.getXLineOffsets = function () {\n\t\t\treturn _.chain(xmap).values().sortBy().value();\n\t\t};\n\t\n\t\tret.getYLineOffsets = function () {\n\t\t\treturn _.chain(ymap).values().sortBy().value();\n\t\t};\n\t\n\t\tvar gentMode = 'nt';\n\t\tret.setGEvNTMode = function (mode) {\n\t\t\tgentMode = mode;\n\t\t\txmap = xmapPair[mode];\n\t\t\tymap = ymapPair[mode];\n\t\t\tret.notifyListeners('ge-v-nt-change');\n\t\t};\n\t\n\t\tret.getGEvNTMode = function () {\n\t\t\treturn gentMode;\n\t\t};\n\t\n\t\tret.setOrder = function (field, descending) {\n\t\t\tsyntenyDots = _.sortBy(syntenyDots, field);\n\t\t\tif (descending) {\n\t\t\t\tsyntenyDots.reverse();\n\t\t\t}\n\t\t\tret.notifyListeners('order-change');\n\t\t};\n\t\n\t\tret.getXLineNames = function () {\n\t\t\treturn filterMapForNames(xmap);\n\t\t};\n\t\n\t\tret.getYLineNames = function () {\n\t\t\treturn filterMapForNames(ymap);\n\t\t};\n\t\n\t\tfunction filterMapForNames(map) {\n\t\t\treturn _.chain(map).pairs()\n\t\t\t// Filter out short names\n\t\t\t//.reject(function(x, i, A) {\n\t\t\t//  return i > 0 && x[1] - A[i-1][1] < NUCLEOTIDE_LOWER_NAME_LIMIT;\n\t\t\t//})\n\t\t\t.sortBy('1').pluck('0').reject(function (x) {\n\t\t\t\treturn x === 'total';\n\t\t\t}).value();\n\t\t}\n\t\n\t\tfunction getFilterFunction() {\n\t\t\tvar s = dataFilters.spatial;\n\t\t\tvar l = dataFilters.logks;\n\t\t\tvar k = dataFilters.logkn;\n\t\t\tvar m = dataFilters.logkskn;\n\t\t\tif (s && l) {\n\t\t\t\treturn function (d) {\n\t\t\t\t\treturn s(d) && l(d);\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (s && !(l || k || m)) return s;\n\t\t\tif (l && !(s || k || m)) return l;\n\t\t\treturn function (d) {\n\t\t\t\treturn (!s || s(d)) && (!l || l(d)) && (!k || k(d)) && (!m || m(d));\n\t\t\t};\n\t\t}\n\t\n\t\tret.currentData = function currentData() {\n\t\t\treturn {\n\t\t\t\traw: syntenyDots,\n\t\t\t\tactive: _.filter(syntenyDots, getFilterFunction())\n\t\t\t};\n\t\t};\n\t\n\t\tret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t\t\tvar oldFilters = dataFilters;\n\t\t\tdataFilters = _.omit(dataFilters, field);\n\t\n\t\t\tif (!sortedDots[field]) {\n\t\t\t\tsortedDots[field] = _.sortBy(syntenyDots, field);\n\t\t\t}\n\t\n\t\t\tvar validPoints = _.filter(sortedDots[field], getFilterFunction());\n\t\t\tdataFilters = oldFilters;\n\t\n\t\t\tvar diff = ticks[1] - ticks[0];\n\t\n\t\t\tvar lastLow = 0;\n\t\t\treturn _.chain(ticks).map(function (tick) {\n\t\t\t\tvar start = {},\n\t\t\t\t    end = {};\n\t\t\t\tstart[field] = tick;\n\t\t\t\tend[field] = tick + diff;\n\t\t\t\tvar hi = _.sortedIndex(validPoints, end, field);\n\t\t\t\tvar ret = {\n\t\t\t\t\tx: tick,\n\t\t\t\t\tdx: diff,\n\t\t\t\t\ty: hi - lastLow\n\t\t\t\t};\n\t\t\t\tlastLow = hi;\n\t\t\t\treturn ret;\n\t\t\t}).value();\n\t\t};\n\t\n\t\tret.addSpatialFilter = function (extents, typeHint) {\n\t\t\tdataFilters.spatial = function (dot) {\n\t\t\t\treturn dot.x_relative_offset >= extents[0][0] && dot.x_relative_offset <= extents[1][0] && dot.y_relative_offset >= extents[0][1] && dot.y_relative_offset <= extents[1][1];\n\t\t\t};\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.removeSpatialFilter = function (typeHint) {\n\t\t\tdelete dataFilters.spatial;\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.addDataFilter = function (extent, field, typeHint) {\n\t\t\tdataFilters[field] = between(extent[0], extent[1], field);\n\t\t\tret.notifyListeners(typeHint || 'data');\n\t\t};\n\t\n\t\tret.removeDataFilter = function (field) {\n\t\t\tdelete dataFilters[field];\n\t\t\tret.notifyListeners('data-stop');\n\t\t};\n\t\n\t\tvar listeners = [];\n\t\tret.addListener = function (x) {\n\t\t\tlisteners.push(x);\n\t\t};\n\t\n\t\tret.notifyListeners = function (typeOfChange) {\n\t\t\t_.each(listeners, function (x) {\n\t\t\t\tx(typeOfChange);\n\t\t\t});\n\t\t};\n\t\n\t\tif (DATA_OP_TIMING) {\n\t\t\tvar t = ret.currentData;\n\t\t\tret.currentData = function () {\n\t\t\t\tvar start = Date.now();\n\t\t\t\tvar x = t();\n\t\t\t\tconsole.log('currentData', Date.now() - start);\n\t\t\t\treturn x;\n\t\t\t};\n\t\n\t\t\tvar s = ret.currentDataSummary;\n\t\t\tret.currentDataSummary = function (a, b) {\n\t\t\t\tvar start = Date.now();\n\t\t\t\tvar x = s(a, b);\n\t\t\t\tconsole.log('currentDataSummary', Date.now() - start);\n\t\t\t\treturn x;\n\t\t\t};\n\t\t\tvar r = ret.notifyListeners;\n\t\t\tret.notifyListeners = function (x) {\n\t\t\t\tconsole.log('notifyListeners');\n\t\t\t\tr(x);\n\t\t\t};\n\t\t}\n\t\tret.setOrder('logks', true);\n\t\tret.setGEvNTMode(gentMode);\n\t\treturn ret;\n\t}\n\t\n\t// We need to expose this to the outside world.\n\twindow.makeSyntenyDotPlot = exports.makeSyntenyDotPlot;\n\t\n\t// hacks. this should get moved.\n\twindow.refreshAutoScale = sv.refreshAutoScale;\n\twindow.refreshAutoDots = sv.refreshAutoDots;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)(module), (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.getComputedAttr = function getComputedAttr(element, attr) {\n\t\tvar computed = getComputedStyle(element)[attr];\n\t\treturn parseInt(computed, 10);\n\t};\n\t\n\texports.translate = function translate(x, y) {\n\t\treturn 'translate(' + x + ',' + y + ')';\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\t/*\n\t * I want to run a benchmark, but I don't want to block UI updates \n\t * in between iterations.\n\t *\n\t * My guess is that this isn't super accurate for fast functions.\n\t */\n\texports.benchmark = function (tests, f, done) {\n\t\n\t\tvar results = [];\n\t\tvar testIndex = 0;\n\t\n\t\tsetTimeout(function runOne() {\n\t\t\tif (testIndex >= tests.length) return done(stats(results));\n\t\n\t\t\tvar time = timeIt(f, tests[testIndex++]);\n\t\t\tresults.push(time);\n\t\n\t\t\tsetTimeout(runOne, 0);\n\t\t}, 0);\n\t\n\t\tfunction timeIt(f, arg) {\n\t\t\tvar start = Date.now();\n\t\t\tf(arg);\n\t\t\treturn Date.now() - start;\n\t\t}\n\t\n\t\tfunction stats(times) {\n\t\t\treturn {\n\t\t\t\ttotalTime: _.sum(times),\n\t\t\t\tcount: times.length,\n\t\t\t\tmax: _.max(times),\n\t\t\t\taverage: _.sum(times) / times.length\n\t\t\t};\n\t\t}\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar util = __webpack_require__(3);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\tvar SYNTENY_MARGIN = 50; /* Padding around synteny plot for axes */\n\tvar CIRCLE_RADIUS = 2;\n\tvar UNSELECTED_DOT_FILL = '#D0D0D0';\n\tvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\n\tvar DOTPLOT_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\n\t\n\tfunction synteny(id, dataObj, field, initialColorScale) {\n\t\n\t\tvar xExtent = [0, _.max(dataObj.getXLineOffsets())];\n\t\tvar yExtent = [0, _.max(dataObj.getYLineOffsets())];\n\t\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\t\n\t\tvar baseID = id.substring(1);\n\t\tvar svgElement = document.getElementById(baseID);\n\t\tvar computedWidth = util.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\t\tvar computedHeight = util.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\t\tvar windowAspectRatio = computedHeight / computedWidth;\n\t\n\t\tvar width;\n\t\tvar height;\n\t\n\t\tif (windowAspectRatio / dataAspectRatio > 1) {\n\t\t\twidth = computedWidth;\n\t\t\theight = dataAspectRatio * width;\n\t\t} else {\n\t\t\theight = computedHeight;\n\t\t\twidth = 1 / dataAspectRatio * height;\n\t\t}\n\t\n\t\td3.select(id).attr('width', width + 2 * SYNTENY_MARGIN);\n\t\td3.select(id).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\n\t\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\t\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\t\n\t\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function () {\n\t\t\tvar t = d3.event.translate;\n\t\t\tvar s = d3.event.scale;\n\t\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t\t// prevents the translate from growing large. This way, you don't\n\t\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\t\tzoom.translate(t);\n\t\n\t\t\tbrushGroup.attr('transform', util.translate(t[0], t[1]) + 'scale(' + s + ')');\n\t\n\t\t\tvar tempXOffsets = _.filter(xOffsets, function (x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t});\n\t\t\tvar tempXGaps = _.filter(xAxisTickValues, function (x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t});\n\t\t\tvar tempYOffsets = _.filter(yOffsets, function (y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t});\n\t\t\tvar tempYGaps = _.filter(yAxisTickValues, function (y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t});\n\t\n\t\t\txLineAxis.tickValues(tempXOffsets);\n\t\t\txGapsAxis.tickValues(tempXGaps);\n\t\t\tyLineAxis.tickValues(tempYOffsets);\n\t\t\tyGapsAxis.tickValues(tempYGaps);\n\t\n\t\t\txAxisGapsGroup.call(xGapsAxis);\n\t\t\tyAxisGapsGroup.call(yGapsAxis);\n\t\t\txAxisLineGroup.call(xLineAxis);\n\t\t\tyAxisLineGroup.call(yLineAxis);\n\t\n\t\t\tsetSyntenyData('zoom');\n\t\t});\n\t\n\t\tfunction resizeBrushBoundary() {\n\t\t\tvar scaling = zoom.scale();\n\t\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\t\tvar vertical = ['.e', '.w'];\n\t\t\tvar horizontal = ['.n', '.s'];\n\t\t\tvar horizontalRescale = _.union(corners, vertical);\n\t\t\tvar verticalRescale = _.union(corners, horizontal);\n\t\n\t\t\t_.map(horizontalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t\t});\n\t\n\t\t\t_.map(verticalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t\t});\n\t\t}\n\t\n\t\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t  * All sorts of nasty things happen when the scales get changed underneath a\n\t  * brush. */\n\t\tvar brush = d3.svg.brush().x(xScale.copy()).y(yScale.copy()).on('brush', function () {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t}).on('brushend', function () {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t}\n\t\t});\n\t\n\t\td3.select(id + '-canvas').attr('width', width + 2 * SYNTENY_MARGIN).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\tvar context = document.getElementById(id.substring(1) + '-canvas').getContext('2d');\n\t\n\t\td3.select(id + '-canvas-bak').attr('width', width + 2 * SYNTENY_MARGIN).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\tvar contextbak = document.getElementById(id.substring(1) + '-canvas-bak').getContext('2d');\n\t\n\t\tvar svg = d3.select(id);\n\t\n\t\tvar TEXT_OFFSET = 35;\n\t\tvar TEXT_BOX_HEIGHT = 25;\n\t\tsvg.append('text').attr('x', (width + 2 * SYNTENY_MARGIN) / 3).attr('width', (width + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(dataObj.X_AXIS_ORGANISM_NAME);\n\t\n\t\tsvg.append('text').attr('transform', 'rotate(-90)').attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3).attr('width', (height + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN - TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(dataObj.Y_AXIS_ORGANISM_NAME);\n\t\n\t\tsvg.append('defs').append('clipPath').attr('id', 'plot-clip-box').append('rect').attr('x', 0).attr('width', width).attr('y', 0).attr('height', height).attr('fill', 'black');\n\t\n\t\tvar xOffsets = dataObj.getXLineOffsets();\n\t\tvar xPairs = _.zip(_.initial(xOffsets), _.rest(xOffsets));\n\t\tvar xAxisTickValues = _.map(xPairs, function (p) {\n\t\t\treturn (p[0] + p[1]) / 2;\n\t\t});\n\t\n\t\tvar xOffsetToNameMap = _.object(xAxisTickValues, dataObj.getXLineNames());\n\t\n\t\tvar xLineAxis = d3.svg.axis().scale(xScale).tickValues(xOffsets).tickFormat(_.constant('')).orient('bottom').tickSize(-height);\n\t\n\t\tvar xGapsAxis = d3.svg.axis().scale(xScale).tickValues(xAxisTickValues).tickFormat(function (x) {\n\t\t\treturn xOffsetToNameMap[x];\n\t\t}).orient('bottom').tickSize(0);\n\t\n\t\tvar xAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, height + SYNTENY_MARGIN));\n\t\tvar xAxisGapsGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xGapsAxis);\n\t\tvar xAxisLineGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xLineAxis);\n\t\n\t\tvar yOffsets = dataObj.getYLineOffsets();\n\t\tvar yPairs = _.zip(_.initial(yOffsets), _.rest(yOffsets));\n\t\tvar yAxisTickValues = _.map(yPairs, function (p) {\n\t\t\treturn (p[0] + p[1]) / 2;\n\t\t});\n\t\tvar yOffsetToNameMap = _.object(yAxisTickValues, dataObj.getYLineNames());\n\t\n\t\tvar yLineAxis = d3.svg.axis().scale(yScale).tickValues(yOffsets).tickFormat(_.constant('')).orient('left').tickSize(-width);\n\t\n\t\tvar yGapsAxis = d3.svg.axis().scale(yScale).tickValues(yAxisTickValues).tickFormat(function (x) {\n\t\t\treturn yOffsetToNameMap[x];\n\t\t}).orient('left').tickSize(0);\n\t\n\t\tvar yAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN));\n\t\tvar yAxisGapsGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yGapsAxis);\n\t\tvar yAxisLineGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yLineAxis);\n\t\n\t\tsvg = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN)).append('g').attr('id', 'zoom-group').call(zoom).on('mousedown.zoom', null); //disable panning\n\t\n\t\tvar brushGroup = svg.append('g').attr('clip-path', 'url(#plot-clip-box)').append('g').attr('id', 'brush-group').call(brush);\n\t\n\t\tvar colorScale = initialColorScale;\n\t\n\t\tfunction draw(elapsedMS, initialColorScale, finalColorScale, typeHint) {\n\t\t\tvar start = Date.now();\n\t\n\t\t\tvar intermediateColorScale;\n\t\t\tif (elapsedMS === 0 && typeHint === 'data') {\n\t\t\t\tintermediateColorScale = finalColorScale;\n\t\t\t} else {\n\t\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\t\t}\n\t\n\t\t\tvar allData = dataObj.currentData();\n\t\t\tvar activeDots = allData.active;\n\t\t\tvar allDots = allData.raw;\n\t\n\t\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tif (typeHint === 'zoom') {\n\t\t\t\tcontextbak.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\t\tcontextbak.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t\t_.each(allDots, function (d) {\n\t\t\t\t\tvar cx = SYNTENY_MARGIN + xScale(d.x_relative_offset);\n\t\t\t\t\tvar cy = SYNTENY_MARGIN + yScale(d.y_relative_offset);\n\t\n\t\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN) return;\n\t\n\t\t\t\t\tcontextbak.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t//console.log('Time to draw bg points:', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tcontext.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\n\t\t\t/* On top, active dots */\n\t\t\tvar minDomX = xScale.domain()[0];\n\t\t\tvar maxDomX = xScale.domain()[1];\n\t\t\tvar minDomY = yScale.domain()[0];\n\t\t\tvar maxDomY = yScale.domain()[1];\n\t\t\tvar minRanX = xScale.range()[0];\n\t\t\tvar maxRanX = xScale.range()[1];\n\t\t\tvar minRanY = yScale.range()[0];\n\t\t\tvar maxRanY = yScale.range()[1];\n\t\t\tvar widthDomX = maxDomX - minDomX;\n\t\t\tvar widthDomY = maxDomY - minDomY;\n\t\t\tvar widthRanX = maxRanX - minRanX;\n\t\t\tvar widthRanY = maxRanY - minRanY;\n\t\t\tvar xRatio = widthRanX / widthDomX;\n\t\t\tvar xShift = minDomX * xRatio + minRanX - SYNTENY_MARGIN;\n\t\t\tvar yRatio = widthRanY / widthDomY;\n\t\t\tvar yShift = maxDomY * yRatio + maxRanY - SYNTENY_MARGIN;\n\t\n\t\t\tvar groups = [];\n\t\t\tvar index = 0;\n\t\t\tfunction makeComp(v) {\n\t\t\t\treturn function (x) {\n\t\t\t\t\treturn x.roundedlogks < v;\n\t\t\t\t};\n\t\t\t}\n\t\t\twhile (index < activeDots.length) {\n\t\t\t\tvar lo = index;\n\t\t\t\tvar val = activeDots[index].roundedlogks;\n\t\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\t\troundedlogks: val\n\t\t\t\t}, makeComp(val));\n\t\t\t\tgroups.push([lo, index]);\n\t\t\t}\n\t\n\t\t\tfor (var g = 0; g < groups.length; g++) {\n\t\t\t\tvar group = groups[g];\n\t\t\t\tvar loIndex = group[0];\n\t\t\t\tvar hiIndex = group[1];\n\t\t\t\tcontext.fillStyle = intermediateColorScale(activeDots[loIndex].roundedlogks);\n\t\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\t\tvar d = activeDots[i];\n\t\t\t\t\tvar cx = d.x_relative_offset * xRatio - xShift;\n\t\t\t\t\tvar cy = d.y_relative_offset * yRatio - yShift;\n\t\n\t\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN) continue;\n\t\n\t\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect(0, 0, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(0, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(SYNTENY_MARGIN + width, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(0, height + SYNTENY_MARGIN, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\n\t\t\tvar diff = Date.now() - start;\n\t\t\t//console.log('Start of call to end of draw call:', diff);\n\t\t\tif (elapsedMS > 0) {\n\t\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction interpolateScales(a, b, t) {\n\t\t\tvar aDomain = a.domain();\n\t\t\tvar bDomain = b.domain();\n\t\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\t\tvar max = Math.max(aDomain[1], bDomain[1]);\n\t\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\t\tvar domain = _.range(min, max + 1, step);\n\t\t\tvar range = _.map(domain, function (input) {\n\t\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t\t});\n\t\t\treturn d3.scale.linear().domain(domain).range(range);\n\t\t}\n\t\n\t\tfunction setSyntenyData(typeHint) {\n\t\t\tif (typeHint == 'autoscale') return;\n\t\t\tdraw(0, colorScale, colorScale, typeHint);\n\t\t}\n\t\tdataObj.addListener(setSyntenyData);\n\t\tsetSyntenyData('zoom');\n\t\n\t\tfunction setNavigationMode(mode) {\n\t\t\tif (mode === 'pan') {\n\t\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t\t} else if (mode === 'brush') {\n\t\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\t\tcolorScale = newColorScale;\n\t\t}\n\t\n\t\tfunction setField(f) {\n\t\t\tfield = f;\n\t\t\tsetSyntenyData();\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetNavMode: setNavigationMode,\n\t\t\tsetColorScale: setColorScale,\n\t\t\tsetField: setField\n\t\t};\n\t}\n\t\n\texports.synteny = synteny;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tvar lines = ['{name} .extent {', '  /* Brushes */', '  fill: grey;', '  opacity: .2;', '}', '{name} .domain {', '  /* Plot \"dodotplot.\" This controls the axis lines on the histograms and the', '   * box around the dotplot */', '  fill: none;', '  stroke: black;', '}', '{name} #dotplot-canvas {', '  /* The float and position properties here are some sort of black magic to', '   * get the canvas and svg to sit on top of each other. */', '  float: left;', '  position: absolute;', '}', '{name} #dotplot-canvas-bak {', '  /* The float and position properties here are some sort of black magic to', '   * get the canvas and svg to sit on top of each other. */', '  float: left;', '  position: absolute;', '}', '{name} #dotplot {', '  float: left;', '  position: absolute;', '  width: 50%;', '  height: 100%;', '}', '{name} #dotplot .tick line {', '  /* chromosome boundary lines in dotplot */', '  stroke: grey;', '}', '{name} #histogram-wrapper {', '  float: right;', '  width: 50%;', '}', '{name} .histogram {', '  width: 100%;', '  height: 25%;', '}', '{name} .histogram .histogram-title {', '  font-size: 14pt;', '}', '{name} .histogram .tick line {', '  /* axis ticks for histograms */', '  stroke: grey;', '}', '{name} #form-wrapper {', '  position: absolute;', '  bottom: 10;', '  right: 10;', '  width: 50%;', '  height: 12%', '}', '{name} form {', '  display: inline;', '}'];\n\t\n\tvar cssString = _.reduce(lines, function (a, b) {\n\t\treturn a + '\\n' + b;\n\t});\n\texports.getStyleSheetForDiv = function (name) {\n\t\treturn cssString.replace(/{name}/g, name);\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar HISTOGRAM_MARGIN = 50; /* Padding around histogram */\n\tvar HISTOGRAM_Y_SCALE_TRANS_LEN = 750; /* How long a y-axis histogram rescale takes */\n\tvar HISTOGRAM_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\n\tvar NUM_HISTOGRAM_TICKS = 100;\n\tvar UNSELECTED_BAR_FILL = '#D0D0D0';\n\t\n\tvar SHOW_MAXIMA_AND_MINIMA = true;\n\t\n\tvar persistence = __webpack_require__(8);\n\tvar util = __webpack_require__(3);\n\tvar env = __webpack_require__(10);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\tfunction histogram(id, dataObj, field, initialColorScale) {\n\t\tvar dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\t\n\t\tvar plot = d3.select(id);\n\t\tvar plotWidth = util.getComputedAttr(plot.node(), 'width');\n\t\tvar plotHeight = util.getComputedAttr(plot.node(), 'height');\n\t\n\t\tvar prettyNames = {\n\t\t\tlogks: 'log(ks)',\n\t\t\tlogkn: 'log(kn)',\n\t\t\tlogkskn: 'log(ks/kn)'\n\t\t};\n\t\tplot.append('text').attr('x', 2 * plotHeight / 3).attr('width', plotHeight / 3).attr('y', 50).attr('height', 50).classed('histogram-title', true).text(prettyNames[field]);\n\t\n\t\tfunction plotBrushBrush() {\n\t\t\tif (!plotBrush.empty()) {\n\t\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction plotBrushEnd() {\n\t\t\tif (plotBrush.empty()) {\n\t\t\t\tdataObj.removeDataFilter(field);\n\t\t\t}\n\t\t\tdataObj.notifyListeners('autoscale');\n\t\t}\n\t\n\t\tvar colorScale = initialColorScale;\n\t\tvar xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\t\n\t\tfunction makeBins() {\n\t\t\tvar n = NUM_HISTOGRAM_TICKS;\n\t\t\tvar min = dataExtent[0];\n\t\t\tvar max = dataExtent[1];\n\t\t\tvar range = max - min;\n\t\t\tvar step = range / n;\n\t\t\treturn _.range(min, max, step);\n\t\t}\n\t\n\t\tvar bins = makeBins();\n\t\tvar lastYExtent = [0, 3 / 2 * d3.max(_.pluck(dataObj.currentDataSummary(bins, field), 'y'))];\n\t\n\t\tvar yPlotScale = d3.scale.linear().domain(lastYExtent).range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\t\n\t\tvar autoScale;\n\t\n\t\tfunction getAutoScale() {\n\t\t\tvar summary = dataObj.currentDataSummary(bins, field);\n\t\t\tvar extrema = persistence.simplify(summary, env.getPersistence());\n\t\n\t\t\tautoScale = generateColorScaleFromExtrema(extrema);\n\t\t\tif (SHOW_MAXIMA_AND_MINIMA) updateMinMaxMarkers(extrema);\n\t\t\treturn autoScale;\n\t\t}\n\t\n\t\tfunction isMaxima(A, i) {\n\t\t\treturn A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t\t}\n\t\n\t\tfunction shouldBeMarked(x, i, A) {\n\t\t\treturn i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t\t}\n\t\n\t\tfunction generateColorScaleFromExtrema(extrema) {\n\t\t\tvar colors = d3.scale.category10();\n\t\n\t\t\tvar _$partition = _.partition(extrema, shouldBeMarked);\n\t\n\t\t\tvar _$partition2 = _slicedToArray(_$partition, 2);\n\t\n\t\t\tvar peaks = _$partition2[0];\n\t\t\tvar valleys = _$partition2[1];\n\t\n\t\t\tvar coloredPeaks = _.map(peaks, function (x, i) {\n\t\t\t\tx.color = colors(i);\n\t\t\t\treturn x;\n\t\t\t});\n\t\n\t\t\tvar allPoints = _(coloredPeaks).concat(valleys).sortBy('x').value();\n\t\n\t\t\tvar domain = _.map(allPoints, function (d) {\n\t\t\t\treturn d.x + d.dx / 2;\n\t\t\t});\n\t\t\tvar range = _.map(allPoints, function (d) {\n\t\t\t\treturn d.color || UNSELECTED_BAR_FILL;\n\t\t\t});\n\t\n\t\t\treturn d3.scale.linear().domain(domain).range(range);\n\t\t}\n\t\n\t\tfunction updateMinMaxMarkers(extrema) {\n\t\t\tvar markers = _.map(extrema, function (d, i, A) {\n\t\t\t\treturn {\n\t\t\t\t\tcolor: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t\t\t\t\tx: d.x + d.dx / 2,\n\t\t\t\t\ty: d.y\n\t\t\t\t};\n\t\t\t});\n\t\n\t\t\tvar tempSelA = plot.selectAll('.maxMark').data(markers);\n\t\t\ttempSelA.exit().remove();\n\t\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\t\ttempSelA.attr('cx', function (d) {\n\t\t\t\treturn xPlotScale(d.x);\n\t\t\t}).attr('cy', function (d) {\n\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t}).attr('r', 3).attr('fill', function (d) {\n\t\t\t\treturn d.color;\n\t\t\t});\n\t\t}\n\t\n\t\tvar plotBrush = d3.svg.brush().x(xPlotScale).on('brush', plotBrushBrush).on('brushend', plotBrushEnd);\n\t\n\t\tvar dataBarSel = plot.selectAll('.dataBars').data(bins).enter().append('rect').classed('dataBars', true);\n\t\n\t\tvar brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group').attr('transform', util.translate(0, HISTOGRAM_MARGIN)).call(plotBrush);\n\t\tbrushSelectForBM.selectAll('rect').attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\t\n\t\tvar xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\t\tvar yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\t\n\t\tplot.append('g').attr('transform', util.translate(0, plotHeight - HISTOGRAM_MARGIN)).classed('xAxis', true).call(xAxis);\n\t\tvar yAxisSel = plot.append('g').attr('transform', util.translate(HISTOGRAM_MARGIN, 0)).classed('yAxis', true).call(yAxis);\n\t\n\t\tfunction updatePlotAttrs(selection) {\n\t\t\tvar activeFunc = plotBrush.empty() ? _.constant(true) : function (bin) {\n\t\t\t\treturn bin.x + bin.dx > plotBrush.extent()[0] && bin.x < plotBrush.extent()[1];\n\t\t\t};\n\t\t\tselection.attr('y', function (d) {\n\t\t\t\treturn yPlotScale(d.y);\n\t\t\t}).attr('height', function (d) {\n\t\t\t\treturn plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y);\n\t\t\t}).attr('fill', function (d) {\n\t\t\t\treturn activeFunc(d) ? colorScale(d.x + d.dx / 2) : 'grey';\n\t\t\t});\n\t\t}\n\t\n\t\tfunction updatePlot(typeHint) {\n\t\n\t\t\ttypeHint = typeHint || '';\n\t\t\tif (typeHint === 'initial') {\n\t\t\t\tdataBarSel.data(dataObj.currentDataSummary(bins, field)).attr('x', function (d) {\n\t\t\t\t\treturn xPlotScale(d.x);\n\t\t\t\t}).attr('width', function (d) {\n\t\t\t\t\treturn xPlotScale(d.x + d.dx) - xPlotScale(d.x);\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar data = dataObj.currentDataSummary(bins, field);\n\t\t\tif (typeHint.indexOf('stop') > -1 || typeHint == 'autoscale') setTimeout(getAutoScale, 0);\n\t\n\t\t\tif (typeHint.indexOf('stop') > -1) {\n\t\t\t\tlastYExtent = [0, 3 / 2 * d3.max(_.pluck(data, 'y'))];\n\t\t\t\tyPlotScale.domain(lastYExtent);\n\t\t\t\tyAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t\t\t\tdataBarSel.data(data).transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(updatePlotAttrs);\n\t\t\t} else {\n\t\t\t\tdataBarSel.data(data).call(updatePlotAttrs);\n\t\t\t}\n\t\t}\n\t\n\t\tupdatePlot('initial');\n\t\tdataObj.addListener(updatePlot);\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tcolorScale = newColorScale;\n\t\t\tplot.selectAll('.dataBars').transition().duration(HISTOGRAM_COLOR_TRANS_LEN).call(updatePlotAttrs);\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetColorScale: setColorScale,\n\t\t\tgetAutoScale: getAutoScale,\n\t\t\trefreshAutoScale: updatePlot,\n\t\t\tbrush: plotBrush,\n\t\t\tsendBrushEvent: plotBrushBrush,\n\t\t\tselection: brushSelectForBM\n\t\t};\n\t}\n\t\n\texports.histogram = histogram;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\texports.simplify = function simplify(_x, _x2) {\n\t\tvar _again = true;\n\t\n\t\t_function: while (_again) {\n\t\t\tvar dirtyPoints = _x,\n\t\t\t    persistence = _x2;\n\t\t\tpoints = index = toRemove = undefined;\n\t\t\t_again = false;\n\t\n\t\t\tvar points = removeNonExtrema(dirtyPoints);\n\t\t\tvar index = indexOfSmallestPointDifference(points);\n\t\n\t\t\tif (points.length < 3 || gapBetweenPoints(points, index) > persistence) return points;\n\t\n\t\t\tvar toRemove = index === 0 ? 1 : index;\n\t\t\tpoints.splice(toRemove, 1);\n\t\n\t\t\t_x = points;\n\t\t\t_x2 = persistence;\n\t\t\t_again = true;\n\t\t\tcontinue _function;\n\t\t}\n\t};\n\t\n\tfunction removeNonExtrema(A) {\n\t\treturn _.filter(A, function (element, index) {\n\t\t\tif (index === 0 || index === A.length - 1) return true;\n\t\n\t\t\tvar before = A[index - 1].y;\n\t\t\tvar here = element.y;\n\t\t\tvar after = A[index + 1].y;\n\t\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t\t});\n\t}\n\t\n\tfunction gapBetweenPoints(A, i) {\n\t\treturn Math.abs(A[i].y - A[i + 1].y);\n\t}\n\t\n\tfunction indexOfSmallestPointDifference(A) {\n\t\treturn _(A.length - 1).range().min(function (i) {\n\t\t\treturn gapBetweenPoints(A, i);\n\t\t});\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar histogram = __webpack_require__(7);\n\tvar dotplot = __webpack_require__(5);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar css = __webpack_require__(6);\n\t\n\tvar DO_BENCHMARK = false;\n\t\n\tvar COLOR_RANGES = {\n\t\trg: ['red', 'green'],\n\t\trg_quantized: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n\t\trainbow: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\trainbow_quantized: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange']\n\t};\n\t\n\tfunction refreshAutoScale() {\n\t\tvar radio = document.getElementById('color-options');\n\t\tvar auto = _.find(radio.children, {\n\t\t\tvalue: 'auto'\n\t\t});\n\t\tauto.checked = false;\n\t\tauto.click();\n\t}\n\t\n\tvar _refreshAutoDots;\n\t\n\tfunction refreshAutoDots() {\n\t\t_refreshAutoDots();\n\t}\n\t\n\tfunction buildDiv(element_id) {\n\t\tvar div = d3.select(element_id);\n\t\n\t\tdiv.append('style').text(css.getStyleSheetForDiv(element_id));\n\t\n\t\tdiv.append('canvas').attr('id', 'dotplot-canvas-bak');\n\t\tdiv.append('canvas').attr('id', 'dotplot-canvas');\n\t\tdiv.append('svg').attr('id', 'dotplot');\n\t\n\t\tvar histogramWrapper = div.append('div').attr('id', 'histogram-wrapper');\n\t\thistogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\t\thistogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\t\thistogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\t\n\t\tvar formWrapper = div.append('div').attr('id', 'form-wrapper');\n\t\n\t\tfunction makeForm(title, optionId, elements, checkIndex) {\n\t\t\tvar navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\t\tnavOptions.append('strong').text(title + ': ');\n\t\n\t\t\tvar navForm = navOptions.append('form').attr('id', optionId);\n\t\t\tvar options = navForm.selectAll('input').data(elements).enter().append('input').attr('type', 'radio').attr('name', optionId).attr('value', function (d) {\n\t\t\t\treturn d[0];\n\t\t\t});\n\t\n\t\t\toptions.forEach(function (selection) {\n\t\t\t\tselection.forEach(function (element, i) {\n\t\t\t\t\tvar label = document.createElement('label');\n\t\t\t\t\tlabel.textContent = elements[i][1];\n\t\t\t\t\tnavForm.node().insertBefore(label, element);\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\toptions[0][checkIndex].checked = true;\n\t\t}\n\t\n\t\tvar option = function option(value, text) {\n\t\t\treturn [value, text];\n\t\t};\n\t\n\t\tmakeForm('Navigation Mode', 'mouse-options', [option('brush', 'Brushing'), option('pan', 'Panning')], 0);\n\t\n\t\tmakeForm('Plotting order', 'summary-options', [option('minimum', 'High to Low'), option('maximum', 'Low to High')], 0);\n\t\n\t\tmakeForm('Dot Plot Coloring', 'plot-var-options', [option('logks', 'log ks'), option('logkn', 'log kn'), option('logkskn', 'log ks/kn')], 0);\n\t\n\t\tmakeForm('Color Scale', 'color-options', [option('rg', 'red-green'), option('rg_quantized', 'rg_quantized'), option('rainbow', 'rainbow'), option('rainbow_quantized', 'rainbow_quantized'), option('auto', 'auto')], 0);\n\t\n\t\tvar persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\tpersistenceOptions.append('strong').text('Auto-scale persistence');\n\t\n\t\tpersistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100).attr('value', 40).attr('step', 1).attr('oninput', 'refreshAutoDots(); document.getElementById(\\'persistence-text\\').innerText=this.value');\n\t\n\t\tpersistenceOptions.append('button').attr('type', 'button').attr('onclick', 'refreshAutoScale()').text('Refresh auto scale');\n\t\n\t\tpersistenceOptions.append('p').text('Largest persistence edge that will be removed: ').append('label').attr('id', 'persistence-text').text('40');\n\t}\n\t\n\tfunction controller(dataObj, element_id) {\n\t\n\t\tbuildDiv('#' + element_id);\n\t\n\t\t_refreshAutoDots = function () {\n\t\t\t_.each(histograms, function (h) {\n\t\t\t\th.refreshAutoScale('autoscale');\n\t\t\t});\n\t\t};\n\t\n\t\tvar syntenyPlot;\n\t\t/* zoom/pan switching */\n\t\td3.selectAll('#mouse-options input[name=mouse-options]').on('change', function () {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\t\n\t\t/* summary mode switching */\n\t\td3.selectAll('#summary-options input[name=summary-options]').on('change', function () {\n\t\t\tdataObj.setOrder('logks', this.value === 'minimum');\n\t\t});\n\t\n\t\t/* Plot variable switching */\n\t\td3.selectAll('#plot-var-options input[name=plot-var-options]').on('change', function () {\n\t\t\thistograms[activeField].setColorScale(steelBlueCS);\n\t\t\tactiveField = this.value;\n\t\t\tsyntenyPlot.setField(activeField);\n\t\t\tvar newCS;\n\t\t\tif (activeCS === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][activeCS];\n\t\t\t}\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t});\n\t\n\t\t/* color mode switching */\n\t\tvar activeField = 'logks';\n\t\tvar activeCS = 'rg';\n\t\td3.selectAll('#color-options input[name=color-options]').on('change', function () {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][this.value];\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\tactiveCS = this.value;\n\t\t});\n\t\n\t\tvar fields = ['logks', 'logkn', 'logkskn'];\n\t\tvar colorScales = _.chain(fields).map(function (field) {\n\t\t\treturn [field, d3.extent(_.pluck(dataObj.currentData().raw, field))];\n\t\t}).object().mapValues(function (extent) {\n\t\t\tvar max = extent[1];\n\t\t\tvar min = extent[0];\n\t\t\tvar range = max - min;\n\t\n\t\t\treturn _.mapValues(COLOR_RANGES, function (colorRange, colorScaleName) {\n\t\t\t\tvar step = range / (colorRange.length - 1);\n\t\t\t\t// Extra .5 * step is to avoid missing a value because of floating point precision\n\t\t\t\tvar domain = _.range(min, max + 0.5 * step, step);\n\t\n\t\t\t\tvar scale = colorScaleName.indexOf('quantized') > -1 ? d3.scale.quantize() : d3.scale.linear();\n\t\t\t\treturn scale.domain(domain).range(colorRange);\n\t\t\t});\n\t\t}).value();\n\t\n\t\tvar steelBlueCS = _.constant('steelblue');\n\t\tvar initialColorScale = colorScales[activeField].rg;\n\t\n\t\tsyntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initialColorScale);\n\t\tvar histograms = {\n\t\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initialColorScale),\n\t\t\t'logkn': histogram.histogram('#plot2', dataObj, 'logkn', steelBlueCS),\n\t\t\t'logkskn': histogram.histogram('#plot3', dataObj, 'logkskn', steelBlueCS)\n\t\t};\n\t\tdataObj.notifyListeners('initial');\n\t\n\t\t/* Benchmark */\n\t\tif (DO_BENCHMARK) {\n\t\t\tvar _d3$extent = d3.extent(dataObj.currentData().raw, function (x) {\n\t\t\t\treturn x.logks;\n\t\t\t});\n\t\n\t\t\tvar _d3$extent2 = _slicedToArray(_d3$extent, 2);\n\t\n\t\t\tvar minLogKs = _d3$extent2[0];\n\t\t\tvar maxLogKs = _d3$extent2[1];\n\t\n\t\t\tvar points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\t\n\t\t\tvar rangeList = _.chain(points).map(function (lo) {\n\t\t\t\treturn _.map(points, function (hi) {\n\t\t\t\t\treturn [lo, hi];\n\t\t\t\t});\n\t\t\t}).flatten().filter(function (_ref) {\n\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\t\n\t\t\t\tvar lo = _ref2[0];\n\t\t\t\tvar hi = _ref2[1];\n\t\t\t\treturn lo < hi;\n\t\t\t}).value();\n\t\n\t\t\tvar asyncBenchmark = __webpack_require__(4);\n\t\t\tasyncBenchmark.benchmark(rangeList, function (range) {\n\t\t\t\thistograms.logks.brush.extent(range);\n\t\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t\t}, function (info) {\n\t\t\t\talert('Average brush time: ' + info.average + ', max: ' + info.max);\n\t\t\t});\n\t\t}\n\t}\n\t\n\texports.refreshAutoDots = refreshAutoDots;\n\texports.refreshAutoScale = refreshAutoScale;\n\texports.controller = controller;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.getPersistence = function getPersistence() {\n\t\treturn Number(document.getElementById('persistence').value);\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var slice = [].slice;\n\t\n\t  function queue(parallelism) {\n\t    var q,\n\t        tasks = [],\n\t        started = 0, // number of tasks that have been started (and perhaps finished)\n\t        active = 0, // number of tasks currently being executed (started but not finished)\n\t        remaining = 0, // number of tasks not yet finished\n\t        popping, // inside a synchronous task callback?\n\t        error = null,\n\t        await = noop,\n\t        all;\n\t\n\t    if (!parallelism) parallelism = Infinity;\n\t\n\t    function pop() {\n\t      while (popping = started < tasks.length && active < parallelism) {\n\t        var i = started++,\n\t            t = tasks[i],\n\t            a = slice.call(t, 1);\n\t        a.push(callback(i));\n\t        ++active;\n\t        t[0].apply(null, a);\n\t      }\n\t    }\n\t\n\t    function callback(i) {\n\t      return function(e, r) {\n\t        --active;\n\t        if (error != null) return;\n\t        if (e != null) {\n\t          error = e; // ignore new tasks and squelch active callbacks\n\t          started = remaining = NaN; // stop queued tasks from starting\n\t          notify();\n\t        } else {\n\t          tasks[i] = r;\n\t          if (--remaining) popping || pop();\n\t          else notify();\n\t        }\n\t      };\n\t    }\n\t\n\t    function notify() {\n\t      if (error != null) await(error);\n\t      else if (all) await(error, tasks);\n\t      else await.apply(null, [error].concat(tasks));\n\t    }\n\t\n\t    return q = {\n\t      defer: function() {\n\t        if (!error) {\n\t          tasks.push(arguments);\n\t          ++remaining;\n\t          pop();\n\t        }\n\t        return q;\n\t      },\n\t      await: function(f) {\n\t        await = f;\n\t        all = false;\n\t        if (!remaining) notify();\n\t        return q;\n\t      },\n\t      awaitAll: function(f) {\n\t        await = f;\n\t        all = true;\n\t        if (!remaining) notify();\n\t        return q;\n\t      }\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  queue.version = \"1.0.7\";\n\t  if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return queue; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n\t  else this.queue = queue;\n\t})();\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** synteny-dotplot-builder.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 19967790e1d3b4832c6c\n **/","'use strict';\n\nvar DATA_OP_TIMING = false;\n\nvar X_AXIS_ORGANISM_NAME;\nvar Y_AXIS_ORGANISM_NAME;\n\nvar queue = require('queue-async');\nvar _ = require('lodash');\nvar d3 = require('d3');\nvar sv = require('./synteny-vis');\n\nexports.makeSyntenyDotPlot = ({data_url, element_id, genome_x, genome_y}) => {\n\tqueue()\n\t\t.defer(d3.text, data_url)\n\t\t.await((err, ks) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tX_AXIS_ORGANISM_NAME = genome_x.name;\n\t\t\tY_AXIS_ORGANISM_NAME = genome_y.name;\n\n\t\t\tvar ksData = ksTextToObjects(ks);\n\t\t\tvar xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t\t\tvar yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t\t\tvar inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\n\t\t\tvar ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tsv.controller(ksDataObject, element_id);\n\t\t});\n};\n\nfunction ksTextToObjects(text) {\n\t/* .ks files are delimited with a combination of tabs and double bars. */\n\tvar csv = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '');\n\tvar ksLines = _.compact(csv.split('\\n'));\n\treturn _.chain(ksLines)\n\t\t.reject(function(line) {\n\t\t\treturn line[0] === '#';\n\t\t})\n\t\t.map(ksLineToSyntenyDot)\n\t\t.filter(function(line) {\n\t\t\treturn isFinite(line.logks) && isFinite(line.logkn);\n\t\t})\n\t\t.value();\n}\n\nfunction ksLineToSyntenyDot(line) {\n\tvar fields = line.split(',');\n\treturn {\n\t\tks: Number(fields[0]),\n\t\tlogks: Math.log(Number(fields[0])) / Math.log(10),\n\t\troundedlogks: Math.floor(Math.log(Number(fields[0])) / Math.log(10) * 10) / 10,\n\t\tkn: Number(fields[1]),\n\t\tlogkn: Math.log(Number(fields[1])) / Math.log(10),\n\t\tlogkskn: (Math.log(Number(fields[0])) - Math.log(Number(fields[1]))) / Math.log(10),\n\t\tx_chromosome_id: fields[3],\n\t\ty_chromosome_id: fields[15],\n\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t};\n}\n\nfunction lengthsToCumulativeBPCounts(len_list) {\n\tvar ntLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tvar geLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tvar nameLenList = _.chain(len_list)\n\t\t.sortBy('name')\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tvar geneCounts = _.reduce(len_list, function(map, kv) {\n\t\tmap[kv.name] = kv.gene_count;\n\t\treturn map;\n\t}, {});\n\n\treturn {\n\t\tnt: ntLenList,\n\t\tge: geLenList,\n\t\tname: nameLenList,\n\t\tgene_counts: geneCounts\n\t};\n}\n\n// Compute absolute BP offset from chromosome and relative offset\nfunction inlineKSData(ks, xmap, ymap) {\n\t_.each(ks, function(ksObj) {\n\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\tksObj.x_relative_offset += xShift;\n\t\tksObj.y_relative_offset += yShift;\n\t});\n\treturn ks;\n}\n\nfunction between(low, high, field) {\n\tif (field) {\n\t\treturn function(x) {\n\t\t\treturn low <= x[field] && x[field] < high;\n\t\t};\n\t} else {\n\t\treturn function(x) {\n\t\t\treturn low <= x && x < high;\n\t\t};\n\t}\n}\n\nfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\tvar xmap = xmapPair.ge;\n\tvar ymap = ymapPair.ge;\n\tvar ret = {};\n\n\tvar sortedDots = {};\n\tvar dataFilters = {};\n\n\tret.X_AXIS_ORGANISM_NAME = X_AXIS_ORGANISM_NAME;\n\tret.Y_AXIS_ORGANISM_NAME = Y_AXIS_ORGANISM_NAME;\n\n\tret.getXLineOffsets = function() {\n\t\treturn _.chain(xmap).values().sortBy().value();\n\t};\n\n\tret.getYLineOffsets = function() {\n\t\treturn _.chain(ymap).values().sortBy().value();\n\t};\n\n\tvar gentMode = 'nt';\n\tret.setGEvNTMode = function(mode) {\n\t\tgentMode = mode;\n\t\txmap = xmapPair[mode];\n\t\tymap = ymapPair[mode];\n\t\tret.notifyListeners('ge-v-nt-change');\n\t};\n\n\tret.getGEvNTMode = function() {\n\t\treturn gentMode;\n\t};\n\n\tret.setOrder = function(field, descending) {\n\t\tsyntenyDots = _.sortBy(syntenyDots, field);\n\t\tif (descending) {\n\t\t\tsyntenyDots.reverse();\n\t\t}\n\t\tret.notifyListeners('order-change');\n\t};\n\n\tret.getXLineNames = function() {\n\t\treturn filterMapForNames(xmap);\n\t};\n\n\tret.getYLineNames = function() {\n\t\treturn filterMapForNames(ymap);\n\t};\n\n\tfunction filterMapForNames(map) {\n\t\treturn _.chain(map)\n\t\t\t.pairs()\n\t\t\t// Filter out short names\n\t\t\t//.reject(function(x, i, A) {\n\t\t\t//  return i > 0 && x[1] - A[i-1][1] < NUCLEOTIDE_LOWER_NAME_LIMIT;\n\t\t\t//})\n\t\t\t.sortBy('1')\n\t\t\t.pluck('0')\n\t\t\t.reject(function(x) {\n\t\t\t\treturn x === 'total';\n\t\t\t})\n\t\t\t.value();\n\t}\n\n\tfunction getFilterFunction() {\n\t\tvar s = dataFilters.spatial;\n\t\tvar l = dataFilters.logks;\n\t\tvar k = dataFilters.logkn;\n\t\tvar m = dataFilters.logkskn;\n\t\tif (s && l) {\n\t\t\treturn function(d) {\n\t\t\t\treturn s(d) && l(d);\n\t\t\t};\n\t\t}\n\t\tif (s && !(l || k || m)) return s;\n\t\tif (l && !(s || k || m)) return l;\n\t\treturn function(d) {\n\t\t\treturn (!s || s(d)) && (!l || l(d)) &&\n\t\t\t\t(!k || k(d)) && (!m || m(d));\n\t\t};\n\t}\n\n\tret.currentData = function currentData() {\n\t\treturn {\n\t\t\traw: syntenyDots,\n\t\t\tactive: _.filter(syntenyDots, getFilterFunction())\n\t\t};\n\t};\n\n\tret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t\tvar oldFilters = dataFilters;\n\t\tdataFilters = _.omit(dataFilters, field);\n\n\t\tif (!sortedDots[field]) {\n\t\t\tsortedDots[field] = _.sortBy(syntenyDots, field);\n\t\t}\n\n\t\tvar validPoints = _.filter(sortedDots[field], getFilterFunction());\n\t\tdataFilters = oldFilters;\n\n\t\tvar diff = ticks[1] - ticks[0];\n\n\t\tvar lastLow = 0;\n\t\treturn _.chain(ticks)\n\t\t\t.map(function(tick) {\n\t\t\t\tvar start = {},\n\t\t\t\t\tend = {};\n\t\t\t\tstart[field] = tick;\n\t\t\t\tend[field] = tick + diff;\n\t\t\t\tvar hi = _.sortedIndex(validPoints, end, field);\n\t\t\t\tvar ret = {\n\t\t\t\t\tx: tick,\n\t\t\t\t\tdx: diff,\n\t\t\t\t\ty: hi - lastLow\n\t\t\t\t};\n\t\t\t\tlastLow = hi;\n\t\t\t\treturn ret;\n\t\t\t}).value();\n\t};\n\n\tret.addSpatialFilter = function(extents, typeHint) {\n\t\tdataFilters.spatial = function(dot) {\n\t\t\treturn dot.x_relative_offset >= extents[0][0] &&\n\t\t\t\tdot.x_relative_offset <= extents[1][0] &&\n\t\t\t\tdot.y_relative_offset >= extents[0][1] &&\n\t\t\t\tdot.y_relative_offset <= extents[1][1];\n\t\t};\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.removeSpatialFilter = function(typeHint) {\n\t\tdelete dataFilters.spatial;\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.addDataFilter = function(extent, field, typeHint) {\n\t\tdataFilters[field] = between(extent[0], extent[1], field);\n\t\tret.notifyListeners(typeHint || 'data');\n\t};\n\n\tret.removeDataFilter = function(field) {\n\t\tdelete dataFilters[field]\n\t\t;\n\t\tret.notifyListeners('data-stop');\n\t};\n\n\tvar listeners = [];\n\tret.addListener = function(x) {\n\t\tlisteners.push(x);\n\t};\n\n\tret.notifyListeners = function(typeOfChange) {\n\t\t_.each(listeners, function(x) {\n\t\t\tx(typeOfChange);\n\t\t});\n\t};\n\n\tif (DATA_OP_TIMING) {\n\t\tvar t = ret.currentData;\n\t\tret.currentData = function() {\n\t\t\tvar start = Date.now();\n\t\t\tvar x = t();\n\t\t\tconsole.log('currentData', Date.now() - start);\n\t\t\treturn x;\n\t\t};\n\n\t\tvar s = ret.currentDataSummary;\n\t\tret.currentDataSummary = function(a, b) {\n\t\t\tvar start = Date.now();\n\t\t\tvar x = s(a, b);\n\t\t\tconsole.log('currentDataSummary', Date.now() - start);\n\t\t\treturn x;\n\t\t};\n\t\tvar r = ret.notifyListeners;\n\t\tret.notifyListeners = function(x) {\n\t\t\tconsole.log('notifyListeners');\n\t\t\tr(x);\n\t\t};\n\t}\n\tret.setOrder('logks', true);\n\tret.setGEvNTMode(gentMode);\n\treturn ret;\n}\n\n// We need to expose this to the outside world.\nwindow.makeSyntenyDotPlot = exports.makeSyntenyDotPlot;\n\n// hacks. this should get moved.\nwindow.refreshAutoScale = sv.refreshAutoScale;\nwindow.refreshAutoDots = sv.refreshAutoDots;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 1\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","exports.getComputedAttr = function getComputedAttr(element, attr) {\n\tvar computed = getComputedStyle(element)[attr];\n\treturn parseInt(computed, 10);\n};\n\nexports.translate = function translate(x, y) {\n\treturn 'translate(' + x + ',' + y + ')';\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","var _ = require('lodash');\n\n/*\n * I want to run a benchmark, but I don't want to block UI updates \n * in between iterations.\n *\n * My guess is that this isn't super accurate for fast functions.\n */\nexports.benchmark = function(tests, f, done) {\n\n\tvar results = [];\n\tvar testIndex = 0;\n\n\tsetTimeout(function runOne() {\n\t\tif (testIndex >= tests.length)\n\t\t\treturn done(stats(results));\n\n\t\tvar time = timeIt(f, tests[testIndex++]);\n\t\tresults.push(time);\n\n\t\tsetTimeout(runOne, 0);\n\t}, 0);\n\n\tfunction timeIt(f, arg) {\n\t\tvar start = Date.now();\n\t\tf(arg);\n\t\treturn Date.now() - start;\n\t}\n\n\tfunction stats(times) {\n\t\treturn {\n\t\t\ttotalTime: _.sum(times),\n\t\t\tcount: times.length,\n\t\t\tmax: _.max(times),\n\t\t\taverage: _.sum(times) / times.length\n\t\t};\n\t}\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/async-benchmark.js\n **/","'use strict';\n\nvar util = require('./utils.js');\nvar _ = require('lodash');\nvar d3 = require('d3');\n\nvar SYNTENY_MARGIN = 50; /* Padding around synteny plot for axes */\nvar CIRCLE_RADIUS = 2;\nvar UNSELECTED_DOT_FILL = '#D0D0D0';\nvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\nvar DOTPLOT_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\n\nfunction synteny(id, dataObj, field, initialColorScale) {\n\n\tvar xExtent = [0, _.max(dataObj.getXLineOffsets())];\n\tvar yExtent = [0, _.max(dataObj.getYLineOffsets())];\n\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\n\tconst baseID = id.substring(1);\n\tconst svgElement = document.getElementById(baseID);\n\tvar computedWidth = util.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\tvar computedHeight = util.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\tvar windowAspectRatio = computedHeight / computedWidth;\n\n\tvar width;\n\tvar height;\n\n\tif (windowAspectRatio / dataAspectRatio > 1) {\n\t\twidth = computedWidth;\n\t\theight = dataAspectRatio * width;\n\t} else {\n\t\theight = computedHeight;\n\t\twidth = 1 / dataAspectRatio * height;\n\t}\n\n\td3.select(id).attr('width', width + 2 * SYNTENY_MARGIN);\n\td3.select(id).attr('height', height + 2 * SYNTENY_MARGIN);\n\n\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\n\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function() {\n\t\tvar t = d3.event.translate;\n\t\tvar s = d3.event.scale;\n\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t// prevents the translate from growing large. This way, you don't \n\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\tzoom.translate(t);\n\n\t\tbrushGroup.attr('transform', util.translate(t[0], t[1]) + 'scale(' + s + ')');\n\n\t\tvar tempXOffsets = _.filter(xOffsets, function(x) {\n\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t});\n\t\tvar tempXGaps = _.filter(xAxisTickValues, function(x) {\n\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t});\n\t\tvar tempYOffsets = _.filter(yOffsets, function(y) {\n\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t});\n\t\tvar tempYGaps = _.filter(yAxisTickValues, function(y) {\n\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t});\n\n\t\txLineAxis.tickValues(tempXOffsets);\n\t\txGapsAxis.tickValues(tempXGaps);\n\t\tyLineAxis.tickValues(tempYOffsets);\n\t\tyGapsAxis.tickValues(tempYGaps);\n\n\t\txAxisGapsGroup.call(xGapsAxis);\n\t\tyAxisGapsGroup.call(yGapsAxis);\n\t\txAxisLineGroup.call(xLineAxis);\n\t\tyAxisLineGroup.call(yLineAxis);\n\n\t\tsetSyntenyData('zoom');\n\t});\n\n\tfunction resizeBrushBoundary() {\n\t\tvar scaling = zoom.scale();\n\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\tvar vertical = ['.e', '.w'];\n\t\tvar horizontal = ['.n', '.s'];\n\t\tvar horizontalRescale = _.union(corners, vertical);\n\t\tvar verticalRescale = _.union(corners, horizontal);\n\n\t\t_.map(horizontalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t});\n\n\t\t_.map(verticalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t});\n\t}\n\n\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t * All sorts of nasty things happen when the scales get changed underneath a\n\t * brush. */\n\tvar brush = d3.svg.brush()\n\t\t.x(xScale.copy())\n\t\t.y(yScale.copy())\n\t\t.on('brush', function() {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t})\n\t\t.on('brushend', function() {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t}\n\t\t});\n\n\td3.select(id + '-canvas')\n\t\t.attr('width', width + 2 * SYNTENY_MARGIN)\n\t\t.attr('height', height + 2 * SYNTENY_MARGIN);\n\tvar context = document.getElementById(id.substring(1) + '-canvas').getContext('2d');\n\n\td3.select(id + '-canvas-bak')\n\t\t.attr('width', width + 2 * SYNTENY_MARGIN)\n\t\t.attr('height', height + 2 * SYNTENY_MARGIN);\n\tvar contextbak = document.getElementById(id.substring(1) + '-canvas-bak').getContext('2d');\n\n\tvar svg = d3.select(id);\n\n\tvar TEXT_OFFSET = 35;\n\tvar TEXT_BOX_HEIGHT = 25;\n\tsvg.append('text')\n\t\t.attr('x', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(dataObj.X_AXIS_ORGANISM_NAME);\n\n\tsvg.append('text')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN - TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(dataObj.Y_AXIS_ORGANISM_NAME);\n\n\tsvg\n\t\t.append('defs')\n\t\t.append('clipPath')\n\t\t.attr('id', 'plot-clip-box')\n\t\t.append('rect')\n\t\t.attr('x', 0)\n\t\t.attr('width', width)\n\t\t.attr('y', 0)\n\t\t.attr('height', height)\n\t\t.attr('fill', 'black');\n\n\tvar xOffsets = dataObj.getXLineOffsets();\n\tvar xPairs = _.zip(_.initial(xOffsets), _.rest(xOffsets));\n\tvar xAxisTickValues = _.map(xPairs, function(p) {\n\t\treturn (p[0] + p[1]) / 2;\n\t});\n\n\tvar xOffsetToNameMap = _.object(xAxisTickValues, dataObj.getXLineNames());\n\n\tvar xLineAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.tickValues(xOffsets)\n\t\t.tickFormat(_.constant(''))\n\t\t.orient('bottom')\n\t\t.tickSize(-height);\n\n\tvar xGapsAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.tickValues(xAxisTickValues)\n\t\t.tickFormat(function(x) {\n\t\t\treturn xOffsetToNameMap[x];\n\t\t})\n\t\t.orient('bottom')\n\t\t.tickSize(0);\n\n\tvar xAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, height + SYNTENY_MARGIN));\n\tvar xAxisGapsGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xGapsAxis);\n\tvar xAxisLineGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xLineAxis);\n\n\tvar yOffsets = dataObj.getYLineOffsets();\n\tvar yPairs = _.zip(_.initial(yOffsets), _.rest(yOffsets));\n\tvar yAxisTickValues = _.map(yPairs, function(p) {\n\t\treturn (p[0] + p[1]) / 2;\n\t});\n\tvar yOffsetToNameMap = _.object(yAxisTickValues, dataObj.getYLineNames());\n\n\tvar yLineAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.tickValues(yOffsets)\n\t\t.tickFormat(_.constant(''))\n\t\t.orient('left')\n\t\t.tickSize(-width);\n\n\tvar yGapsAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.tickValues(yAxisTickValues)\n\t\t.tickFormat(function(x) {\n\t\t\treturn yOffsetToNameMap[x];\n\t\t})\n\t\t.orient('left')\n\t\t.tickSize(0);\n\n\tvar yAxisWrapper = svg.append('g').attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN));\n\tvar yAxisGapsGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yGapsAxis);\n\tvar yAxisLineGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yLineAxis);\n\n\tsvg = svg\n\t\t.append('g')\n\t\t.attr('transform', util.translate(SYNTENY_MARGIN, SYNTENY_MARGIN))\n\t\t.append('g').attr('id', 'zoom-group')\n\t\t.call(zoom).on('mousedown.zoom', null); //disable panning\n\n\tvar brushGroup = svg\n\t\t.append('g').attr('clip-path', 'url(#plot-clip-box)')\n\t\t.append('g').attr('id', 'brush-group')\n\t\t.call(brush);\n\n\tvar colorScale = initialColorScale;\n\n\tfunction draw(elapsedMS, initialColorScale, finalColorScale, typeHint) {\n\t\tvar start = Date.now();\n\n\t\tvar intermediateColorScale;\n\t\tif (elapsedMS === 0 && typeHint === 'data') {\n\t\t\tintermediateColorScale = finalColorScale;\n\t\t} else {\n\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\t}\n\n\t\tvar allData = dataObj.currentData();\n\t\tvar activeDots = allData.active;\n\t\tvar allDots = allData.raw;\n\n\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tif (typeHint === 'zoom') {\n\t\t\tcontextbak.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontextbak.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t_.each(allDots, function(d) {\n\t\t\t\tvar cx = SYNTENY_MARGIN + xScale(d.x_relative_offset);\n\t\t\t\tvar cy = SYNTENY_MARGIN + yScale(d.y_relative_offset);\n\n\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN)\n\t\t\t\t\treturn;\n\n\t\t\t\tcontextbak.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t});\n\t\t}\n\n\t\t//console.log('Time to draw bg points:', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tcontext.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\n\t\t/* On top, active dots */\n\t\tvar minDomX = xScale.domain()[0];\n\t\tvar maxDomX = xScale.domain()[1];\n\t\tvar minDomY = yScale.domain()[0];\n\t\tvar maxDomY = yScale.domain()[1];\n\t\tvar minRanX = xScale.range()[0];\n\t\tvar maxRanX = xScale.range()[1];\n\t\tvar minRanY = yScale.range()[0];\n\t\tvar maxRanY = yScale.range()[1];\n\t\tvar widthDomX = maxDomX - minDomX;\n\t\tvar widthDomY = maxDomY - minDomY;\n\t\tvar widthRanX = maxRanX - minRanX;\n\t\tvar widthRanY = maxRanY - minRanY;\n\t\tvar xRatio = widthRanX / widthDomX;\n\t\tvar xShift = minDomX * xRatio + minRanX - SYNTENY_MARGIN;\n\t\tvar yRatio = widthRanY / widthDomY;\n\t\tvar yShift = maxDomY * yRatio + maxRanY - SYNTENY_MARGIN;\n\n\t\tvar groups = [];\n\t\tvar index = 0;\n\t\tfunction makeComp(v) {\n\t\t\treturn function(x) {\n\t\t\t\treturn x.roundedlogks < v;\n\t\t\t};\n\t\t}\n\t\twhile (index < activeDots.length) {\n\t\t\tvar lo = index;\n\t\t\tvar val = activeDots[index].roundedlogks;\n\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\troundedlogks: val\n\t\t\t}, makeComp(val));\n\t\t\tgroups.push([lo, index]);\n\t\t}\n\n\t\tfor (var g = 0; g < groups.length; g++) {\n\t\t\tvar group = groups[g];\n\t\t\tvar loIndex = group[0];\n\t\t\tvar hiIndex = group[1];\n\t\t\tcontext.fillStyle = intermediateColorScale(activeDots[loIndex].roundedlogks);\n\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\tvar d = activeDots[i];\n\t\t\t\tvar cx = d.x_relative_offset * xRatio - xShift;\n\t\t\t\tvar cy = d.y_relative_offset * yRatio - yShift;\n\n\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t}\n\t\t}\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect(0, 0, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\tcontext.fillRect(0, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\tcontext.fillRect(SYNTENY_MARGIN + width, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\tcontext.fillRect(0, height + SYNTENY_MARGIN, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\n\t\tvar diff = Date.now() - start;\n\t\t//console.log('Start of call to end of draw call:', diff);\n\t\tif (elapsedMS > 0) {\n\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t}\n\t}\n\n\tfunction interpolateScales(a, b, t) {\n\t\tvar aDomain = a.domain();\n\t\tvar bDomain = b.domain();\n\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\tvar max = Math.max(aDomain[1], bDomain[1]);\n\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\tvar domain = _.range(min, max + 1, step);\n\t\tvar range = _.map(domain, function(input) {\n\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t});\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t}\n\n\tfunction setSyntenyData(typeHint) {\n\t\tif (typeHint == 'autoscale') return;\n\t\tdraw(0, colorScale, colorScale, typeHint);\n\t}\n\tdataObj.addListener(setSyntenyData);\n\tsetSyntenyData('zoom');\n\n\tfunction setNavigationMode(mode) {\n\t\tif (mode === 'pan') {\n\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t} else if (mode === 'brush') {\n\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t}\n\t}\n\n\tfunction setColorScale(newColorScale) {\n\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\tcolorScale = newColorScale;\n\t}\n\n\tfunction setField(f) {\n\t\tfield = f;\n\t\tsetSyntenyData();\n\t}\n\n\treturn {\n\t\tsetNavMode: setNavigationMode,\n\t\tsetColorScale: setColorScale,\n\t\tsetField: setField\n\t};\n}\n\nexports.synteny = synteny;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dotplot.js\n **/","const _ = require('lodash');\n\nconst lines = [\n\t'{name} .extent {',\n\t'  /* Brushes */',\n\t'  fill: grey;',\n\t'  opacity: .2;',\n\t'}',\n\t'{name} .domain {',\n\t'  /* Plot \"dodotplot.\" This controls the axis lines on the histograms and the',\n\t'   * box around the dotplot */',\n\t'  fill: none;',\n\t'  stroke: black;',\n\t'}',\n\t'{name} #dotplot-canvas {',\n\t'  /* The float and position properties here are some sort of black magic to',\n\t'   * get the canvas and svg to sit on top of each other. */',\n\t'  float: left;',\n\t'  position: absolute;',\n\t'}',\n\t'{name} #dotplot-canvas-bak {',\n\t'  /* The float and position properties here are some sort of black magic to',\n\t'   * get the canvas and svg to sit on top of each other. */',\n\t'  float: left;',\n\t'  position: absolute;',\n\t'}',\n\t'{name} #dotplot {',\n\t'  float: left;',\n\t'  position: absolute;',\n\t'  width: 50%;',\n\t'  height: 100%;',\n\t'}',\n\t'{name} #dotplot .tick line {',\n\t'  /* chromosome boundary lines in dotplot */',\n\t'  stroke: grey;',\n\t'}',\n\t'{name} #histogram-wrapper {',\n\t'  float: right;',\n\t'  width: 50%;',\n\t'}',\n\t'{name} .histogram {',\n\t'  width: 100%;',\n\t'  height: 25%;',\n\t'}',\n\t'{name} .histogram .histogram-title {',\n\t'  font-size: 14pt;',\n\t'}',\n\t'{name} .histogram .tick line {',\n\t'  /* axis ticks for histograms */',\n\t'  stroke: grey;',\n\t'}',\n\t'{name} #form-wrapper {',\n\t'  position: absolute;',\n\t'  bottom: 10;',\n\t'  right: 10;',\n\t'  width: 50%;',\n\t'  height: 12%',\n\t'}',\n\t'{name} form {',\n\t'  display: inline;',\n\t'}'\n];\n\nconst cssString = _.reduce(lines, (a, b) => a + '\\n' + b);\nexports.getStyleSheetForDiv = (name) => cssString.replace(/{name}/g, name);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/generate-css.js\n **/","'use strict';\n\nvar HISTOGRAM_MARGIN = 50; /* Padding around histogram */\nvar HISTOGRAM_Y_SCALE_TRANS_LEN = 750; /* How long a y-axis histogram rescale takes */\nvar HISTOGRAM_COLOR_TRANS_LEN = 500; /* How long a color scale transition takes */\nvar NUM_HISTOGRAM_TICKS = 100;\nvar UNSELECTED_BAR_FILL = '#D0D0D0';\n\nconst SHOW_MAXIMA_AND_MINIMA = true;\n\nvar persistence = require('persistence');\nvar util = require('./utils');\nvar env = require('./window');\nvar _ = require('lodash');\nvar d3 = require('d3');\n\nfunction histogram(id, dataObj, field, initialColorScale) {\n\tvar dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\n\tvar plot = d3.select(id);\n\tvar plotWidth = util.getComputedAttr(plot.node(), 'width');\n\tvar plotHeight = util.getComputedAttr(plot.node(), 'height');\n\n\tvar prettyNames = {\n\t\tlogks: 'log(ks)',\n\t\tlogkn: 'log(kn)',\n\t\tlogkskn: 'log(ks/kn)'\n\t};\n\tplot.append('text')\n\t\t.attr('x', 2 * plotHeight / 3)\n\t\t.attr('width', plotHeight / 3)\n\t\t.attr('y', 50)\n\t\t.attr('height', 50)\n\t\t.classed('histogram-title', true)\n\t\t.text(prettyNames[field]);\n\n\tfunction plotBrushBrush() {\n\t\tif (!plotBrush.empty()) {\n\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t}\n\t}\n\n\tfunction plotBrushEnd() {\n\t\tif (plotBrush.empty()) {\n\t\t\tdataObj.removeDataFilter(field);\n\t\t}\n\t\tdataObj.notifyListeners('autoscale');\n\t}\n\n\tvar colorScale = initialColorScale;\n\tvar xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\n\tfunction makeBins() {\n\t\tvar n = NUM_HISTOGRAM_TICKS;\n\t\tvar min = dataExtent[0];\n\t\tvar max = dataExtent[1];\n\t\tvar range = max - min;\n\t\tvar step = range / n;\n\t\treturn _.range(min, max, step);\n\t}\n\n\tvar bins = makeBins();\n\tvar lastYExtent = [0, 3 / 2 * d3.max(_.pluck(dataObj.currentDataSummary(bins, field), 'y'))];\n\n\tvar yPlotScale = d3.scale.linear().domain(lastYExtent).range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\n\tvar autoScale;\n\n\tfunction getAutoScale() {\n\t\tconst summary = dataObj.currentDataSummary(bins, field);\n\t\tconst extrema = persistence.simplify(summary, env.getPersistence());\n\n\t\tautoScale = generateColorScaleFromExtrema(extrema);\n\t\tif (SHOW_MAXIMA_AND_MINIMA)\n\t\t\tupdateMinMaxMarkers(extrema);\n\t\treturn autoScale;\n\t}\n\n\tfunction isMaxima(A, i) {\n\t\treturn A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t}\n\n\tfunction shouldBeMarked(x, i, A) {\n\t\treturn i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t}\n\n\tfunction generateColorScaleFromExtrema(extrema) {\n\t\tconst colors = d3.scale.category10();\n\n\t\tconst [peaks, valleys] = _.partition(extrema, shouldBeMarked);\n\t\tconst coloredPeaks = _.map(peaks, function(x, i) {\n\t\t\tx.color = colors(i);\n\t\t\treturn x;\n\t\t});\n\n\t\tconst allPoints = _(coloredPeaks).concat(valleys).sortBy('x').value();\n\n\t\tconst domain = _.map(allPoints, d => d.x + d.dx / 2);\n\t\tconst range = _.map(allPoints, d => d.color || UNSELECTED_BAR_FILL);\n\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t}\n\n\tfunction updateMinMaxMarkers(extrema) {\n\t\tconst markers = _.map(extrema, function(d, i, A) {\n\t\t\treturn {\n\t\t\t\tcolor: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t\t\t\tx: d.x + d.dx / 2,\n\t\t\t\ty: d.y\n\t\t\t};\n\t\t});\n\n\t\tconst tempSelA = plot.selectAll('.maxMark').data(markers);\n\t\ttempSelA.exit().remove();\n\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\ttempSelA\n\t\t\t.attr('cx', d => xPlotScale(d.x))\n\t\t\t.attr('cy', d => yPlotScale(d.y) - 5)\n\t\t\t.attr('r', 3)\n\t\t\t.attr('fill', d => d.color);\n\t}\n\n\tvar plotBrush = d3.svg.brush()\n\t\t.x(xPlotScale)\n\t\t.on('brush', plotBrushBrush)\n\t\t.on('brushend', plotBrushEnd);\n\n\tvar dataBarSel = plot.selectAll('.dataBars')\n\t\t.data(bins)\n\t\t.enter()\n\t\t.append('rect').classed('dataBars', true);\n\n\tvar brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group')\n\t\t.attr('transform', util.translate(0, HISTOGRAM_MARGIN))\n\t\t.call(plotBrush);\n\tbrushSelectForBM.selectAll('rect')\n\t\t.attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\n\n\tvar xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\tvar yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\n\tplot.append('g')\n\t\t.attr('transform', util.translate(0, plotHeight - HISTOGRAM_MARGIN))\n\t\t.classed('xAxis', true).call(xAxis);\n\tvar yAxisSel = plot.append('g')\n\t\t.attr('transform', util.translate(HISTOGRAM_MARGIN, 0))\n\t\t.classed('yAxis', true).call(yAxis);\n\n\tfunction updatePlotAttrs(selection) {\n\t\tvar activeFunc = plotBrush.empty() ? _.constant(true) : function(bin) {\n\t\t\treturn bin.x + bin.dx > plotBrush.extent()[0] &&\n\t\t\t\tbin.x < plotBrush.extent()[1];\n\t\t};\n\t\tselection\n\t\t\t.attr('y', function(d) {\n\t\t\t\treturn yPlotScale(d.y);\n\t\t\t})\n\t\t\t.attr('height', function(d) {\n\t\t\t\treturn plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y);\n\t\t\t})\n\t\t\t.attr('fill', function(d) {\n\t\t\t\treturn activeFunc(d) ? colorScale(d.x + d.dx / 2) : 'grey';\n\t\t\t});\n\t}\n\n\tfunction updatePlot(typeHint) {\n\n\t\ttypeHint = typeHint || '';\n\t\tif (typeHint === 'initial') {\n\t\t\tdataBarSel\n\t\t\t\t.data(dataObj.currentDataSummary(bins, field))\n\t\t\t\t.attr('x', function(d) {\n\t\t\t\t\treturn xPlotScale(d.x);\n\t\t\t\t})\n\t\t\t\t.attr('width', function(d) {\n\t\t\t\t\treturn (xPlotScale(d.x + d.dx) - xPlotScale(d.x));\n\t\t\t\t});\n\t\t}\n\t\tvar data = dataObj.currentDataSummary(bins, field);\n\t\tif (typeHint.indexOf('stop') > -1 || typeHint == 'autoscale')\n\t\t\tsetTimeout(getAutoScale, 0);\n\n\t\tif (typeHint.indexOf('stop') > -1) {\n\t\t\tlastYExtent = [0, 3 / 2 * d3.max(_.pluck(data, 'y'))];\n\t\t\tyPlotScale.domain(lastYExtent);\n\t\t\tyAxisSel.transition()\n\t\t\t\t.duration(HISTOGRAM_Y_SCALE_TRANS_LEN)\n\t\t\t\t.call(yAxis);\n\t\t\tdataBarSel\n\t\t\t\t.data(data)\n\t\t\t\t.transition()\n\t\t\t\t.duration(HISTOGRAM_Y_SCALE_TRANS_LEN)\n\t\t\t\t.call(updatePlotAttrs);\n\n\t\t} else {\n\t\t\tdataBarSel\n\t\t\t\t.data(data)\n\t\t\t\t.call(updatePlotAttrs);\n\t\t}\n\t}\n\n\tupdatePlot('initial');\n\tdataObj.addListener(updatePlot);\n\n\tfunction setColorScale(newColorScale) {\n\t\tcolorScale = newColorScale;\n\t\tplot.selectAll('.dataBars')\n\t\t\t.transition().duration(HISTOGRAM_COLOR_TRANS_LEN)\n\t\t\t.call(updatePlotAttrs);\n\t}\n\n\treturn {\n\t\tsetColorScale: setColorScale,\n\t\tgetAutoScale: getAutoScale,\n\t\trefreshAutoScale: updatePlot,\n\t\tbrush: plotBrush,\n\t\tsendBrushEvent: plotBrushBrush,\n\t\tselection: brushSelectForBM\n\t};\n}\n\nexports.histogram = histogram;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/histogram.js\n **/","'use strict';\n\nvar _ = require('lodash');\n\nexports.simplify = function simplify(dirtyPoints, persistence) {\n\tconst points = removeNonExtrema(dirtyPoints);\n\tconst index = indexOfSmallestPointDifference(points);\n\n\tif (points.length < 3 || gapBetweenPoints(points, index) > persistence)\n\t\treturn points;\n\n\tconst toRemove = index === 0 ? 1 : index;\n\tpoints.splice(toRemove, 1);\n\n\treturn simplify(points, persistence);\n};\n\nfunction removeNonExtrema(A) {\n\treturn _.filter(A, function(element, index) {\n\t\tif (index === 0 || index === A.length - 1)\n\t\t\treturn true;\n\n\t\tvar before = A[index - 1].y;\n\t\tvar here = element.y;\n\t\tvar after = A[index + 1].y;\n\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t});\n}\n\nfunction gapBetweenPoints(A, i) {\n\treturn Math.abs(A[i].y - A[i + 1].y);\n}\n\nfunction indexOfSmallestPointDifference(A) {\n\treturn _(A.length - 1).range().min(i => gapBetweenPoints(A, i));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/persistence.js\n **/","'use strict';\n\nvar histogram = require('./histogram');\nvar dotplot = require('./dotplot');\nvar _ = require('lodash');\nvar d3 = require('d3');\nvar css = require('generate-css');\n\nconst DO_BENCHMARK = false;\n\nvar COLOR_RANGES = {\n\trg: ['red', 'green'],\n\trg_quantized: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n\trainbow: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\trainbow_quantized: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange']\n};\n\nfunction refreshAutoScale() {\n\tvar radio = document.getElementById('color-options');\n\tvar auto = _.find(radio.children, {\n\t\tvalue: 'auto'\n\t});\n\tauto.checked = false;\n\tauto.click();\n}\n\nvar _refreshAutoDots;\n\nfunction refreshAutoDots() {\n\t_refreshAutoDots();\n}\n\nfunction buildDiv(element_id) {\n\tconst div = d3.select(element_id);\n\n\tdiv.append('style').text(css.getStyleSheetForDiv(element_id));\n\n\tdiv.append('canvas').attr('id', 'dotplot-canvas-bak');\n\tdiv.append('canvas').attr('id', 'dotplot-canvas');\n\tdiv.append('svg').attr('id', 'dotplot');\n\n\tconst histogramWrapper = div.append('div').attr('id', 'histogram-wrapper');\n\thistogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\thistogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\thistogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\n\tconst formWrapper = div.append('div').attr('id', 'form-wrapper');\n\n\tfunction makeForm(title, optionId, elements, checkIndex) {\n\t\tconst navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\tnavOptions.append('strong').text(title + ': ');\n\n\t\tconst navForm = navOptions.append('form').attr('id', optionId);\n\t\tconst options = navForm.selectAll('input')\n\t\t\t.data(elements).enter().append('input')\n\t\t\t.attr('type', 'radio').attr('name', optionId)\n\t\t\t.attr('value', d => d[0]);\n\n\t\toptions.forEach(selection => {\n\t\t\tselection.forEach((element, i) => {\n\t\t\t\tconst label = document.createElement('label');\n\t\t\t\tlabel.textContent = elements[i][1];\n\t\t\t\tnavForm.node().insertBefore(label, element);\n\t\t\t});\n\t\t});\n\n\t\toptions[0][checkIndex].checked = true;\n\t}\n\n\tconst option = (value, text) => [value, text];\n\n\tmakeForm('Navigation Mode', 'mouse-options', [\n\t\toption('brush', 'Brushing'),\n\t\toption('pan', 'Panning')\n\t], 0);\n\n\tmakeForm('Plotting order', 'summary-options', [\n\t\toption('minimum', 'High to Low'),\n\t\toption('maximum', 'Low to High')\n\t], 0);\n\n\tmakeForm('Dot Plot Coloring', 'plot-var-options', [\n\t\toption('logks', 'log ks'),\n\t\toption('logkn', 'log kn'),\n\t\toption('logkskn', 'log ks/kn')\n\t], 0);\n\n\tmakeForm('Color Scale', 'color-options', [\n\t\toption('rg', 'red-green'),\n\t\toption('rg_quantized', 'rg_quantized'),\n\t\toption('rainbow', 'rainbow'),\n\t\toption('rainbow_quantized', 'rainbow_quantized'),\n\t\toption('auto', 'auto')\n\t], 0);\n\n\tconst persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\tpersistenceOptions.append('strong').text('Auto-scale persistence');\n\n\tpersistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100)\n\t\t.attr('value', 40).attr('step', 1)\n\t\t.attr('oninput', 'refreshAutoDots(); document.getElementById(\\'persistence-text\\').innerText=this.value');\n\n\tpersistenceOptions.append('button').attr('type', 'button').attr('onclick', 'refreshAutoScale()').text('Refresh auto scale');\n\n\tpersistenceOptions.append('p').text('Largest persistence edge that will be removed: ').append('label').attr('id', 'persistence-text').text('40');\n}\n\nfunction controller(dataObj, element_id) {\n\n\tbuildDiv('#' + element_id);\n\n\t_refreshAutoDots = function() {\n\t\t_.each(histograms, function(h) {\n\t\t\th.refreshAutoScale('autoscale');\n\t\t});\n\t};\n\n\tvar syntenyPlot;\n\t/* zoom/pan switching */\n\td3.selectAll('#mouse-options input[name=mouse-options]')\n\t\t.on('change', function() {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\n\t/* summary mode switching */\n\td3.selectAll('#summary-options input[name=summary-options]')\n\t\t.on('change', function() {\n\t\t\tdataObj.setOrder('logks', this.value === 'minimum');\n\t\t});\n\n\t/* Plot variable switching */\n\td3.selectAll('#plot-var-options input[name=plot-var-options]')\n\t\t.on('change', function() {\n\t\t\thistograms[activeField].setColorScale(steelBlueCS);\n\t\t\tactiveField = this.value;\n\t\t\tsyntenyPlot.setField(activeField);\n\t\t\tvar newCS;\n\t\t\tif (activeCS === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][activeCS];\n\t\t\t}\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t});\n\n\t/* color mode switching */\n\tvar activeField = 'logks';\n\tvar activeCS = 'rg';\n\td3.selectAll('#color-options input[name=color-options]')\n\t\t.on('change', function() {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = histograms[activeField].getAutoScale();\n\t\t\t} else {\n\t\t\t\tnewCS = colorScales[activeField][this.value];\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\tactiveCS = this.value;\n\t\t});\n\n\tvar fields = ['logks', 'logkn', 'logkskn'];\n\tvar colorScales = _.chain(fields)\n\t\t.map(function(field) {\n\t\t\treturn [field, d3.extent(_.pluck(dataObj.currentData().raw, field))];\n\t\t})\n\t\t.object()\n\t\t.mapValues(function(extent) {\n\t\t\tvar max = extent[1];\n\t\t\tvar min = extent[0];\n\t\t\tvar range = max - min;\n\n\t\t\treturn _.mapValues(COLOR_RANGES, function(colorRange, colorScaleName) {\n\t\t\t\tvar step = range / (colorRange.length - 1);\n\t\t\t\t// Extra .5 * step is to avoid missing a value because of floating point precision\n\t\t\t\tvar domain = _.range(min, max + 0.5 * step, step);\n\n\t\t\t\tvar scale = colorScaleName.indexOf('quantized') > -1 ? d3.scale.quantize() : d3.scale.linear();\n\t\t\t\treturn scale.domain(domain).range(colorRange);\n\t\t\t});\n\t\t})\n\t\t.value();\n\n\n\tvar steelBlueCS = _.constant('steelblue');\n\tvar initialColorScale = colorScales[activeField].rg;\n\n\tsyntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initialColorScale);\n\tvar histograms = {\n\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initialColorScale),\n\t\t'logkn': histogram.histogram('#plot2', dataObj, 'logkn', steelBlueCS),\n\t\t'logkskn': histogram.histogram('#plot3', dataObj, 'logkskn', steelBlueCS)\n\t};\n\tdataObj.notifyListeners('initial');\n\n\t/* Benchmark */\n\tif (DO_BENCHMARK) {\n\t\tvar [minLogKs, maxLogKs] = d3.extent(dataObj.currentData().raw, x => x.logks);\n\t\tvar points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\n\t\tvar rangeList = _.chain(points)\n\t\t\t.map(lo => _.map(points, hi => [lo, hi]))\n\t\t\t.flatten()\n\t\t\t.filter(([lo, hi]) => lo < hi)\n\t\t\t.value();\n\n\t\tvar asyncBenchmark = require('async-benchmark');\n\t\tasyncBenchmark.benchmark(rangeList, function(range) {\n\t\t\thistograms.logks.brush.extent(range);\n\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t}, function(info) {\n\t\t\talert('Average brush time: ' + info.average + ', max: ' + info.max);\n\t\t});\n\t}\n}\n\nexports.refreshAutoDots = refreshAutoDots;\nexports.refreshAutoScale = refreshAutoScale;\nexports.controller = controller;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/synteny-vis.js\n **/","'use strict';\n\nexports.getPersistence = function getPersistence() {\n\treturn Number(document.getElementById('persistence').value);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/window.js\n **/","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/queue-async/queue.js\n ** module id = 11\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 12\n ** module chunks = 0\n **/"],"sourceRoot":""}