{"version":3,"sources":["webpack:///synteny-dotplot-builder.js","webpack:///webpack/bootstrap 5b6f5d25d3a20070464c","webpack:///./src/main.js","webpack:///./~/lodash/index.js","webpack:///./~/d3/d3.js","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/persistence.js","webpack:///./~/svg-transform/index.js","webpack:///./src/async-benchmark.js","webpack:///./src/auto-colorscale.js","webpack:///./src/colorscales.js","webpack:///./src/dotplot.js","webpack:///./src/histogram.js","webpack:///./src/synteny-vis.js","webpack:///./~/crossfilter/crossfilter.js","webpack:///./~/crossfilter/index.js","webpack:///./src/style.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/queue-async/queue.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/style.css?2ad8","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","ksTextToObjects","text","csvLines","replace","split","_","chain","filter","line","map","ksLineToSyntenyDot","isFinite","logks","logkn","value","fields","ks","Number","kn","log10","n","Math","log","logkskn","x_chromosome_id","y_chromosome_id","x_relative_offset","round","y_relative_offset","lengthsToCumulativeBPCounts","len_list","ntLenList","sortBy","reverse","reduce","kv","name","total","length","nameLenList","gene_count","geneCounts","object","x","nt","gene_counts","inlineKSData","xmap","ymap","each","ksObj","xShift","yShift","createDataObj","syntenyDots","xmapPair","ymapPair","filterMapForNames","pairs","pluck","reject","ret","cross","crossfilter","cross_all","dimension","cross_x","cross_y","cross_logks","getXLineOffsets","values","getYLineOffsets","getXLineNames","getYLineNames","currentData","raw","active","top","Infinity","currentDataSummary","ticks","group","sortedIndex","dx","groups","result","key","zeros","merge","_ref2","_ref22","_slicedToArray","y","addSpatialFilter","extents","typeHint","notifyListeners","removeSpatialFilter","filterAll","addDataFilter","extent","field","removeDataFilter","listeners","addListener","push","typeOfChange","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","err","Array","isArray","Object","TypeError","queue","d3","sv","makeSyntenyDotPlot","_ref","data_url","element_id","genome_x","genome_y","defer","await","console","x_name","y_name","ksData","xCumLenMap","chromosomes","yCumLenMap","inlinedKSData","ksDataObject","controller","window","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","other","valIsNull","valIsUndef","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","data","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","set","Set","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","args","FUNC_ERROR_TEXT","setTimeout","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","arguments","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","getNative","isNative","transforms","size","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","match","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","unzipWith","xor","zipObject","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","isString","sample","toArray","rand","shuffle","some","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","now","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","memoize","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Date","Error","String","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","floor","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","delay","flow","flowRight","modArgs","partial","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","omit","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","snakeCase","startCase","e","method","methodOf","backflow","collect","compose","eachRight","extend","methods","select","tail","unique","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","concat","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","b","d","f","r","t","u","v","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","left","lo","hi","right","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","defineProperty","enumerable","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","on","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","j","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","margin","padding","border","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","then","time","timer","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","t1","d3_format_precision","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","join","specifier","d3_format_re","align","sign","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","date","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","getMonth","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","zips","transpose","matrix","entries","merged","empty","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","csv","tsv","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","ROUNDING_FACTOR","RUN_BENCHMARKS","SHOW_MAXIMA_AND_MINIMA","AUTO_SCALE_VALLEY_FILL","SYNTENY_MARGIN","CIRCLE_RADIUS","UNSELECTED_DOT_FILL","NUM_COLOR_SCALE_INTERPOLATION_SAMPLES","DOTPLOT_COLOR_TRANS_LEN","MAXIMIZE_WIDTH","MIN_TEXT_GAP","HISTOGRAM_MARGIN","HISTOGRAM_Y_SCALE_TRANS_LEN","NUM_HISTOGRAM_TICKS","UNSELECTED_BAR_FILL","COLOR_RANGES","rg","quantized","rg_quantized","rainbow","rainbow_quantized","unselected","getComputedAttr","element","samplePointsInRange","timeIt","_len","_key","removeNonExtrema","here","gapBetweenPoints","indexOfSmallestPointDifference","simplify","_x","_x2","_again","dirtyPoints","persistence","toRemove","prop","benchmark","testArgs","results","runOne","tests","stats","arg","totalTime","average","persistenceFuncs","_require","generateAutoScale","extrema","generateColorScaleFromExtrema","isMaxima","shouldBeMarked","colors","colored","utils","onData","generateScale","colorScale","synteny","dataObj","initialColorScale","meta","resizeBrushBoundary","scaling","corners","vertical","horizontal","horizontalRescale","verticalRescale","drawBG","allDots","clearRect","height","fillStyle","xScale","yScale","fillRect","draw","elapsedMS","finalColorScale","intermediateColorScale","interpolateScales","allData","activeDots","roundlogks","val","loIndex","hiIndex","diff","aDomain","bDomain","setSyntenyData","setNavigationMode","setColorScale","newColorScale","setField","dataAspectRatio","baseID","svgElement","getElementById","computedWidth","computedHeight","windowAspectRatio","filterTextGaps","makeLabels","xFilter","yFilter","tempXOffsets","xOffsets","tempXGaps","xMidpoints","tempYOffsets","yOffsets","tempYGaps","yMidpoints","xGridLines","xLabels","yGridLines","yLabels","xAxisGapsGroup","yAxisGapsGroup","xAxisLineGroup","yAxisLineGroup","brushGroup","canvas","backCanvas","getContext","TEXT_OFFSET","TEXT_BOX_HEIGHT","midpoints","xOffsetToName","xAxisBase","xAxisWrapper","yOffsetToName","yAxisBase","yAxisWrapper","setNavMode","plotBrushBrush","plotBrush","plotBrushEnd","updateColors","dataBarSel","updateMinMaxMarkers","summary","summaryF","markers","tempSelA","plot","xPlotScale","yPlotScale","updatePlot","tempSel","getYExtent","yAxisSel","yAxis","updatePlotAttrs","dataExtent","plotWidth","plotHeight","prettyNames","brushSelectForBM","xAxis","updateHeights","sendBrushEvent","buildDiv","makeForm","title","optionId","elements","checkIndex","navOptions","formWrapper","navForm","label","checked","div","subdiv","histogramWrapper","option","persistenceOptions","refreshAutoScale","radio","auto","histograms","activeField","autoscale","getPersistence","innerText","syntenyPlot","newCS","activePlot","initialAutoScale","dotplot","_d3$extent","_d3$extent2","minLogKs","maxLogKs","rangeList","asyncBenchmark","_ref3","alert","crossfilter_identity","bisect_by","heap_by","heap","sift","heapselect_by","heapselect","insertionsort_by","insertionsort","quicksort_by","quicksort_sizeThreshold","quicksort","sixth","i5","i3","i2","i4","e2","e3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","crossfilter_arrayUntyped","crossfilter_arrayLengthenUntyped","crossfilter_arrayWidenUntyped","crossfilter_filterExact","crossfilter_filterRange","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","crossfilter_reduceDecrement","crossfilter_reduceAdd","crossfilter_reduceSubtract","filters","crossfilter_arrayLengthen","dataListeners","removeData","newIndex","crossfilter_index","removed","filterListeners","removeDataListeners","preAdd","newValues","crossfilter_range","refilter","lo1","hi1","refilterFunction","one","lo0","hi0","oldValues","oldIndex","postAdd","indexListeners","reIndex","filterIndexBounds","filterIndexFunction","added","filterRange","filterFunction","filterExact","groupIncrement","groupCapacity","crossfilter_arrayWiden","groupWidth","crossfilter_capacity","g0","oldGroups","reduceAdd","reduceInitial","k0","resetNeeded","updateMany","resetMany","groupAll","updateOne","resetOne","oldK","seenGroups","filterOne","reduceRemove","reduceCount","reduceSum","orderNatural","dispose","dimensionGroups","reduceValue","crossfilter_array8","crossfilter_array16","crossfilter_array32","Uint16Array","Uint32Array","item","mediaQuery","alreadyImportedModules","parallelism","popping","tasks","notify","awaitAll","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","firstChild","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","obj","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","encodeURIComponent","blob","oldSrc","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","content","locals","webpackPolyfill","deprecate"],"mappings":"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","file":"synteny-dotplot-builder.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar queue = __webpack_require__(17);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar sv = __webpack_require__(12);\n\tvar crossfilter = __webpack_require__(14);\n\t\n\texports.makeSyntenyDotPlot = function (_ref) {\n\t\tvar data_url = _ref.data_url;\n\t\tvar element_id = _ref.element_id;\n\t\tvar genome_x = _ref.genome_x;\n\t\tvar genome_y = _ref.genome_y;\n\t\n\t\tqueue().defer(d3.text, data_url).await(function (err, ks) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar x_name = genome_x.name;\n\t\t\tvar y_name = genome_y.name;\n\t\n\t\t\tvar ksData = ksTextToObjects(ks);\n\t\t\tvar xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t\t\tvar yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t\t\tvar inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\t\n\t\t\tvar ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tsv.controller(ksDataObject, element_id, { x_name: x_name, y_name: y_name });\n\t\t});\n\t};\n\t\n\tfunction ksTextToObjects(text) {\n\t\t/* .ks files are delimited with a combination of tabs and double bars. */\n\t\tvar csvLines = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '').split('\\n');\n\t\n\t\treturn _.chain(csvLines).filter(function (line) {\n\t\t\treturn line && line[0] !== '#';\n\t\t}).map(ksLineToSyntenyDot).filter(function (line) {\n\t\t\treturn isFinite(line.logks) && isFinite(line.logkn);\n\t\t}).value();\n\t}\n\t\n\tfunction ksLineToSyntenyDot(line) {\n\t\tvar fields = line.split(',');\n\t\n\t\tvar ks = Number(fields[0]);\n\t\tvar kn = Number(fields[1]);\n\t\tvar log10 = function log10(n) {\n\t\t\treturn Math.log(n) / Math.log(10);\n\t\t};\n\t\n\t\treturn {\n\t\t\tks: ks,\n\t\t\tlogks: log10(ks),\n\t\t\tkn: kn,\n\t\t\tlogkn: log10(kn),\n\t\t\tlogkskn: log10(ks) - log10(kn),\n\t\t\tx_chromosome_id: fields[3],\n\t\t\ty_chromosome_id: fields[15],\n\t\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t\t};\n\t}\n\t\n\tfunction lengthsToCumulativeBPCounts(len_list) {\n\t\tvar ntLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar nameLenList = _.chain(len_list).sortBy('name').reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geneCounts = _.object(_.map(len_list, function (x) {\n\t\t\treturn x.name;\n\t\t}), _.map(len_list, function (x) {\n\t\t\treturn x.gene_count;\n\t\t}));\n\t\n\t\treturn {\n\t\t\tnt: ntLenList,\n\t\t\tname: nameLenList,\n\t\t\tgene_counts: geneCounts\n\t\t};\n\t}\n\t\n\t// Compute absolute BP offset from chromosome and relative offset\n\tfunction inlineKSData(ks, xmap, ymap) {\n\t\t_.each(ks, function (ksObj) {\n\t\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\t\tksObj.x_relative_offset += xShift;\n\t\t\tksObj.y_relative_offset += yShift;\n\t\t});\n\t\treturn ks;\n\t}\n\t\n\tfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\t\tvar xmap = xmapPair.nt;\n\t\tvar ymap = ymapPair.nt;\n\t\tvar ret = {};\n\t\n\t\tvar cross = crossfilter(syntenyDots);\n\t\tvar cross_all = cross.dimension(function (x) {\n\t\t\treturn x.logks;\n\t\t});\n\t\tvar cross_x = cross.dimension(function (x) {\n\t\t\treturn x.x_relative_offset;\n\t\t});\n\t\tvar cross_y = cross.dimension(function (x) {\n\t\t\treturn x.y_relative_offset;\n\t\t});\n\t\tvar cross_logks = cross.dimension(function (x) {\n\t\t\treturn x.logks;\n\t\t});\n\t\n\t\tret.getXLineOffsets = function () {\n\t\t\treturn _.chain(xmap).values().sortBy().value();\n\t\t};\n\t\n\t\tret.getYLineOffsets = function () {\n\t\t\treturn _.chain(ymap).values().sortBy().value();\n\t\t};\n\t\n\t\tret.getXLineNames = function () {\n\t\t\treturn filterMapForNames(xmap);\n\t\t};\n\t\n\t\tret.getYLineNames = function () {\n\t\t\treturn filterMapForNames(ymap);\n\t\t};\n\t\n\t\tfunction filterMapForNames(map) {\n\t\t\treturn _.chain(map).pairs().sortBy('1').pluck('0').reject(function (x) {\n\t\t\t\treturn x === 'total';\n\t\t\t}).value();\n\t\t}\n\t\n\t\tret.currentData = function currentData() {\n\t\t\treturn {\n\t\t\t\traw: syntenyDots,\n\t\t\t\tactive: cross_all.top(Infinity)\n\t\t\t};\n\t\t};\n\t\n\t\tret.currentDataSummary = function currentDataSummary(ticks) {\n\t\t\tvar group = cross_logks.group(function (x) {\n\t\t\t\treturn ticks[_.sortedIndex(ticks, x)];\n\t\t\t});\n\t\t\tvar dx = ticks[1] - ticks[0];\n\t\n\t\t\treturn function () {\n\t\t\t\tvar groups = group.top(Infinity);\n\t\t\t\tvar result = _.object(groups.map(function (x) {\n\t\t\t\t\treturn [x.key, x.value];\n\t\t\t\t}));\n\t\t\t\tvar zeros = _.object(ticks.map(function (x) {\n\t\t\t\t\treturn [x, 0];\n\t\t\t\t}));\n\t\n\t\t\t\treturn _(zeros).merge(result).pairs().map(function (x) {\n\t\t\t\t\treturn x.map(Number);\n\t\t\t\t}).map(function (_ref2) {\n\t\t\t\t\tvar _ref22 = _slicedToArray(_ref2, 2);\n\t\n\t\t\t\t\tvar x = _ref22[0];\n\t\t\t\t\tvar y = _ref22[1];\n\t\t\t\t\treturn { x: x, y: y, dx: dx };\n\t\t\t\t}).sortBy('x').value();\n\t\t\t};\n\t\t};\n\t\n\t\tret.addSpatialFilter = function (extents, typeHint) {\n\t\t\tcross_x.filter([extents[0][0], extents[1][0]]);\n\t\t\tcross_y.filter([extents[0][1], extents[1][1]]);\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.removeSpatialFilter = function (typeHint) {\n\t\t\tcross_x.filterAll();\n\t\t\tcross_y.filterAll();\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.addDataFilter = function (extent, field, typeHint) {\n\t\t\tfield = field + ' Just satisfying the linter :) Will fix it eventually... ';\n\t\t\tcross_logks.filter(extent);\n\t\t\tret.notifyListeners(typeHint || 'data');\n\t\t};\n\t\n\t\tret.removeDataFilter = function () {\n\t\t\tcross_logks.filterAll();\n\t\t\tret.notifyListeners('data-stop');\n\t\t};\n\t\n\t\tvar listeners = [];\n\t\tret.addListener = function (x) {\n\t\t\tlisteners.push(x);\n\t\t};\n\t\n\t\tret.notifyListeners = function (typeOfChange) {\n\t\t\t_.each(listeners, function (x) {\n\t\t\t\tx(typeOfChange);\n\t\t\t});\n\t\t};\n\t\n\t\treturn ret;\n\t}\n\t\n\t// We need to expose this to the outside world.\n\twindow.makeSyntenyDotPlot = exports.makeSyntenyDotPlot;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(20)(module), (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.9\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (node = group[i]) {\n\t            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n\t              exitNodes[i] = node;\n\t            } else {\n\t              nodeByKeyValue.set(keyValue, node);\n\t            }\n\t            keyValues[i] = keyValue;\n\t          }\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = d3_array(nodes);\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n\t    if (d2 < ε2) {\n\t      S = Math.log(w1 / w0) / ρ;\n\t      i = function(t) {\n\t        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n\t      };\n\t    } else {\n\t      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n\t      S = (r1 - r0) / ρ;\n\t      i = function(t) {\n\t        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      };\n\t    }\n\t    i.duration = S * 1e3;\n\t    return i;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: null\n\t      };\n\t      scaleTo(+_);\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function() {\n\t    d3_timer.apply(this, arguments);\n\t  };\n\t  function d3_timer(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t    return timer;\n\t  }\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now(), timer = d3_timer_queueHead;\n\t    while (timer) {\n\t      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n\t      timer = timer.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.c) {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      } else {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value = +value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n\t          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransformPop(s) {\n\t    return s.length ? s.pop() + \",\" : \"\";\n\t  }\n\t  function d3_interpolateTranslate(ta, tb, s, q) {\n\t    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n\t      var i = s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateRotate(ra, rb, s, q) {\n\t    if (ra !== rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateSkew(wa, wb, s, q) {\n\t    if (wa !== wb) {\n\t      q.push({\n\t        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateScale(ka, kb, s, q) {\n\t    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n\t      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: i - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: i - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] !== 1 || kb[1] !== 1) {\n\t      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n\t    }\n\t  }\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [];\n\t    a = d3.transform(a), b = d3.transform(b);\n\t    d3_interpolateTranslate(a.translate, b.translate, s, q);\n\t    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n\t    d3_interpolateSkew(a.skew, b.skew, s, q);\n\t    d3_interpolateScale(a.scale, b.scale, s, q);\n\t    a = b = null;\n\t    return function(t) {\n\t      var i = -1, n = q.length, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        timer = null;\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) {\n\t          alpha = x;\n\t        } else {\n\t          timer.c = null, timer.t = NaN, timer = null;\n\t          event.start({\n\t            type: \"end\",\n\t            alpha: alpha = 0\n\t          });\n\t        }\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        timer = d3_timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = root.y = 0;\n\t      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var rc1 = rc, rc0 = rc;\n\t        if (da < π) {\n\t          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n\t          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n\t        }\n\t        if (x1 != null) {\n\t          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return points.join(\"L\") + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, activeId, active;\n\t      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        if (--lock.count) delete lock[activeId]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id], time, timer, duration, ease, tweens;\n\t    function schedule(elapsed) {\n\t      var delay = transition.delay;\n\t      timer.t = delay + time;\n\t      if (delay <= elapsed) return start(elapsed - delay);\n\t      timer.c = start;\n\t    }\n\t    function start(elapsed) {\n\t      var activeId = lock.active, active = lock[activeId];\n\t      if (active) {\n\t        active.timer.c = null;\n\t        active.timer.t = NaN;\n\t        --lock.count;\n\t        delete lock[activeId];\n\t        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t      }\n\t      for (var cancelId in lock) {\n\t        if (+cancelId < id) {\n\t          var cancel = lock[cancelId];\n\t          cancel.timer.c = null;\n\t          cancel.timer.t = NaN;\n\t          --lock.count;\n\t          delete lock[cancelId];\n\t        }\n\t      }\n\t      timer.c = tick;\n\t      d3_timer(function() {\n\t        if (timer.c && tick(elapsed || 1)) {\n\t          timer.c = null;\n\t          timer.t = NaN;\n\t        }\n\t        return 1;\n\t      }, 0, time);\n\t      lock.active = id;\n\t      transition.event && transition.event.start.call(node, node.__data__, i);\n\t      tweens = [];\n\t      transition.tween.forEach(function(key, value) {\n\t        if (value = value.call(node, node.__data__, i)) {\n\t          tweens.push(value);\n\t        }\n\t      });\n\t      ease = transition.ease;\n\t      duration = transition.duration;\n\t    }\n\t    function tick(elapsed) {\n\t      var t = elapsed / duration, e = ease(t), n = tweens.length;\n\t      while (n > 0) {\n\t        tweens[--n].call(node, e);\n\t      }\n\t      if (t >= 1) {\n\t        transition.event && transition.event.end.call(node, node.__data__, i);\n\t        if (--lock.count) delete lock[id]; else delete node[ns];\n\t        return 1;\n\t      }\n\t    }\n\t    if (!transition) {\n\t      time = inherit.time;\n\t      timer = d3_timer(schedule, 0, time);\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        timer: timer,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = d3_array(arguments);\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.ROUNDING_FACTOR = 10;\n\t\n\texports.RUN_BENCHMARKS = false;\n\t\n\texports.SHOW_MAXIMA_AND_MINIMA = true;\n\t\n\texports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\t\n\texports.SYNTENY_MARGIN = 50;\n\texports.CIRCLE_RADIUS = 2;\n\texports.UNSELECTED_DOT_FILL = '#D0D0D0';\n\texports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\n\texports.DOTPLOT_COLOR_TRANS_LEN = 500;\n\texports.MAXIMIZE_WIDTH = true;\n\texports.MIN_TEXT_GAP = 12;\n\t\n\texports.HISTOGRAM_MARGIN = 50;\n\texports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\n\texports.NUM_HISTOGRAM_TICKS = 100;\n\texports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\t\n\texports.COLOR_RANGES = {\n\t\trg: {\n\t\t\trange: ['red', 'green'],\n\t\t\tquantized: false\n\t\t},\n\t\trg_quantized: {\n\t\t\trange: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'], /* From colorbrewer */\n\t\t\tquantized: true\n\t\t},\n\t\trainbow: {\n\t\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\t\tquantized: false\n\t\t},\n\t\trainbow_quantized: {\n\t\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\t\tquantized: true\n\t\t},\n\t\tunselected: {\n\t\t\trange: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n\t\t\tquantized: false\n\t\t}\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\texports.getComputedAttr = function getComputedAttr(element, attr) {\n\t\tvar computed = getComputedStyle(element)[attr];\n\t\treturn parseInt(computed, 10);\n\t};\n\t\n\texports.samplePointsInRange = function (extent, n) {\n\t\treturn _.map(_.range(n), d3.scale.linear().domain([0, n - 1]).range(extent));\n\t};\n\t\n\texports.timeIt = function (f, name) {\n\t\treturn function () {\n\t\t\tvar start = Date.now();\n\t\n\t\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\targs[_key] = arguments[_key];\n\t\t\t}\n\t\n\t\t\tvar x = f.call.apply(f, [null].concat(args));\n\t\t\tconsole.log(name, Date.now() - start);\n\t\t\treturn x;\n\t\t};\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\texports.simplify = function simplify(_x, _x2) {\n\t\tvar _again = true;\n\t\n\t\t_function: while (_again) {\n\t\t\tvar dirtyPoints = _x,\n\t\t\t    persistence = _x2;\n\t\t\t_again = false;\n\t\n\t\t\tvar points = removeNonExtrema(dirtyPoints);\n\t\t\tvar index = indexOfSmallestPointDifference(points);\n\t\n\t\t\tif (points.length < 3 || gapBetweenPoints(points, index) > persistence) return points;\n\t\n\t\t\tvar toRemove = index === 0 ? 1 : index;\n\t\t\tpoints.splice(toRemove, 1);\n\t\n\t\t\t_x = points;\n\t\t\t_x2 = persistence;\n\t\t\t_again = true;\n\t\t\tpoints = index = toRemove = undefined;\n\t\t\tcontinue _function;\n\t\t}\n\t};\n\t\n\tfunction removeNonExtrema(A) {\n\t\treturn _.filter(A, function (element, index) {\n\t\t\tif (index === 0 || index === A.length - 1) return true;\n\t\n\t\t\tvar before = A[index - 1].y;\n\t\t\tvar here = element.y;\n\t\t\tvar after = A[index + 1].y;\n\t\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t\t});\n\t}\n\t\n\tfunction gapBetweenPoints(A, i) {\n\t\treturn Math.abs(A[i].y - A[i + 1].y);\n\t}\n\t\n\tfunction indexOfSmallestPointDifference(A) {\n\t\treturn _(A.length - 1).range().min(function (i) {\n\t\t\treturn gapBetweenPoints(A, i);\n\t\t});\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function transform(props) {\n\t  var transform = [];\n\t  if (Array.isArray(props)) {\n\t    props.forEach(function forEachAccessor(prop) {\n\t      var key = Object.keys(prop)[0];\n\t      transform.push(key + '(' + prop[key] + ')');\n\t    });\n\t  }\n\t  return transform.join(' ');\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\t/*\n\t * I want to run a benchmark, but I don't want to block UI updates \n\t * in between iterations.\n\t *\n\t * My guess is that this isn't super accurate for fast functions.\n\t */\n\texports.benchmark = function (testArgs, f, done) {\n\t\n\t\tvar results = [];\n\t\tvar runOne = function runOne(tests) {\n\t\t\tif (!tests.length) return done(stats(results));\n\t\n\t\t\tresults.push(timeIt(f, tests[0]));\n\t\t\tsetTimeout(runOne, 0, tests.slice(1));\n\t\t};\n\t\tsetTimeout(runOne, 0, testArgs);\n\t\n\t\tvar timeIt = function timeIt(f, arg) {\n\t\t\tvar start = Date.now();\n\t\t\tf(arg);\n\t\t\treturn Date.now() - start;\n\t\t};\n\t\n\t\tvar stats = function stats(times) {\n\t\t\treturn {\n\t\t\t\ttotalTime: _.sum(times),\n\t\t\t\tcount: times.length,\n\t\t\t\tmax: _.max(times),\n\t\t\t\taverage: _.sum(times) / times.length\n\t\t\t};\n\t\t};\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar persistenceFuncs = __webpack_require__(5);\n\tvar d3 = __webpack_require__(2);\n\tvar _ = __webpack_require__(1);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar AUTO_SCALE_VALLEY_FILL = _require.AUTO_SCALE_VALLEY_FILL;\n\t\n\texports.generateAutoScale = function (points, persistence) {\n\t\tvar extrema = persistenceFuncs.simplify(points, persistence);\n\t\treturn generateColorScaleFromExtrema(extrema);\n\t};\n\t\n\tvar isMaxima = function isMaxima(A, i) {\n\t\treturn A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t};\n\tvar shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t\treturn i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t};\n\t\n\tvar generateColorScaleFromExtrema = function generateColorScaleFromExtrema(extrema) {\n\t\tvar colors = d3.scale.category10();\n\t\n\t\tvar colored = _.map(extrema, function (x, i, A) {\n\t\t\tvar color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n\t\t\treturn Object.assign({}, x, { color: color });\n\t\t});\n\t\n\t\tvar domain = _.map(colored, function (d) {\n\t\t\treturn d.x + d.dx / 2;\n\t\t});\n\t\tvar range = _.map(colored, function (d) {\n\t\t\treturn d.color;\n\t\t});\n\t\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d3 = __webpack_require__(2);\n\tvar _ = __webpack_require__(1);\n\tvar utils = __webpack_require__(4);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar COLOR_RANGES = _require.COLOR_RANGES;\n\t\n\texports.onData = function (data) {\n\t\tvar generateScale = function generateScale(field, name) {\n\t\t\tvar extent = d3.extent(data, function (point) {\n\t\t\t\treturn point[field];\n\t\t\t});\n\t\n\t\t\tvar colorScale = COLOR_RANGES[name];\n\t\t\tvar range = colorScale.range;\n\t\t\tvar domain = utils.samplePointsInRange(extent, range.length);\n\t\n\t\t\tvar scale = colorScale.quantized ? d3.scale.quantize() : d3.scale.linear();\n\t\n\t\t\treturn scale.domain(domain).range(range);\n\t\t};\n\t\n\t\t/* _.memoize acts only on the first arg unless we tell it otherwise */\n\t\treturn _.memoize(generateScale, function (field, name) {\n\t\t\treturn field + '.' + name;\n\t\t});\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar utils = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar transform = __webpack_require__(6);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar SYNTENY_MARGIN = _require.SYNTENY_MARGIN;\n\tvar CIRCLE_RADIUS = _require.CIRCLE_RADIUS;\n\tvar UNSELECTED_DOT_FILL = _require.UNSELECTED_DOT_FILL;\n\tvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = _require.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\tvar DOTPLOT_COLOR_TRANS_LEN = _require.DOTPLOT_COLOR_TRANS_LEN;\n\tvar MAXIMIZE_WIDTH = _require.MAXIMIZE_WIDTH;\n\tvar MIN_TEXT_GAP = _require.MIN_TEXT_GAP;\n\tvar ROUNDING_FACTOR = _require.ROUNDING_FACTOR;\n\t\n\tfunction synteny(id, dataObj, field, initialColorScale, meta) {\n\t\n\t\tvar xExtent = d3.extent(dataObj.getXLineOffsets());\n\t\tvar yExtent = d3.extent(dataObj.getYLineOffsets());\n\t\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\t\n\t\tvar baseID = id.substring(1);\n\t\tvar svgElement = document.getElementById(baseID);\n\t\tvar computedWidth = utils.getComputedAttr(svgElement, 'width');\n\t\tvar computedHeight = utils.getComputedAttr(svgElement, 'height');\n\t\tvar windowAspectRatio = computedHeight / computedWidth;\n\t\n\t\tvar width;\n\t\tvar height;\n\t\n\t\tif (MAXIMIZE_WIDTH || windowAspectRatio / dataAspectRatio > 1) {\n\t\t\twidth = computedWidth;\n\t\t\theight = dataAspectRatio * width;\n\t\t} else {\n\t\t\theight = computedHeight;\n\t\t\twidth = 1 / dataAspectRatio * height;\n\t\t}\n\t\n\t\td3.select(id).style('width', width + 2 * SYNTENY_MARGIN);\n\t\td3.select(id).style('height', height + 2 * SYNTENY_MARGIN);\n\t\n\t\t/* This fixes the alignment of the svg element and the canvas elements. \n\t  * Not really sure what is going on here -- we are close to a consistent\n\t  * transformation/offset scheme, but needs a bit more work. */\n\t\twidth -= 2 * SYNTENY_MARGIN;\n\t\theight -= 2 * SYNTENY_MARGIN;\n\t\n\t\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\t\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\t\n\t\tvar filterTextGaps = function filterTextGaps(values, scale) {\n\t\t\treturn values.reduce(function (out, next) {\n\t\t\t\tif (out.length === 0 || Math.abs(scale(next) - scale(_.last(out))) > MIN_TEXT_GAP) out.push(next);\n\t\t\t\treturn out;\n\t\t\t}, []);\n\t\t};\n\t\n\t\tvar makeLabels = function makeLabels() {\n\t\n\t\t\tvar xFilter = function xFilter(x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t};\n\t\t\tvar yFilter = function yFilter(y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t};\n\t\n\t\t\tvar tempXOffsets = filterTextGaps(_.filter(xOffsets, xFilter), xScale);\n\t\t\tvar tempXGaps = filterTextGaps(_.filter(xMidpoints, xFilter), xScale);\n\t\t\tvar tempYOffsets = filterTextGaps(_.filter(yOffsets, yFilter), yScale);\n\t\t\tvar tempYGaps = filterTextGaps(_.filter(yMidpoints, yFilter), yScale);\n\t\n\t\t\txGridLines.tickValues(tempXOffsets);\n\t\t\txLabels.tickValues(tempXGaps);\n\t\t\tyGridLines.tickValues(tempYOffsets);\n\t\t\tyLabels.tickValues(tempYGaps);\n\t\n\t\t\txAxisGapsGroup.call(xLabels);\n\t\t\tyAxisGapsGroup.call(yLabels);\n\t\t\txAxisLineGroup.call(xGridLines);\n\t\t\tyAxisLineGroup.call(yGridLines);\n\t\t};\n\t\n\t\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function () {\n\t\t\tvar t = d3.event.translate;\n\t\t\tvar s = d3.event.scale;\n\t\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t\t// prevents the translate from growing large. This way, you don't\n\t\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\t\tzoom.translate(t);\n\t\n\t\t\tbrushGroup.attr('transform', transform([{ translate: t }, { scale: s }]));\n\t\n\t\t\tresizeBrushBoundary();\n\t\t\tmakeLabels();\n\t\t\tdrawBG();\n\t\t\tsetSyntenyData();\n\t\t});\n\t\n\t\tfunction resizeBrushBoundary() {\n\t\t\tvar scaling = zoom.scale();\n\t\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\t\tvar vertical = ['.e', '.w'];\n\t\t\tvar horizontal = ['.n', '.s'];\n\t\t\tvar horizontalRescale = corners.concat(vertical);\n\t\t\tvar verticalRescale = corners.concat(horizontal);\n\t\n\t\t\t_.map(horizontalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t\t});\n\t\n\t\t\t_.map(verticalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t\t});\n\t\t}\n\t\n\t\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t  * All sorts of nasty things happen when the scales get changed underneath a\n\t  * brush. */\n\t\tvar brush = d3.svg.brush().x(xScale.copy()).y(yScale.copy()).on('brush', function () {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t}).on('brushend', function () {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t});\n\t\n\t\tvar canvas = d3.select(id + '-canvas').attr('width', width).attr('height', height).style('left', SYNTENY_MARGIN).style('top', SYNTENY_MARGIN);\n\t\n\t\tvar backCanvas = d3.select(id + '-canvas-background').attr('width', width).attr('height', height).style('left', SYNTENY_MARGIN).style('top', SYNTENY_MARGIN);\n\t\n\t\tvar context = canvas.node().getContext('2d');\n\t\tvar background = backCanvas.node().getContext('2d');\n\t\n\t\tvar svg = d3.select(id);\n\t\n\t\tvar TEXT_OFFSET = 35;\n\t\tvar TEXT_BOX_HEIGHT = 25;\n\t\tsvg.append('text').attr('x', (width + 2 * SYNTENY_MARGIN) / 3).attr('width', (width + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.x_name);\n\t\n\t\tsvg.append('text').attr('transform', 'rotate(-90)').attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3).attr('width', (height + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN - TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.y_name);\n\t\n\t\tsvg.append('defs').append('clipPath').attr('id', 'plot-clip-box').append('rect').attr('x', 0).attr('width', width).attr('y', 0).attr('height', height).attr('fill', 'black');\n\t\n\t\tvar midpoints = function midpoints(points) {\n\t\t\treturn _.zipWith(_.initial(points), _.rest(points), function (a, b) {\n\t\t\t\treturn (a + b) / 2;\n\t\t\t});\n\t\t};\n\t\n\t\tvar xOffsets = dataObj.getXLineOffsets();\n\t\tvar xMidpoints = midpoints(xOffsets);\n\t\n\t\tvar xOffsetToName = _.object(xMidpoints, dataObj.getXLineNames());\n\t\tvar xAxisBase = function xAxisBase() {\n\t\t\treturn d3.svg.axis().scale(xScale).orient('bottom');\n\t\t};\n\t\n\t\tvar xGridLines = xAxisBase().tickFormat('').tickSize(-height);\n\t\n\t\tvar xLabels = xAxisBase().tickFormat(function (x) {\n\t\t\treturn xOffsetToName[x];\n\t\t}).tickSize(0);\n\t\n\t\tvar xAxisWrapper = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, height + SYNTENY_MARGIN] }]));\n\t\tvar xAxisGapsGroup = xAxisWrapper.append('g');\n\t\tvar xAxisLineGroup = xAxisWrapper.append('g');\n\t\n\t\tvar yOffsets = dataObj.getYLineOffsets();\n\t\tvar yMidpoints = midpoints(yOffsets);\n\t\n\t\tvar yOffsetToName = _.object(yMidpoints, dataObj.getYLineNames());\n\t\tvar yAxisBase = function yAxisBase() {\n\t\t\treturn d3.svg.axis().scale(yScale).orient('left');\n\t\t};\n\t\n\t\tvar yGridLines = yAxisBase().tickFormat('').tickSize(-width);\n\t\n\t\tvar yLabels = yAxisBase().tickFormat(function (x) {\n\t\t\treturn yOffsetToName[x];\n\t\t}).tickSize(0);\n\t\n\t\tvar yAxisWrapper = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, SYNTENY_MARGIN] }]));\n\t\tvar yAxisGapsGroup = yAxisWrapper.append('g');\n\t\tvar yAxisLineGroup = yAxisWrapper.append('g');\n\t\n\t\tmakeLabels();\n\t\n\t\tsvg = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, SYNTENY_MARGIN] }])).append('g').attr('id', 'zoom-group').call(zoom).on('mousedown.zoom', null); //disable panning\n\t\n\t\tvar brushGroup = svg.append('g').attr('clip-path', 'url(#plot-clip-box)').append('g').attr('id', 'brush-group').call(brush);\n\t\n\t\tvar colorScale = initialColorScale;\n\t\n\t\tfunction drawBG() {\n\t\t\tvar allDots = dataObj.currentData().raw;\n\t\t\tbackground.clearRect(0, 0, width, height);\n\t\t\tbackground.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t_.each(allDots, function (d) {\n\t\t\t\tvar cx = xScale(d.x_relative_offset);\n\t\t\t\tvar cy = yScale(d.y_relative_offset);\n\t\n\t\t\t\tif (cx < 0 || cx > width || cy < 0 || cy > height) return;\n\t\n\t\t\t\tbackground.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t});\n\t\t}\n\t\n\t\tfunction draw(elapsedMS, initialColorScale, finalColorScale) {\n\t\t\tvar start = Date.now();\n\t\n\t\t\tvar intermediateColorScale;\n\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\n\t\t\tvar allData = dataObj.currentData();\n\t\t\tvar activeDots = allData.active;\n\t\n\t\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tcontext.clearRect(0, 0, width, height);\n\t\n\t\t\t/* On top, active dots */\n\t\t\tvar groups = [];\n\t\t\tvar index = 0;\n\t\n\t\t\tvar roundlogks = function roundlogks(x) {\n\t\t\t\treturn Math.floor(x.logks * ROUNDING_FACTOR) / ROUNDING_FACTOR;\n\t\t\t};\n\t\t\twhile (index < activeDots.length) {\n\t\t\t\tvar low = index;\n\t\t\t\tvar val = roundlogks(activeDots[index]);\n\t\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\t\tlogks: val\n\t\t\t\t}, function (x) {\n\t\t\t\t\treturn -roundlogks(x);\n\t\t\t\t});\n\t\t\t\tgroups.push([low, index]);\n\t\t\t}\n\t\n\t\t\t_.each(groups, function (_ref) {\n\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\t\n\t\t\t\tvar loIndex = _ref2[0];\n\t\t\t\tvar hiIndex = _ref2[1];\n\t\n\t\t\t\tcontext.fillStyle = intermediateColorScale(roundlogks(activeDots[loIndex]));\n\t\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\t\tvar d = activeDots[i];\n\t\t\t\t\tvar cx = xScale(d.x_relative_offset);\n\t\t\t\t\tvar cy = yScale(d.y_relative_offset);\n\t\n\t\t\t\t\tif (cx < 0 || cx > width || cy < 0 || cy > height) continue;\n\t\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tvar diff = Date.now() - start;\n\t\t\t//console.log('Start of call to end of draw call:', diff);\n\t\t\tif (elapsedMS > 0) {\n\t\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction interpolateScales(a, b, t) {\n\t\t\tvar aDomain = a.domain();\n\t\t\tvar bDomain = b.domain();\n\t\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\t\tvar max = Math.max(aDomain[aDomain.length - 1], bDomain[bDomain.length - 1]);\n\t\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\t\tvar domain = _.range(min, max + 1, step);\n\t\t\tvar range = _.map(domain, function (input) {\n\t\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t\t});\n\t\t\treturn d3.scale.linear().domain(domain).range(range);\n\t\t}\n\t\n\t\tfunction setSyntenyData() {\n\t\t\tdraw(0, colorScale, colorScale);\n\t\t}\n\t\tdataObj.addListener(setSyntenyData);\n\t\tdrawBG();\n\t\tsetSyntenyData();\n\t\n\t\tfunction setNavigationMode(mode) {\n\t\t\tif (mode === 'pan') {\n\t\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t\t} else if (mode === 'brush') {\n\t\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\t\tcolorScale = newColorScale;\n\t\t}\n\t\n\t\tfunction setField(f) {\n\t\t\tfield = f;\n\t\t\tsetSyntenyData();\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetNavMode: setNavigationMode,\n\t\t\tsetColorScale: setColorScale,\n\t\t\tsetField: setField\n\t\t};\n\t}\n\t\n\texports.synteny = synteny;\n\t\n\t// Local Variables:\n\t// mode: js2\n\t// js2-basic-offset: 8\n\t// End:\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar HISTOGRAM_MARGIN = _require.HISTOGRAM_MARGIN;\n\tvar HISTOGRAM_Y_SCALE_TRANS_LEN = _require.HISTOGRAM_Y_SCALE_TRANS_LEN;\n\tvar NUM_HISTOGRAM_TICKS = _require.NUM_HISTOGRAM_TICKS;\n\tvar UNSELECTED_BAR_FILL = _require.UNSELECTED_BAR_FILL;\n\t\n\tvar persistenceFuncs = __webpack_require__(5);\n\tvar utils = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar transform = __webpack_require__(6);\n\t\n\tfunction histogram(id, dataObj, field, colorScale) {\n\t\tvar dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\t\n\t\tvar plot = d3.select(id);\n\t\tvar plotWidth = utils.getComputedAttr(plot.node(), 'width');\n\t\tvar plotHeight = utils.getComputedAttr(plot.node(), 'height');\n\t\n\t\tvar prettyNames = {\n\t\t\tlogks: 'log(ks)',\n\t\t\tlogkn: 'log(kn)',\n\t\t\tlogkskn: 'log(ks/kn)'\n\t\t};\n\t\tplot.append('text').attr('x', 2 * plotHeight / 3).attr('width', plotHeight / 3).attr('y', 50).attr('height', 50).classed('histogram-title', true).text(prettyNames[field]);\n\t\n\t\tfunction plotBrushBrush() {\n\t\t\tif (!plotBrush.empty()) {\n\t\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction plotBrushEnd() {\n\t\t\tif (plotBrush.empty()) {\n\t\t\t\tdataObj.removeDataFilter(field);\n\t\t\t}\n\t\t\tdataObj.notifyListeners('histogram-stop');\n\t\t\tupdateColors(dataBarSel); // Cancel color animation -- just brushing\n\t\t}\n\t\n\t\tvar xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\t\n\t\tvar bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n\t\tvar summaryF = dataObj.currentDataSummary(bins);\n\t\tvar getYExtent = function getYExtent(summary) {\n\t\t\treturn [0, 3 / 2 * _.max(_.pluck(summary, 'y'))];\n\t\t};\n\t\n\t\tvar yPlotScale = d3.scale.linear().domain(getYExtent(summaryF())).range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\t\n\t\tfunction updateMinMaxMarkers(persistence) {\n\t\t\tvar summary = summaryF();\n\t\t\tvar extrema = persistenceFuncs.simplify(summary, persistence);\n\t\n\t\t\tvar isMaxima = function isMaxima(A, i) {\n\t\t\t\treturn A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t\t\t};\n\t\t\tvar shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t\t\t\treturn i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t\t\t};\n\t\t\tvar markers = _.map(extrema, function (d, i, A) {\n\t\t\t\treturn {\n\t\t\t\t\tcolor: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t\t\t\t\tx: d.x + d.dx / 2,\n\t\t\t\t\ty: d.y\n\t\t\t\t};\n\t\t\t});\n\t\n\t\t\tvar tempSelA = plot.selectAll('.maxMark').data(markers);\n\t\t\ttempSelA.exit().remove();\n\t\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\t\ttempSelA.attr('cx', function (d) {\n\t\t\t\treturn xPlotScale(d.x);\n\t\t\t}).attr('cy', function (d) {\n\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t}).attr('r', 3).attr('fill', function (d) {\n\t\t\t\treturn d.color;\n\t\t\t});\n\t\t}\n\t\n\t\tvar plotBrush = d3.svg.brush().x(xPlotScale).on('brush', plotBrushBrush).on('brushend', plotBrushEnd);\n\t\n\t\tvar dataBarSel = plot.selectAll('.dataBars').data(summaryF()).enter().append('rect').classed('dataBars', true).attr('x', function (d) {\n\t\t\treturn xPlotScale(d.x);\n\t\t}).attr('width', function (d) {\n\t\t\treturn xPlotScale(d.x + d.dx) - xPlotScale(d.x);\n\t\t});\n\t\n\t\tvar brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group').attr('transform', transform([{ translate: [0, HISTOGRAM_MARGIN] }])).call(plotBrush);\n\t\tbrushSelectForBM.selectAll('rect').attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\t\n\t\tvar xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\t\tvar yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\t\n\t\tplot.append('g').attr('transform', transform([{ translate: [0, plotHeight - HISTOGRAM_MARGIN] }])).classed('xAxis', true).call(xAxis);\n\t\tvar yAxisSel = plot.append('g').attr('transform', transform([{ translate: [HISTOGRAM_MARGIN, 0] }])).classed('yAxis', true).call(yAxis);\n\t\n\t\tvar updateHeights = function updateHeights(selection) {\n\t\t\tselection.transition(); // cancel transition\n\t\t\tselection.attr('y', function (d) {\n\t\t\t\treturn yPlotScale(d.y);\n\t\t\t});\n\t\t};\n\t\tvar updateColors = function updateColors(selection) {\n\t\t\tselection.transition(); // cancel transition\n\t\t\tvar extent = plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n\t\t\tvar active = function active(bin) {\n\t\t\t\treturn bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\t\t\t};\n\t\n\t\t\tselection.attr('height', function (d) {\n\t\t\t\treturn plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y);\n\t\t\t}).attr('fill', function (d) {\n\t\t\t\treturn active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL;\n\t\t\t});\n\t\t};\n\t\n\t\tvar updatePlotAttrs = function updatePlotAttrs(selection) {\n\t\t\tupdateHeights(selection);\n\t\t\tupdateColors(selection);\n\t\t};\n\t\n\t\tfunction updatePlot(typeHint) {\n\t\t\tdataBarSel.transition(); /* cancel previous transition */\n\t\n\t\t\ttypeHint = typeHint || '';\n\t\n\t\t\tvar summary = summaryF();\n\t\t\tvar tempSel = dataBarSel.data(summary);\n\t\n\t\t\tif (typeHint.indexOf('stop') > -1) {\n\t\t\t\tyPlotScale.domain(getYExtent(summary));\n\t\t\t\tyAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t\t\t\ttempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n\t\t\t}\n\t\n\t\t\ttempSel.call(updatePlotAttrs);\n\t\t}\n\t\n\t\tdataObj.addListener(updatePlot);\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tcolorScale = newColorScale;\n\t\t\tupdatePlot('stop'); /* trigger animation -- FIXME */\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetColorScale: setColorScale,\n\t\t\tbrush: plotBrush,\n\t\t\tsendBrushEvent: plotBrushBrush,\n\t\t\tselection: brushSelectForBM,\n\t\t\tupdateMinMaxMarkers: updateMinMaxMarkers,\n\t\t\tbins: summaryF\n\t\t};\n\t}\n\t\n\texports.histogram = histogram;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar histogram = __webpack_require__(11);\n\tvar dotplot = __webpack_require__(10);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar autoscale = __webpack_require__(8);\n\t\n\t__webpack_require__(19);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar RUN_BENCHMARKS = _require.RUN_BENCHMARKS;\n\tvar SHOW_MAXIMA_AND_MINIMA = _require.SHOW_MAXIMA_AND_MINIMA;\n\t\n\tfunction buildDiv(element_id) {\n\t\tvar div = d3.select(element_id).append('div').classed('_synteny-dotplot-builder', true);\n\t\n\t\tdiv.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\t\n\t\tvar subdiv = div.append('div').classed('dotplot', true);\n\t\t/* pointer-events = none stops the canvas from intercepting brush events\n\t  * before they get to the svg element below. */\n\t\tsubdiv.append('canvas').attr('id', 'dotplot-canvas-background').classed('dotplot', true).style('pointer-events', 'none');\n\t\tsubdiv.append('canvas').attr('id', 'dotplot-canvas').classed('dotplot', true).style('pointer-events', 'none');\n\t\n\t\tvar histogramWrapper = div.append('div').attr('id', 'histogram-wrapper');\n\t\thistogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\t\thistogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\t\thistogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\t\n\t\tvar formWrapper = div.append('div').attr('id', 'form-wrapper');\n\t\n\t\tfunction makeForm(title, optionId, elements, checkIndex) {\n\t\t\tvar navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\t\tnavOptions.append('strong').text(title + ': ');\n\t\n\t\t\tvar navForm = navOptions.append('form').attr('id', optionId);\n\t\t\tvar options = navForm.selectAll('input').data(elements).enter().append('input').attr('type', 'radio').attr('name', optionId).attr('value', function (d) {\n\t\t\t\treturn d[0];\n\t\t\t});\n\t\n\t\t\toptions.forEach(function (selection) {\n\t\t\t\tselection.forEach(function (element, i) {\n\t\t\t\t\tvar label = document.createElement('label');\n\t\t\t\t\tlabel.textContent = elements[i][1];\n\t\t\t\t\tnavForm.node().insertBefore(label, element);\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\toptions[0][checkIndex].checked = true;\n\t\t}\n\t\n\t\tvar option = function option(value, text) {\n\t\t\treturn [value, text];\n\t\t};\n\t\n\t\tmakeForm('Navigation Mode', 'mouse-options', [option('brush', 'Brushing'), option('pan', 'Panning')], 0);\n\t\n\t\tmakeForm('Color Scale', 'color-options', [option('auto', 'auto'), option('rainbow_quantized', 'rainbow_quantized')], 0);\n\t\n\t\tvar persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\tpersistenceOptions.append('strong').text('Auto-scale persistence');\n\t\n\t\tpersistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100).attr('value', 40).attr('step', 1);\n\t\n\t\tpersistenceOptions.append('button').attr('id', 'persistence-button').attr('type', 'button').text('Refresh auto scale');\n\t\n\t\tpersistenceOptions.append('p').text('Largest persistence edge that will be removed: ').append('label').attr('id', 'persistence-text').text('40');\n\t}\n\t\n\tfunction controller(dataObj, element_id, meta) {\n\t\n\t\tbuildDiv('#' + element_id);\n\t\n\t\tvar refreshAutoScale = function refreshAutoScale(persistence) {\n\t\t\tvar radio = document.getElementById('color-options');\n\t\t\tvar auto = _.find(radio.children, { value: 'auto' });\n\t\t\tauto.checked = true;\n\t\n\t\t\tvar h = histograms[activeField];\n\t\t\th.setColorScale(autoscale.generateAutoScale(h.bins(), persistence));\n\t\n\t\t\tif (SHOW_MAXIMA_AND_MINIMA) _.each(histograms, function (h) {\n\t\t\t\treturn h.updateMinMaxMarkers(persistence);\n\t\t\t});\n\t\t};\n\t\n\t\tvar getPersistence = function getPersistence() {\n\t\t\treturn d3.select('#persistence').node().value;\n\t\t};\n\t\n\t\td3.select('#persistence').on('input', function () {\n\t\t\tvar p = getPersistence();\n\t\t\trefreshAutoScale(p);\n\t\t\td3.select('#persistence-text').node().innerText = p;\n\t\t});\n\t\n\t\td3.select('#persistence-button').on('click', function () {\n\t\t\trefreshAutoScale(getPersistence());\n\t\t});\n\t\n\t\t/* zoom/pan switching */\n\t\td3.selectAll('#mouse-options input[name=mouse-options]').on('change', function () {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\t\n\t\t/* color mode switching */\n\t\tvar activeField = 'logks';\n\t\n\t\t/* Don't be cute and use fat arrow functions here. Fat arrow functions\n\t  * have a lexically bound \"this\" and we really really need the old \"this\"\n\t  * scoping, since we are getting value from a form. */\n\t\td3.selectAll('#color-options input[name=color-options]').on('change', function () {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t\t\t} else {\n\t\t\t\tnewCS = colorScale(activeField, this.value);\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t});\n\t\n\t\tvar colorScale = __webpack_require__(9).onData(dataObj.currentData().raw);\n\t\n\t\tvar initial = colorScale(activeField, 'rg');\n\t\n\t\tvar histograms = {\n\t\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initial)\n\t\t};\n\t\tvar activePlot = histograms[activeField];\n\t\tvar initialAutoScale = autoscale.generateAutoScale(activePlot.bins(), getPersistence());\n\t\tactivePlot.setColorScale(initialAutoScale);\n\t\n\t\tvar syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initialAutoScale, meta);\n\t\n\t\t// Since the histograms aren't controlling their own color scale policy\n\t\t// now (a good thing), we need to manually fire of their update methods.\n\t\t// Eventually, we should fix this up.\n\t\tdataObj.addListener(function (typeHint) {\n\t\t\tif (typeHint.indexOf('stop') > -1) _.each(histograms, function (h) {\n\t\t\t\treturn h.updateMinMaxMarkers(getPersistence());\n\t\t\t});\n\t\t});\n\t\tdataObj.notifyListeners('initial');\n\t\n\t\t/* Benchmark */\n\t\tif (RUN_BENCHMARKS) {\n\t\t\t(function () {\n\t\t\t\tvar _d3$extent = d3.extent(dataObj.currentData().raw, function (x) {\n\t\t\t\t\treturn x.logks;\n\t\t\t\t});\n\t\n\t\t\t\tvar _d3$extent2 = _slicedToArray(_d3$extent, 2);\n\t\n\t\t\t\tvar minLogKs = _d3$extent2[0];\n\t\t\t\tvar maxLogKs = _d3$extent2[1];\n\t\n\t\t\t\tvar points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\t\n\t\t\t\tvar rangeList = _.chain(points).map(function (lo) {\n\t\t\t\t\treturn _.map(points, function (hi) {\n\t\t\t\t\t\treturn [lo, hi];\n\t\t\t\t\t});\n\t\t\t\t}).flatten().filter(function (_ref) {\n\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\t\n\t\t\t\t\tvar lo = _ref2[0];\n\t\t\t\t\tvar hi = _ref2[1];\n\t\t\t\t\treturn lo < hi;\n\t\t\t\t}).value();\n\t\n\t\t\t\tvar asyncBenchmark = __webpack_require__(7);\n\t\t\t\tasyncBenchmark.benchmark(rangeList, function (range) {\n\t\t\t\t\thistograms.logks.brush.extent(range);\n\t\t\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t\t\t}, function (_ref3) {\n\t\t\t\t\tvar average = _ref3.average;\n\t\t\t\t\tvar max = _ref3.max;\n\t\n\t\t\t\t\talert('Average: ' + average + ', max: ' + max);\n\t\t\t\t});\n\t\t\t})();\n\t\t}\n\t}\n\t\n\texports.controller = controller;\n\t\n\t// Local Variables:\n\t// mode: js2\n\t// js2-basic-offset: 8\n\t// End:\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t(function(exports){\n\tcrossfilter.version = \"1.3.12\";\n\tfunction crossfilter_identity(d) {\n\t  return d;\n\t}\n\tcrossfilter.permute = permute;\n\t\n\tfunction permute(array, index) {\n\t  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n\t    copy[i] = array[index[i]];\n\t  }\n\t  return copy;\n\t}\n\tvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\t\n\tbisect.by = bisect_by;\n\t\n\tfunction bisect_by(f) {\n\t\n\t  // Locate the insertion point for x in a to maintain sorted order. The\n\t  // arguments lo and hi may be used to specify a subset of the array which\n\t  // should be considered; by default the entire array is used. If x is already\n\t  // present in a, the insertion point will be before (to the left of) any\n\t  // existing entries. The return value is suitable for use as the first\n\t  // argument to `array.splice` assuming that a is already sorted.\n\t  //\n\t  // The returned insertion point i partitions the array a into two halves so\n\t  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectLeft(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (f(a[mid]) < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  // Similar to bisectLeft, but returns an insertion point which comes after (to\n\t  // the right of) any existing entries of x in a.\n\t  //\n\t  // The returned insertion point i partitions the array into two halves so that\n\t  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectRight(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (x < f(a[mid])) hi = mid;\n\t      else lo = mid + 1;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  bisectRight.right = bisectRight;\n\t  bisectRight.left = bisectLeft;\n\t  return bisectRight;\n\t}\n\tvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\t\n\theap.by = heap_by;\n\t\n\tfunction heap_by(f) {\n\t\n\t  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n\t  // property such that the parent a[lo+i] is always less than or equal to its\n\t  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n\t  function heap(a, lo, hi) {\n\t    var n = hi - lo,\n\t        i = (n >>> 1) + 1;\n\t    while (--i > 0) sift(a, i, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n\t  // already a heap.\n\t  function sort(a, lo, hi) {\n\t    var n = hi - lo,\n\t        t;\n\t    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n\t  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n\t  // incrementally, without incurring the full cost of reconstructing the heap.\n\t  function sift(a, i, n, lo) {\n\t    var d = a[--lo + i],\n\t        x = f(d),\n\t        child;\n\t    while ((child = i << 1) <= n) {\n\t      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n\t      if (x <= f(a[lo + child])) break;\n\t      a[lo + i] = a[lo + child];\n\t      i = child;\n\t    }\n\t    a[lo + i] = d;\n\t  }\n\t\n\t  heap.sort = sort;\n\t  return heap;\n\t}\n\tvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\t\n\theapselect.by = heapselect_by;\n\t\n\tfunction heapselect_by(f) {\n\t  var heap = heap_by(f);\n\t\n\t  // Returns a new array containing the top k elements in the array a[lo:hi].\n\t  // The returned array is not sorted, but maintains the heap property. If k is\n\t  // greater than hi - lo, then fewer than k elements will be returned. The\n\t  // order of elements in a is unchanged by this operation.\n\t  function heapselect(a, lo, hi, k) {\n\t    var queue = new Array(k = Math.min(hi - lo, k)),\n\t        min,\n\t        i,\n\t        x,\n\t        d;\n\t\n\t    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n\t    heap(queue, 0, k);\n\t\n\t    if (lo < hi) {\n\t      min = f(queue[0]);\n\t      do {\n\t        if (x = f(d = a[lo]) > min) {\n\t          queue[0] = d;\n\t          min = f(heap(queue, 0, k)[0]);\n\t        }\n\t      } while (++lo < hi);\n\t    }\n\t\n\t    return queue;\n\t  }\n\t\n\t  return heapselect;\n\t}\n\tvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\t\n\tinsertionsort.by = insertionsort_by;\n\t\n\tfunction insertionsort_by(f) {\n\t\n\t  function insertionsort(a, lo, hi) {\n\t    for (var i = lo + 1; i < hi; ++i) {\n\t      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n\t        a[j] = a[j - 1];\n\t      }\n\t      a[j] = t;\n\t    }\n\t    return a;\n\t  }\n\t\n\t  return insertionsort;\n\t}\n\t// Algorithm designed by Vladimir Yaroslavskiy.\n\t// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\t\n\tvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\t\n\tquicksort.by = quicksort_by;\n\t\n\tfunction quicksort_by(f) {\n\t  var insertionsort = insertionsort_by(f);\n\t\n\t  function sort(a, lo, hi) {\n\t    return (hi - lo < quicksort_sizeThreshold\n\t        ? insertionsort\n\t        : quicksort)(a, lo, hi);\n\t  }\n\t\n\t  function quicksort(a, lo, hi) {\n\t    // Compute the two pivots by looking at 5 elements.\n\t    var sixth = (hi - lo) / 6 | 0,\n\t        i1 = lo + sixth,\n\t        i5 = hi - 1 - sixth,\n\t        i3 = lo + hi - 1 >> 1,  // The midpoint.\n\t        i2 = i3 - sixth,\n\t        i4 = i3 + sixth;\n\t\n\t    var e1 = a[i1], x1 = f(e1),\n\t        e2 = a[i2], x2 = f(e2),\n\t        e3 = a[i3], x3 = f(e3),\n\t        e4 = a[i4], x4 = f(e4),\n\t        e5 = a[i5], x5 = f(e5);\n\t\n\t    var t;\n\t\n\t    // Sort the selected 5 elements using a sorting network.\n\t    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n\t    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n\t    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t\n\t    var pivot1 = e2, pivotValue1 = x2,\n\t        pivot2 = e4, pivotValue2 = x4;\n\t\n\t    // e2 and e4 have been saved in the pivot variables. They will be written\n\t    // back, once the partitioning is finished.\n\t    a[i1] = e1;\n\t    a[i2] = a[lo];\n\t    a[i3] = e3;\n\t    a[i4] = a[hi - 1];\n\t    a[i5] = e5;\n\t\n\t    var less = lo + 1,   // First element in the middle partition.\n\t        great = hi - 2;  // Last element in the middle partition.\n\t\n\t    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n\t    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n\t    // with natural order (such as for Date objects), we must do two compares.\n\t    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n\t    if (pivotsEqual) {\n\t\n\t      // Degenerated case where the partitioning becomes a dutch national flag\n\t      // problem.\n\t      //\n\t      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n\t      //  ^             ^          ^             ^            ^\n\t      // left         less         k           great         right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1) for x in ]left, less[ : x < pivot.\n\t      //   2) for x in [less, k[ : x == pivot.\n\t      //   3) for x in ]great, right[ : x > pivot.\n\t      for (var k = less; k <= great; ++k) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else if (xk > pivotValue1) {\n\t\n\t          // Find the first element <= pivot in the range [k - 1, great] and\n\t          // put [:ek:] there. We know that such an element must exist:\n\t          // When k == less, then el3 (which is equal to pivot) lies in the\n\t          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n\t          // Note that in the latter case invariant 2 will be violated for a\n\t          // short amount of time. The invariant will be restored when the\n\t          // pivots are put into their final positions.\n\t          while (true) {\n\t            var greatValue = f(a[great]);\n\t            if (greatValue > pivotValue1) {\n\t              great--;\n\t              // This is the only location in the while-loop where a new\n\t              // iteration is started.\n\t              continue;\n\t            } else if (greatValue < pivotValue1) {\n\t              // Triple exchange.\n\t              a[k] = a[less];\n\t              a[less++] = a[great];\n\t              a[great--] = ek;\n\t              break;\n\t            } else {\n\t              a[k] = a[great];\n\t              a[great--] = ek;\n\t              // Note: if great < k then we will exit the outer loop and fix\n\t              // invariant 2 (which we just violated).\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t\n\t      // We partition the list into three parts:\n\t      //  1. < pivot1\n\t      //  2. >= pivot1 && <= pivot2\n\t      //  3. > pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n\t      //  ^            ^                        ^              ^             ^\n\t      // left         less                     k              great        right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1. for x in ]left, less[ : x < pivot1\n\t      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n\t      //   3. for x in ]great, right[ : x > pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else {\n\t          if (xk > pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue > pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] <= pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] >= pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Move pivots into their final positions.\n\t    // We shrunk the list from both sides (a[left] and a[right] have\n\t    // meaningless values in them) and now we move elements from the first\n\t    // and third partition into these locations so that we can store the\n\t    // pivots.\n\t    a[lo] = a[less - 1];\n\t    a[less - 1] = pivot1;\n\t    a[hi - 1] = a[great + 1];\n\t    a[great + 1] = pivot2;\n\t\n\t    // The list is now partitioned into three partitions:\n\t    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n\t    //  ^            ^                        ^             ^\n\t    // left         less                     great        right\n\t\n\t    // Recursive descent. (Don't include the pivot values.)\n\t    sort(a, lo, less - 1);\n\t    sort(a, great + 2, hi);\n\t\n\t    if (pivotsEqual) {\n\t      // All elements in the second partition are equal to the pivot. No\n\t      // need to sort them.\n\t      return a;\n\t    }\n\t\n\t    // In theory it should be enough to call _doSort recursively on the second\n\t    // partition.\n\t    // The Android source however removes the pivot elements from the recursive\n\t    // call if the second partition is too large (more than 2/3 of the list).\n\t    if (less < i1 && great > i5) {\n\t      var lessValue, greatValue;\n\t      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n\t      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\t\n\t      // Copy paste of the previous 3-way partitioning with adaptions.\n\t      //\n\t      // We partition the list into three parts:\n\t      //  1. == pivot1\n\t      //  2. > pivot1 && < pivot2\n\t      //  3. == pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n\t      //              ^                      ^              ^\n\t      //            less                     k              great\n\t      //\n\t      // Invariants:\n\t      //   1. for x in [ *, less[ : x == pivot1\n\t      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n\t      //   3. for x in ]great, * ] : x == pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk <= pivotValue1 && xk >= pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          less++;\n\t        } else {\n\t          if (xk <= pivotValue2 && xk >= pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] < pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] == pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // The second partition has now been cleared of pivot elements and looks\n\t    // as follows:\n\t    // [  *  |  > pivot1 && < pivot2  | * ]\n\t    //        ^                      ^\n\t    //       less                  great\n\t    // Sort the second partition using recursive descent.\n\t\n\t    // The second partition looks as follows:\n\t    // [  *  |  >= pivot1 && <= pivot2  | * ]\n\t    //        ^                        ^\n\t    //       less                    great\n\t    // Simply sort it by recursive descent.\n\t\n\t    return sort(a, less, great + 1);\n\t  }\n\t\n\t  return sort;\n\t}\n\t\n\tvar quicksort_sizeThreshold = 32;\n\tvar crossfilter_array8 = crossfilter_arrayUntyped,\n\t    crossfilter_array16 = crossfilter_arrayUntyped,\n\t    crossfilter_array32 = crossfilter_arrayUntyped,\n\t    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n\t    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\t\n\tif (typeof Uint8Array !== \"undefined\") {\n\t  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n\t  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n\t  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\t\n\t  crossfilter_arrayLengthen = function(array, length) {\n\t    if (array.length >= length) return array;\n\t    var copy = new array.constructor(length);\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t\n\t  crossfilter_arrayWiden = function(array, width) {\n\t    var copy;\n\t    switch (width) {\n\t      case 16: copy = crossfilter_array16(array.length); break;\n\t      case 32: copy = crossfilter_array32(array.length); break;\n\t      default: throw new Error(\"invalid array width!\");\n\t    }\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t}\n\t\n\tfunction crossfilter_arrayUntyped(n) {\n\t  var array = new Array(n), i = -1;\n\t  while (++i < n) array[i] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayLengthenUntyped(array, length) {\n\t  var n = array.length;\n\t  while (n < length) array[n++] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayWidenUntyped(array, width) {\n\t  if (width > 32) throw new Error(\"invalid array width!\");\n\t  return array;\n\t}\n\tfunction crossfilter_filterExact(bisect, value) {\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterRange(bisect, range) {\n\t  var min = range[0],\n\t      max = range[1];\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterAll(values) {\n\t  return [0, values.length];\n\t}\n\tfunction crossfilter_null() {\n\t  return null;\n\t}\n\tfunction crossfilter_zero() {\n\t  return 0;\n\t}\n\tfunction crossfilter_reduceIncrement(p) {\n\t  return p + 1;\n\t}\n\t\n\tfunction crossfilter_reduceDecrement(p) {\n\t  return p - 1;\n\t}\n\t\n\tfunction crossfilter_reduceAdd(f) {\n\t  return function(p, v) {\n\t    return p + +f(v);\n\t  };\n\t}\n\t\n\tfunction crossfilter_reduceSubtract(f) {\n\t  return function(p, v) {\n\t    return p - f(v);\n\t  };\n\t}\n\texports.crossfilter = crossfilter;\n\t\n\tfunction crossfilter() {\n\t  var crossfilter = {\n\t    add: add,\n\t    remove: removeData,\n\t    dimension: dimension,\n\t    groupAll: groupAll,\n\t    size: size\n\t  };\n\t\n\t  var data = [], // the records\n\t      n = 0, // the number of records; data.length\n\t      m = 0, // a bit mask representing which dimensions are in use\n\t      M = 8, // number of dimensions that can fit in `filters`\n\t      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n\t      filterListeners = [], // when the filters change\n\t      dataListeners = [], // when data is added\n\t      removeDataListeners = []; // when data is removed\n\t\n\t  // Adds the specified new records to this crossfilter.\n\t  function add(newData) {\n\t    var n0 = n,\n\t        n1 = newData.length;\n\t\n\t    // If there's actually new data to add…\n\t    // Merge the new data into the existing data.\n\t    // Lengthen the filter bitset to handle the new records.\n\t    // Notify listeners (dimensions and groups) that new data is available.\n\t    if (n1) {\n\t      data = data.concat(newData);\n\t      filters = crossfilter_arrayLengthen(filters, n += n1);\n\t      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n\t    }\n\t\n\t    return crossfilter;\n\t  }\n\t\n\t  // Removes all records that match the current filters.\n\t  function removeData() {\n\t    var newIndex = crossfilter_index(n, n),\n\t        removed = [];\n\t    for (var i = 0, j = 0; i < n; ++i) {\n\t      if (filters[i]) newIndex[i] = j++;\n\t      else removed.push(i);\n\t    }\n\t\n\t    // Remove all matching records from groups.\n\t    filterListeners.forEach(function(l) { l(0, [], removed); });\n\t\n\t    // Update indexes.\n\t    removeDataListeners.forEach(function(l) { l(newIndex); });\n\t\n\t    // Remove old filters and data by overwriting.\n\t    for (var i = 0, j = 0, k; i < n; ++i) {\n\t      if (k = filters[i]) {\n\t        if (i !== j) filters[j] = k, data[j] = data[i];\n\t        ++j;\n\t      }\n\t    }\n\t    data.length = j;\n\t    while (n > j) filters[--n] = 0;\n\t  }\n\t\n\t  // Adds a new dimension with the specified value accessor function.\n\t  function dimension(value) {\n\t    var dimension = {\n\t      filter: filter,\n\t      filterExact: filterExact,\n\t      filterRange: filterRange,\n\t      filterFunction: filterFunction,\n\t      filterAll: filterAll,\n\t      top: top,\n\t      bottom: bottom,\n\t      group: group,\n\t      groupAll: groupAll,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n\t        zero = ~one, // inverted one, e.g., 11110111\n\t        values, // sorted, cached array\n\t        index, // value rank ↦ object id\n\t        newValues, // temporary array storing newly-added values\n\t        newIndex, // temporary array storing newly-added index\n\t        sort = quicksort_by(function(i) { return newValues[i]; }),\n\t        refilter = crossfilter_filterAll, // for recomputing filter\n\t        refilterFunction, // the custom filter function in use\n\t        indexListeners = [], // when data is added\n\t        dimensionGroups = [],\n\t        lo0 = 0,\n\t        hi0 = 0;\n\t\n\t    // Updating a dimension is a two-stage process. First, we must update the\n\t    // associated filters for the newly-added records. Once all dimensions have\n\t    // updated their filters, the groups are notified to update.\n\t    dataListeners.unshift(preAdd);\n\t    dataListeners.push(postAdd);\n\t\n\t    removeDataListeners.push(removeData);\n\t\n\t    // Incorporate any existing data into this dimension, and make sure that the\n\t    // filter bitset is wide enough to handle the new dimension.\n\t    m |= one;\n\t    if (M >= 32 ? !one : m & -(1 << M)) {\n\t      filters = crossfilter_arrayWiden(filters, M <<= 1);\n\t    }\n\t    preAdd(data, 0, n);\n\t    postAdd(data, 0, n);\n\t\n\t    // Incorporates the specified new records into this dimension.\n\t    // This function is responsible for updating filters, values, and index.\n\t    function preAdd(newData, n0, n1) {\n\t\n\t      // Permute new values into natural order using a sorted index.\n\t      newValues = newData.map(value);\n\t      newIndex = sort(crossfilter_range(n1), 0, n1);\n\t      newValues = permute(newValues, newIndex);\n\t\n\t      // Bisect newValues to determine which new records are selected.\n\t      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n\t      if (refilterFunction) {\n\t        for (i = 0; i < n1; ++i) {\n\t          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n\t        }\n\t      } else {\n\t        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n\t        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n\t      }\n\t\n\t      // If this dimension previously had no data, then we don't need to do the\n\t      // more expensive merge operation; use the new values and index as-is.\n\t      if (!n0) {\n\t        values = newValues;\n\t        index = newIndex;\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return;\n\t      }\n\t\n\t      var oldValues = values,\n\t          oldIndex = index,\n\t          i0 = 0,\n\t          i1 = 0;\n\t\n\t      // Otherwise, create new arrays into which to merge new and old.\n\t      values = new Array(n);\n\t      index = crossfilter_index(n, n);\n\t\n\t      // Merge the old and new sorted values, and old and new index.\n\t      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n\t        if (oldValues[i0] < newValues[i1]) {\n\t          values[i] = oldValues[i0];\n\t          index[i] = oldIndex[i0++];\n\t        } else {\n\t          values[i] = newValues[i1];\n\t          index[i] = newIndex[i1++] + n0;\n\t        }\n\t      }\n\t\n\t      // Add any remaining old values.\n\t      for (; i0 < n0; ++i0, ++i) {\n\t        values[i] = oldValues[i0];\n\t        index[i] = oldIndex[i0];\n\t      }\n\t\n\t      // Add any remaining new values.\n\t      for (; i1 < n1; ++i1, ++i) {\n\t        values[i] = newValues[i1];\n\t        index[i] = newIndex[i1] + n0;\n\t      }\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // When all filters have updated, notify index listeners of the new values.\n\t    function postAdd(newData, n0, n1) {\n\t      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n\t      newValues = newIndex = null;\n\t    }\n\t\n\t    function removeData(reIndex) {\n\t      for (var i = 0, j = 0, k; i < n; ++i) {\n\t        if (filters[k = index[i]]) {\n\t          if (i !== j) values[j] = values[i];\n\t          index[j] = reIndex[k];\n\t          ++j;\n\t        }\n\t      }\n\t      values.length = j;\n\t      while (j < n) index[j++] = 0;\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      var bounds = refilter(values);\n\t      lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // Updates the selected values based on the specified bounds [lo, hi].\n\t    // This implementation is used by all the public filter methods.\n\t    function filterIndexBounds(bounds) {\n\t      var lo1 = bounds[0],\n\t          hi1 = bounds[1];\n\t\n\t      if (refilterFunction) {\n\t        refilterFunction = null;\n\t        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return dimension;\n\t      }\n\t\n\t      var i,\n\t          j,\n\t          k,\n\t          added = [],\n\t          removed = [];\n\t\n\t      // Fast incremental update based on previous lo index.\n\t      if (lo1 < lo0) {\n\t        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (lo1 > lo0) {\n\t        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      // Fast incremental update based on previous hi index.\n\t      if (hi1 > hi0) {\n\t        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (hi1 < hi0) {\n\t        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      lo0 = lo1;\n\t      hi0 = hi1;\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t      return dimension;\n\t    }\n\t\n\t    // Filters this dimension using the specified range, value, or null.\n\t    // If the range is null, this is equivalent to filterAll.\n\t    // If the range is an array, this is equivalent to filterRange.\n\t    // Otherwise, this is equivalent to filterExact.\n\t    function filter(range) {\n\t      return range == null\n\t          ? filterAll() : Array.isArray(range)\n\t          ? filterRange(range) : typeof range === \"function\"\n\t          ? filterFunction(range)\n\t          : filterExact(range);\n\t    }\n\t\n\t    // Filters this dimension to select the exact value.\n\t    function filterExact(value) {\n\t      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n\t    }\n\t\n\t    // Filters this dimension to select the specified range [lo, hi].\n\t    // The lower bound is inclusive, and the upper bound is exclusive.\n\t    function filterRange(range) {\n\t      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n\t    }\n\t\n\t    // Clears any filters on this dimension.\n\t    function filterAll() {\n\t      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n\t    }\n\t\n\t    // Filters this dimension using an arbitrary function.\n\t    function filterFunction(f) {\n\t      refilter = crossfilter_filterAll;\n\t\n\t      filterIndexFunction(refilterFunction = f);\n\t\n\t      lo0 = 0;\n\t      hi0 = n;\n\t\n\t      return dimension;\n\t    }\n\t\n\t    function filterIndexFunction(f) {\n\t      var i,\n\t          k,\n\t          x,\n\t          added = [],\n\t          removed = [];\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n\t          if (x) filters[k] &= zero, added.push(k);\n\t          else filters[k] |= one, removed.push(k);\n\t        }\n\t      }\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t    }\n\t\n\t    // Returns the top K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function top(k) {\n\t      var array = [],\n\t          i = hi0,\n\t          j;\n\t\n\t      while (--i >= lo0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Returns the bottom K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function bottom(k) {\n\t      var array = [],\n\t          i = lo0,\n\t          j;\n\t\n\t      while (i < hi0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t        i++;\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Adds a new group to this dimension, using the specified key function.\n\t    function group(key) {\n\t      var group = {\n\t        top: top,\n\t        all: all,\n\t        reduce: reduce,\n\t        reduceCount: reduceCount,\n\t        reduceSum: reduceSum,\n\t        order: order,\n\t        orderNatural: orderNatural,\n\t        size: size,\n\t        dispose: dispose,\n\t        remove: dispose // for backwards-compatibility\n\t      };\n\t\n\t      // Ensure that this group will be removed when the dimension is removed.\n\t      dimensionGroups.push(group);\n\t\n\t      var groups, // array of {key, value}\n\t          groupIndex, // object id ↦ group id\n\t          groupWidth = 8,\n\t          groupCapacity = crossfilter_capacity(groupWidth),\n\t          k = 0, // cardinality\n\t          select,\n\t          heap,\n\t          reduceAdd,\n\t          reduceRemove,\n\t          reduceInitial,\n\t          update = crossfilter_null,\n\t          reset = crossfilter_null,\n\t          resetNeeded = true,\n\t          groupAll = key === crossfilter_null;\n\t\n\t      if (arguments.length < 1) key = crossfilter_identity;\n\t\n\t      // The group listens to the crossfilter for when any dimension changes, so\n\t      // that it can update the associated reduce values. It must also listen to\n\t      // the parent dimension for when data is added, and compute new keys.\n\t      filterListeners.push(update);\n\t      indexListeners.push(add);\n\t      removeDataListeners.push(removeData);\n\t\n\t      // Incorporate any existing data into the grouping.\n\t      add(values, index, 0, n);\n\t\n\t      // Incorporates the specified new values into this group.\n\t      // This function is responsible for updating groups and groupIndex.\n\t      function add(newValues, newIndex, n0, n1) {\n\t        var oldGroups = groups,\n\t            reIndex = crossfilter_index(k, groupCapacity),\n\t            add = reduceAdd,\n\t            initial = reduceInitial,\n\t            k0 = k, // old cardinality\n\t            i0 = 0, // index of old group\n\t            i1 = 0, // index of new record\n\t            j, // object id\n\t            g0, // old group\n\t            x0, // old key\n\t            x1, // new key\n\t            g, // group to add\n\t            x; // key of group to add\n\t\n\t        // If a reset is needed, we don't need to update the reduce values.\n\t        if (resetNeeded) add = initial = crossfilter_null;\n\t\n\t        // Reset the new groups (k is a lower bound).\n\t        // Also, make sure that groupIndex exists and is long enough.\n\t        groups = new Array(k), k = 0;\n\t        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\t\n\t        // Get the first old key (x0 of g0), if it exists.\n\t        if (k0) x0 = (g0 = oldGroups[0]).key;\n\t\n\t        // Find the first new key (x1), skipping NaN keys.\n\t        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\t\n\t        // While new keys remain…\n\t        while (i1 < n1) {\n\t\n\t          // Determine the lesser of the two current keys; new and old.\n\t          // If there are no old keys remaining, then always add the new key.\n\t          if (g0 && x0 <= x1) {\n\t            g = g0, x = x0;\n\t\n\t            // Record the new index of the old group.\n\t            reIndex[i0] = k;\n\t\n\t            // Retrieve the next old key.\n\t            if (g0 = oldGroups[++i0]) x0 = g0.key;\n\t          } else {\n\t            g = {key: x1, value: initial()}, x = x1;\n\t          }\n\t\n\t          // Add the lesser group.\n\t          groups[k] = g;\n\t\n\t          // Add any selected records belonging to the added group, while\n\t          // advancing the new key and populating the associated group index.\n\t          while (!(x1 > x)) {\n\t            groupIndex[j = newIndex[i1] + n0] = k;\n\t            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n\t            if (++i1 >= n1) break;\n\t            x1 = key(newValues[i1]);\n\t          }\n\t\n\t          groupIncrement();\n\t        }\n\t\n\t        // Add any remaining old groups that were greater than all new keys.\n\t        // No incremental reduce is needed; these groups have no new records.\n\t        // Also record the new index of the old group.\n\t        while (i0 < k0) {\n\t          groups[reIndex[i0] = k] = oldGroups[i0++];\n\t          groupIncrement();\n\t        }\n\t\n\t        // If we added any new groups before any old groups,\n\t        // update the group index of all the old records.\n\t        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n\t          groupIndex[i0] = reIndex[groupIndex[i0]];\n\t        }\n\t\n\t        // Modify the update and reset behavior based on the cardinality.\n\t        // If the cardinality is less than or equal to one, then the groupIndex\n\t        // is not needed. If the cardinality is zero, then there are no records\n\t        // and therefore no groups to update or reset. Note that we also must\n\t        // change the registered listener to point to the new method.\n\t        j = filterListeners.indexOf(update);\n\t        if (k > 1) {\n\t          update = updateMany;\n\t          reset = resetMany;\n\t        } else {\n\t          if (!k && groupAll) {\n\t            k = 1;\n\t            groups = [{key: null, value: initial()}];\n\t          }\n\t          if (k === 1) {\n\t            update = updateOne;\n\t            reset = resetOne;\n\t          } else {\n\t            update = crossfilter_null;\n\t            reset = crossfilter_null;\n\t          }\n\t          groupIndex = null;\n\t        }\n\t        filterListeners[j] = update;\n\t\n\t        // Count the number of added groups,\n\t        // and widen the group index as needed.\n\t        function groupIncrement() {\n\t          if (++k === groupCapacity) {\n\t            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n\t            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n\t            groupCapacity = crossfilter_capacity(groupWidth);\n\t          }\n\t        }\n\t      }\n\t\n\t      function removeData() {\n\t        if (k > 1) {\n\t          var oldK = k,\n\t              oldGroups = groups,\n\t              seenGroups = crossfilter_index(oldK, oldK);\n\t\n\t          // Filter out non-matches by copying matching group index entries to\n\t          // the beginning of the array.\n\t          for (var i = 0, j = 0; i < n; ++i) {\n\t            if (filters[i]) {\n\t              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n\t              ++j;\n\t            }\n\t          }\n\t\n\t          // Reassemble groups including only those groups that were referred\n\t          // to by matching group index entries.  Note the new group index in\n\t          // seenGroups.\n\t          groups = [], k = 0;\n\t          for (i = 0; i < oldK; ++i) {\n\t            if (seenGroups[i]) {\n\t              seenGroups[i] = k++;\n\t              groups.push(oldGroups[i]);\n\t            }\n\t          }\n\t\n\t          if (k > 1) {\n\t            // Reindex the group index using seenGroups to find the new index.\n\t            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n\t          } else {\n\t            groupIndex = null;\n\t          }\n\t          filterListeners[filterListeners.indexOf(update)] = k > 1\n\t              ? (reset = resetMany, update = updateMany)\n\t              : k === 1 ? (reset = resetOne, update = updateOne)\n\t              : reset = update = crossfilter_null;\n\t        } else if (k === 1) {\n\t          if (groupAll) return;\n\t          for (var i = 0; i < n; ++i) if (filters[i]) return;\n\t          groups = [], k = 0;\n\t          filterListeners[filterListeners.indexOf(update)] =\n\t          update = reset = crossfilter_null;\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function updateMany(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g;\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is 1.\n\t      function updateOne(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g = groups[0];\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function resetMany() {\n\t        var i,\n\t            g;\n\t\n\t        // Reset all group values.\n\t        for (i = 0; i < k; ++i) {\n\t          groups[i].value = reduceInitial();\n\t        }\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g = groups[groupIndex[i]];\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is 1.\n\t      function resetOne() {\n\t        var i,\n\t            g = groups[0];\n\t\n\t        // Reset the singleton group values.\n\t        g.value = reduceInitial();\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Returns the array of group values, in the dimension's natural order.\n\t      function all() {\n\t        if (resetNeeded) reset(), resetNeeded = false;\n\t        return groups;\n\t      }\n\t\n\t      // Returns a new array containing the top K group values, in reduce order.\n\t      function top(k) {\n\t        var top = select(all(), 0, groups.length, k);\n\t        return heap.sort(top, 0, top.length);\n\t      }\n\t\n\t      // Sets the reduce behavior for this group to use the specified functions.\n\t      // This method lazily recomputes the reduce values, waiting until needed.\n\t      function reduce(add, remove, initial) {\n\t        reduceAdd = add;\n\t        reduceRemove = remove;\n\t        reduceInitial = initial;\n\t        resetNeeded = true;\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for reducing by count.\n\t      function reduceCount() {\n\t        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t      }\n\t\n\t      // A convenience method for reducing by sum(value).\n\t      function reduceSum(value) {\n\t        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t      }\n\t\n\t      // Sets the reduce order, using the specified accessor.\n\t      function order(value) {\n\t        select = heapselect_by(valueOf);\n\t        heap = heap_by(valueOf);\n\t        function valueOf(d) { return value(d.value); }\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for natural ordering by reduce value.\n\t      function orderNatural() {\n\t        return order(crossfilter_identity);\n\t      }\n\t\n\t      // Returns the cardinality of this group, irrespective of any filters.\n\t      function size() {\n\t        return k;\n\t      }\n\t\n\t      // Removes this group and associated event listeners.\n\t      function dispose() {\n\t        var i = filterListeners.indexOf(update);\n\t        if (i >= 0) filterListeners.splice(i, 1);\n\t        i = indexListeners.indexOf(add);\n\t        if (i >= 0) indexListeners.splice(i, 1);\n\t        i = removeDataListeners.indexOf(removeData);\n\t        if (i >= 0) removeDataListeners.splice(i, 1);\n\t        return group;\n\t      }\n\t\n\t      return reduceCount().orderNatural();\n\t    }\n\t\n\t    // A convenience function for generating a singleton group.\n\t    function groupAll() {\n\t      var g = group(crossfilter_null), all = g.all;\n\t      delete g.all;\n\t      delete g.top;\n\t      delete g.order;\n\t      delete g.orderNatural;\n\t      delete g.size;\n\t      g.value = function() { return all()[0].value; };\n\t      return g;\n\t    }\n\t\n\t    // Removes this dimension and associated groups and event listeners.\n\t    function dispose() {\n\t      dimensionGroups.forEach(function(group) { group.dispose(); });\n\t      var i = dataListeners.indexOf(preAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = dataListeners.indexOf(postAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = removeDataListeners.indexOf(removeData);\n\t      if (i >= 0) removeDataListeners.splice(i, 1);\n\t      m &= zero;\n\t      return filterAll();\n\t    }\n\t\n\t    return dimension;\n\t  }\n\t\n\t  // A convenience method for groupAll on a dummy dimension.\n\t  // This implementation can be optimized since it always has cardinality 1.\n\t  function groupAll() {\n\t    var group = {\n\t      reduce: reduce,\n\t      reduceCount: reduceCount,\n\t      reduceSum: reduceSum,\n\t      value: value,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var reduceValue,\n\t        reduceAdd,\n\t        reduceRemove,\n\t        reduceInitial,\n\t        resetNeeded = true;\n\t\n\t    // The group listens to the crossfilter for when any dimension changes, so\n\t    // that it can update the reduce value. It must also listen to the parent\n\t    // dimension for when data is added.\n\t    filterListeners.push(update);\n\t    dataListeners.push(add);\n\t\n\t    // For consistency; actually a no-op since resetNeeded is true.\n\t    add(data, 0, n);\n\t\n\t    // Incorporates the specified new values into this group.\n\t    function add(newData, n0) {\n\t      var i;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = n0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Reduces the specified selected or deselected records.\n\t    function update(filterOne, added, removed) {\n\t      var i,\n\t          k,\n\t          n;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = 0, n = added.length; i < n; ++i) {\n\t        if (!filters[k = added[i]]) {\n\t          reduceValue = reduceAdd(reduceValue, data[k]);\n\t        }\n\t      }\n\t\n\t      // Remove the removed values.\n\t      for (i = 0, n = removed.length; i < n; ++i) {\n\t        if (filters[k = removed[i]] === filterOne) {\n\t          reduceValue = reduceRemove(reduceValue, data[k]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Recomputes the group reduce value from scratch.\n\t    function reset() {\n\t      var i;\n\t\n\t      reduceValue = reduceInitial();\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Sets the reduce behavior for this group to use the specified functions.\n\t    // This method lazily recomputes the reduce value, waiting until needed.\n\t    function reduce(add, remove, initial) {\n\t      reduceAdd = add;\n\t      reduceRemove = remove;\n\t      reduceInitial = initial;\n\t      resetNeeded = true;\n\t      return group;\n\t    }\n\t\n\t    // A convenience method for reducing by count.\n\t    function reduceCount() {\n\t      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t    }\n\t\n\t    // A convenience method for reducing by sum(value).\n\t    function reduceSum(value) {\n\t      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t    }\n\t\n\t    // Returns the computed reduce value.\n\t    function value() {\n\t      if (resetNeeded) reset(), resetNeeded = false;\n\t      return reduceValue;\n\t    }\n\t\n\t    // Removes this group and associated event listeners.\n\t    function dispose() {\n\t      var i = filterListeners.indexOf(update);\n\t      if (i >= 0) filterListeners.splice(i);\n\t      i = dataListeners.indexOf(add);\n\t      if (i >= 0) dataListeners.splice(i);\n\t      return group;\n\t    }\n\t\n\t    return reduceCount();\n\t  }\n\t\n\t  // Returns the number of records in this crossfilter, irrespective of any filters.\n\t  function size() {\n\t    return n;\n\t  }\n\t\n\t  return arguments.length\n\t      ? add(arguments[0])\n\t      : crossfilter;\n\t}\n\t\n\t// Returns an array of size n, big enough to store ids up to m.\n\tfunction crossfilter_index(n, m) {\n\t  return (m < 0x101\n\t      ? crossfilter_array8 : m < 0x10001\n\t      ? crossfilter_array16\n\t      : crossfilter_array32)(n);\n\t}\n\t\n\t// Constructs a new array of size n, with sequential values from 0 to n - 1.\n\tfunction crossfilter_range(n) {\n\t  var range = crossfilter_index(n, n);\n\t  for (var i = -1; ++i < n;) range[i] = i;\n\t  return range;\n\t}\n\t\n\tfunction crossfilter_capacity(w) {\n\t  return w === 8\n\t      ? 0x100 : w === 16\n\t      ? 0x10000\n\t      : 0x100000000;\n\t}\n\t})(typeof exports !== 'undefined' && exports || this);\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(13).crossfilter;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(16)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder .dotplot{float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:50%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:rgba(0,0,0,.25)}._synteny-dotplot-builder #histogram-wrapper{position:fixed;right:0;width:50%}._synteny-dotplot-builder .histogram{width:100%;height:75%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{position:fixed;bottom:10;right:10;width:50%;height:12%}._synteny-dotplot-builder form{display:inline}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var slice = [].slice;\n\t\n\t  function queue(parallelism) {\n\t    var q,\n\t        tasks = [],\n\t        started = 0, // number of tasks that have been started (and perhaps finished)\n\t        active = 0, // number of tasks currently being executed (started but not finished)\n\t        remaining = 0, // number of tasks not yet finished\n\t        popping, // inside a synchronous task callback?\n\t        error = null,\n\t        await = noop,\n\t        all;\n\t\n\t    if (!parallelism) parallelism = Infinity;\n\t\n\t    function pop() {\n\t      while (popping = started < tasks.length && active < parallelism) {\n\t        var i = started++,\n\t            t = tasks[i],\n\t            a = slice.call(t, 1);\n\t        a.push(callback(i));\n\t        ++active;\n\t        t[0].apply(null, a);\n\t      }\n\t    }\n\t\n\t    function callback(i) {\n\t      return function(e, r) {\n\t        --active;\n\t        if (error != null) return;\n\t        if (e != null) {\n\t          error = e; // ignore new tasks and squelch active callbacks\n\t          started = remaining = NaN; // stop queued tasks from starting\n\t          notify();\n\t        } else {\n\t          tasks[i] = r;\n\t          if (--remaining) popping || pop();\n\t          else notify();\n\t        }\n\t      };\n\t    }\n\t\n\t    function notify() {\n\t      if (error != null) await(error);\n\t      else if (all) await(error, tasks);\n\t      else await.apply(null, [error].concat(tasks));\n\t    }\n\t\n\t    return q = {\n\t      defer: function() {\n\t        if (!error) {\n\t          tasks.push(arguments);\n\t          ++remaining;\n\t          pop();\n\t        }\n\t        return q;\n\t      },\n\t      await: function(f) {\n\t        await = f;\n\t        all = false;\n\t        if (!remaining) notify();\n\t        return q;\n\t      },\n\t      awaitAll: function(f) {\n\t        await = f;\n\t        all = true;\n\t        if (!remaining) notify();\n\t        return q;\n\t      }\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  queue.version = \"1.0.7\";\n\t  if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return queue; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n\t  else this.queue = queue;\n\t})();\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(15);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(18)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** synteny-dotplot-builder.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5b6f5d25d3a20070464c\n **/","'use strict';\n\nconst queue = require('queue-async');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst sv = require('synteny-vis');\nconst crossfilter = require('crossfilter');\n\nexports.makeSyntenyDotPlot = function({data_url, element_id, genome_x, genome_y}) {\n\tqueue()\n\t\t.defer(d3.text, data_url)\n\t\t.await(function(err, ks) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst x_name = genome_x.name;\n\t\t\tconst y_name = genome_y.name;\n\n\t\t\tconst ksData = ksTextToObjects(ks);\n\t\t\tconst xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t\t\tconst yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t\t\tconst inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\n\t\t\tconst ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tsv.controller(ksDataObject, element_id, {x_name, y_name});\n\t\t});\n};\n\nfunction ksTextToObjects(text) {\n\t/* .ks files are delimited with a combination of tabs and double bars. */\n\tconst csvLines = text\n\t\t.replace(/\\|\\|/g, ',')\n\t\t.replace(/\\t/g, ',')\n\t\t.replace(' ', '')\n\t\t.split('\\n');\n\n\treturn _.chain(csvLines)\n\t\t.filter(line => line && line[0] !== '#')\n\t\t.map(ksLineToSyntenyDot)\n\t\t.filter(line => isFinite(line.logks) && isFinite(line.logkn))\n\t\t.value();\n}\n\nfunction ksLineToSyntenyDot(line) {\n\tconst fields = line.split(',');\n\n\tconst ks = Number(fields[0]);\n\tconst kn = Number(fields[1]);\n\tconst log10 = n => Math.log(n) / Math.log(10);\n\n\treturn {\n\t\tks,\n\t\tlogks: log10(ks),\n\t\tkn,\n\t\tlogkn: log10(kn),\n\t\tlogkskn: log10(ks) - log10(kn),\n\t\tx_chromosome_id: fields[3],\n\t\ty_chromosome_id: fields[15],\n\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t};\n}\n\nfunction lengthsToCumulativeBPCounts(len_list) {\n\tconst ntLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tconst nameLenList = _.chain(len_list)\n\t\t.sortBy('name')\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tconst geneCounts = _.object(\n\t\t_.map(len_list, x => x.name), \n\t\t_.map(len_list, x => x.gene_count)\n\t);\n\n\treturn {\n\t\tnt: ntLenList,\n\t\tname: nameLenList,\n\t\tgene_counts: geneCounts\n\t};\n}\n\n// Compute absolute BP offset from chromosome and relative offset\nfunction inlineKSData(ks, xmap, ymap) {\n\t_.each(ks, function(ksObj) {\n\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\tksObj.x_relative_offset += xShift;\n\t\tksObj.y_relative_offset += yShift;\n\t});\n\treturn ks;\n}\n\nfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\tconst xmap = xmapPair.nt;\n\tconst ymap = ymapPair.nt;\n\tconst ret = {};\n\n\tconst cross = crossfilter(syntenyDots);\n\tconst cross_all = cross.dimension(x => x.logks);\n\tconst cross_x = cross.dimension(x => x.x_relative_offset);\n\tconst cross_y = cross.dimension(x => x.y_relative_offset);\n\tconst cross_logks = cross.dimension(x => x.logks);\n\n\tret.getXLineOffsets = function() {\n\t\treturn _.chain(xmap).values().sortBy().value();\n\t};\n\n\tret.getYLineOffsets = function() {\n\t\treturn _.chain(ymap).values().sortBy().value();\n\t};\n\n\tret.getXLineNames = function() {\n\t\treturn filterMapForNames(xmap);\n\t};\n\n\tret.getYLineNames = function() {\n\t\treturn filterMapForNames(ymap);\n\t};\n\n\tfunction filterMapForNames(map) {\n\t\treturn _.chain(map)\n\t\t\t.pairs()\n\t\t\t.sortBy('1')\n\t\t\t.pluck('0')\n\t\t\t.reject(x => x === 'total')\n\t\t\t.value();\n\t}\n\n\tret.currentData = function currentData() {\n\t\treturn {\n\t\t\traw: syntenyDots,\n\t\t\tactive: cross_all.top(Infinity)\n\t\t};\n\t};\n\n\tret.currentDataSummary = function currentDataSummary(ticks) {\n\t\tconst group = cross_logks.group(x => ticks[_.sortedIndex(ticks, x)]);\n\t\tconst dx = ticks[1] - ticks[0];\n\n\t\treturn function() {\n\t\t\tconst groups = group.top(Infinity);\n\t\t\tconst result = _.object(groups.map(x => [x.key, x.value]));\n\t\t\tconst zeros = _.object(ticks.map(x => [x, 0]));\n\n\t\t\treturn _(zeros).merge(result)\n\t\t\t\t.pairs().map(x => x.map(Number))\n\t\t\t\t.map(([x, y]) => ({x, y, dx}))\n\t\t\t\t.sortBy('x')\n\t\t\t\t.value();\n\t\t};\n\t};\n\n\tret.addSpatialFilter = function(extents, typeHint) {\n\t\tcross_x.filter([extents[0][0], extents[1][0]]);\n\t\tcross_y.filter([extents[0][1], extents[1][1]]);\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.removeSpatialFilter = function(typeHint) {\n\t\tcross_x.filterAll();\n\t\tcross_y.filterAll();\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.addDataFilter = function(extent, field, typeHint) {\n\t\tfield = field + ' Just satisfying the linter :) Will fix it eventually... ';\n\t\tcross_logks.filter(extent);\n\t\tret.notifyListeners(typeHint || 'data');\n\t};\n\n\tret.removeDataFilter = function() {\n\t\tcross_logks.filterAll();\n\t\tret.notifyListeners('data-stop');\n\t};\n\n\tconst listeners = [];\n\tret.addListener = function(x) {\n\t\tlisteners.push(x);\n\t};\n\n\tret.notifyListeners = function(typeOfChange) {\n\t\t_.each(listeners, function(x) {\n\t\t\tx(typeOfChange);\n\t\t});\n\t};\n\n\treturn ret;\n}\n\n// We need to expose this to the outside world.\nwindow.makeSyntenyDotPlot = exports.makeSyntenyDotPlot;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 1\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.9\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.start({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nexports.ROUNDING_FACTOR = 10;\n\nexports.RUN_BENCHMARKS = false;\n\nexports.SHOW_MAXIMA_AND_MINIMA = true;\n\nexports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\nexports.SYNTENY_MARGIN = 50; \nexports.CIRCLE_RADIUS = 2;\nexports.UNSELECTED_DOT_FILL = '#D0D0D0';\nexports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\nexports.DOTPLOT_COLOR_TRANS_LEN = 500; \nexports.MAXIMIZE_WIDTH = true;\nexports.MIN_TEXT_GAP = 12;\n\nexports.HISTOGRAM_MARGIN = 50; \nexports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\nexports.NUM_HISTOGRAM_TICKS = 100;\nexports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\nexports.COLOR_RANGES = {\n\trg: { \n\t\trange: ['red', 'green'],\n\t\tquantized: false\n\t},\n\trg_quantized: {\n\t\trange: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf',\n\t\t\t'#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'], /* From colorbrewer */\n\t\tquantized: true\n\t},\n\trainbow: {\n\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\tquantized: false\n\t},\n\trainbow_quantized: {\n\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\tquantized: true\n\t},\n\tunselected: {\n\t\trange: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n\t\tquantized: false\n\t}\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","'use strict';\n\nconst _ = require('lodash');\nconst d3 = require('d3');\n\nexports.getComputedAttr = function getComputedAttr(element, attr) {\n\tconst computed = getComputedStyle(element)[attr];\n\treturn parseInt(computed, 10);\n};\n\nexports.samplePointsInRange = function (extent, n) {\n\treturn _.map(_.range(n), d3.scale.linear().domain([0, n-1]).range(extent));\n};\n\nexports.timeIt = function(f, name) {\n\treturn function(...args) {\n\t\tconst start = Date.now();\n\t\tconst x = f.call(null, ...args);\n\t\tconsole.log(name, Date.now() - start);\n\t\treturn x;\n\t};\n};\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","'use strict';\n\nconst _ = require('lodash');\n\nexports.simplify = function simplify(dirtyPoints, persistence) {\n\tconst points = removeNonExtrema(dirtyPoints);\n\tconst index = indexOfSmallestPointDifference(points);\n\n\tif (points.length < 3 || gapBetweenPoints(points, index) > persistence)\n\t\treturn points;\n\n\tconst toRemove = index === 0 ? 1 : index;\n\tpoints.splice(toRemove, 1);\n\n\treturn simplify(points, persistence);\n};\n\nfunction removeNonExtrema(A) {\n\treturn _.filter(A, function(element, index) {\n\t\tif (index === 0 || index === A.length - 1)\n\t\t\treturn true;\n\n\t\tconst before = A[index - 1].y;\n\t\tconst here = element.y;\n\t\tconst after = A[index + 1].y;\n\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t});\n}\n\nfunction gapBetweenPoints(A, i) {\n\treturn Math.abs(A[i].y - A[i + 1].y);\n}\n\nfunction indexOfSmallestPointDifference(A) {\n\treturn _(A.length - 1).range().min(i => gapBetweenPoints(A, i));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/persistence.js\n **/","'use strict';\n\nmodule.exports = function transform(props) {\n  var transform = [];\n  if (Array.isArray(props)) {\n    props.forEach(function forEachAccessor(prop) {\n      var key = Object.keys(prop)[0];\n      transform.push(key + '(' + prop[key] + ')');\n    });\n  }\n  return transform.join(' ');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svg-transform/index.js\n ** module id = 6\n ** module chunks = 0\n **/","const _ = require('lodash');\n\n/*\n * I want to run a benchmark, but I don't want to block UI updates \n * in between iterations.\n *\n * My guess is that this isn't super accurate for fast functions.\n */\nexports.benchmark = function(testArgs, f, done) {\n\n\tconst results = [];\n\tconst runOne = function(tests) {\n\t\tif (!tests.length)\n\t\t\treturn done(stats(results));\n\n\t\tresults.push(timeIt(f, tests[0]));\n\t\tsetTimeout(runOne, 0, tests.slice(1));\n\t};\n\tsetTimeout(runOne, 0, testArgs);\n\n\tconst timeIt = function(f, arg) {\n\t\tconst start = Date.now();\n\t\tf(arg);\n\t\treturn Date.now() - start;\n\t};\n\n\tconst stats = times => ({\n\t\ttotalTime: _.sum(times),\n\t\tcount: times.length,\n\t\tmax: _.max(times),\n\t\taverage: _.sum(times) / times.length\n\t});\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/async-benchmark.js\n **/","'use strict';\n\nconst persistenceFuncs = require('persistence');\nconst d3 = require('d3');\nconst _ = require('lodash');\n\nconst { \n\tAUTO_SCALE_VALLEY_FILL \n} = require('constants');\n\nexports.generateAutoScale = function(points, persistence) {\n\tconst extrema = persistenceFuncs.simplify(points, persistence);\n\treturn generateColorScaleFromExtrema(extrema);\n};\n\nconst isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\nconst shouldBeMarked = (x, i, A) => i > 0 && i < A.length - 1 && isMaxima(A, i);\n\nconst generateColorScaleFromExtrema = function(extrema) {\n\tconst colors = d3.scale.category10();\n\n\tconst colored = _.map(extrema, function(x, i, A) {\n\t\tconst color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n\t\treturn Object.assign({}, x, {color});\n\t});\n\n\tconst domain = _.map(colored, d => d.x + d.dx / 2);\n\tconst range = _.map(colored, d => d.color);\n\n\treturn d3.scale.linear().domain(domain).range(range);\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/auto-colorscale.js\n **/","const d3 = require('d3');\nconst _ = require('lodash');\nconst utils = require('utils');\n\nconst {\n\tCOLOR_RANGES\n} = require('constants');\n\nexports.onData = function(data) {\n\tconst generateScale = function(field, name) {\n\t\tconst extent = d3.extent(data, point => point[field]);\n\n\t\tconst colorScale = COLOR_RANGES[name];\n\t\tconst range = colorScale.range;\n\t\tconst domain = utils.samplePointsInRange(extent, range.length);\n\t\n\t\tconst scale = colorScale.quantized ? d3.scale.quantize() : d3.scale.linear();\n\t\n\t\treturn scale.domain(domain).range(range);\n\t}; \n\n\t/* _.memoize acts only on the first arg unless we tell it otherwise */\n\treturn _.memoize(generateScale, (field, name) => field + '.' + name);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/colorscales.js\n **/","'use strict';\n\nconst utils = require('utils');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst transform = require('svg-transform');\n\nconst { \n\tSYNTENY_MARGIN ,\n\tCIRCLE_RADIUS,\n\tUNSELECTED_DOT_FILL,\n\tNUM_COLOR_SCALE_INTERPOLATION_SAMPLES,\n\tDOTPLOT_COLOR_TRANS_LEN,\n\tMAXIMIZE_WIDTH,\n\tMIN_TEXT_GAP,\n\tROUNDING_FACTOR\n} = require('constants');\n\nfunction synteny(id, dataObj, field, initialColorScale, meta) {\n\n\tvar xExtent = d3.extent(dataObj.getXLineOffsets());\n\tvar yExtent = d3.extent(dataObj.getYLineOffsets());\n\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\n\tconst baseID = id.substring(1);\n\tconst svgElement = document.getElementById(baseID);\n\tvar computedWidth = utils.getComputedAttr(svgElement, 'width');\n\tvar computedHeight = utils.getComputedAttr(svgElement, 'height');\n\tvar windowAspectRatio = computedHeight / computedWidth;\n\n\tvar width;\n\tvar height;\n\n\tif (MAXIMIZE_WIDTH || windowAspectRatio / dataAspectRatio > 1) {\n\t\twidth = computedWidth;\n\t\theight = dataAspectRatio * width;\n\t} else {\n\t\theight = computedHeight;\n\t\twidth = 1 / dataAspectRatio * height;\n\t}\n\n\td3.select(id).style('width', width + 2*SYNTENY_MARGIN);\n\td3.select(id).style('height', height + 2*SYNTENY_MARGIN);\n\n\t/* This fixes the alignment of the svg element and the canvas elements. \n\t * Not really sure what is going on here -- we are close to a consistent\n\t * transformation/offset scheme, but needs a bit more work. */\n\twidth -= 2*SYNTENY_MARGIN;\n\theight -= 2*SYNTENY_MARGIN;\n\n\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\n\tconst filterTextGaps = function(values, scale) {\n\t\treturn values.reduce(function(out, next) {\n\t\t\tif(out.length === 0 || Math.abs(scale(next) - scale(_.last(out))) > MIN_TEXT_GAP)\t\n\t\t\t\tout.push(next);\n\t\t\treturn out;\n\t\t}, []);\n\t};\n\n\tconst makeLabels = function() {\n\n\t\tconst xFilter = x => (0 <= xScale(x) && xScale(x) <= width);\n\t\tconst yFilter = y => (0 <= yScale(y) && yScale(y) <= height);\n\n\t\tconst tempXOffsets = filterTextGaps(_.filter(xOffsets, xFilter), xScale);\n\t\tconst tempXGaps = filterTextGaps(_.filter(xMidpoints, xFilter), xScale);\n\t\tconst tempYOffsets = filterTextGaps(_.filter(yOffsets, yFilter), yScale);\n\t\tconst tempYGaps = filterTextGaps(_.filter(yMidpoints, yFilter), yScale);\n\n\t\txGridLines.tickValues(tempXOffsets);\n\t\txLabels.tickValues(tempXGaps);\n\t\tyGridLines.tickValues(tempYOffsets);\n\t\tyLabels.tickValues(tempYGaps);\n\n\t\txAxisGapsGroup.call(xLabels);\n\t\tyAxisGapsGroup.call(yLabels);\n\t\txAxisLineGroup.call(xGridLines);\n\t\tyAxisLineGroup.call(yGridLines);\n\t};\n\n\tvar zoom = d3.behavior.zoom()\n\t\t.x(xScale).y(yScale)\n\t\t.scaleExtent([1, 100]).on('zoom', function() {\n\t\t\tvar t = d3.event.translate;\n\t\t\tvar s = d3.event.scale;\n\t\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t\t// prevents the translate from growing large. This way, you don't \n\t\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\t\tzoom.translate(t);\n\n\t\t\tbrushGroup.attr('transform', transform([{translate: t}, {scale: s}]));\n\n\t\t\tresizeBrushBoundary();\n\t\t\tmakeLabels();\n\t\t\tdrawBG();\n\t\t\tsetSyntenyData();\n\t\t});\n\n\tfunction resizeBrushBoundary() {\n\t\tvar scaling = zoom.scale();\n\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\tvar vertical = ['.e', '.w'];\n\t\tvar horizontal = ['.n', '.s'];\n\t\tvar horizontalRescale = corners.concat(vertical);\n\t\tvar verticalRescale = corners.concat(horizontal);\n\n\t\t_.map(horizontalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t});\n\n\t\t_.map(verticalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t});\n\t}\n\n\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t * All sorts of nasty things happen when the scales get changed underneath a\n\t * brush. */\n\tvar brush = d3.svg.brush()\n\t\t.x(xScale.copy())\n\t\t.y(yScale.copy())\n\t\t.on('brush', function() {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t})\n\t\t.on('brushend', function() {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t});\n\n\tconst canvas = d3.select(id + '-canvas')\n\t\t.attr('width', width)\n\t\t.attr('height', height)\n\t\t.style('left', SYNTENY_MARGIN)\n\t\t.style('top', SYNTENY_MARGIN);\n\n\tconst backCanvas = d3.select(id + '-canvas-background')\n\t\t.attr('width', width)\n\t\t.attr('height', height)\n\t\t.style('left', SYNTENY_MARGIN)\n\t\t.style('top', SYNTENY_MARGIN);\n\n\tconst context = canvas.node().getContext('2d');\n\tconst background = backCanvas.node().getContext('2d');\n\n\tvar svg = d3.select(id);\n\n\tvar TEXT_OFFSET = 35;\n\tvar TEXT_BOX_HEIGHT = 25;\n\tsvg.append('text')\n\t\t.attr('x', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(meta.x_name);\n\n\tsvg.append('text')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN - TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(meta.y_name);\n\n\tsvg\n\t\t.append('defs')\n\t\t.append('clipPath')\n\t\t.attr('id', 'plot-clip-box')\n\t\t.append('rect')\n\t\t.attr('x', 0)\n\t\t.attr('width', width)\n\t\t.attr('y', 0)\n\t\t.attr('height', height)\n\t\t.attr('fill', 'black');\n\n\tconst midpoints = function(points) {\n\t\treturn _.zipWith(_.initial(points), _.rest(points), (a, b) => (a + b) / 2);\n\t};\n\t\n\tvar xOffsets = dataObj.getXLineOffsets();\n\tvar xMidpoints = midpoints(xOffsets);\n\n\tconst xOffsetToName = _.object(xMidpoints, dataObj.getXLineNames());\n\tconst xAxisBase = () => d3.svg.axis().scale(xScale).orient('bottom');\n\n\tvar xGridLines = xAxisBase()\n\t\t.tickFormat('')\n\t\t.tickSize(-height);\n\n\tvar xLabels = xAxisBase()\n\t\t.tickFormat(x => xOffsetToName[x])\n\t\t.tickSize(0);\n\n\tvar xAxisWrapper = svg.append('g').attr('transform', transform([{translate: [SYNTENY_MARGIN, height + SYNTENY_MARGIN]}]));\n\tvar xAxisGapsGroup = xAxisWrapper.append('g');\n\tvar xAxisLineGroup = xAxisWrapper.append('g');\n\n\tvar yOffsets = dataObj.getYLineOffsets();\n\tvar yMidpoints = midpoints(yOffsets);\n\n\tconst yOffsetToName = _.object(yMidpoints, dataObj.getYLineNames());\n\tconst yAxisBase = () => d3.svg.axis().scale(yScale).orient('left');\n\n\tvar yGridLines = yAxisBase()\n\t\t.tickFormat('')\n\t\t.tickSize(-width);\n\n\tvar yLabels = yAxisBase()\n\t\t.tickFormat(x => yOffsetToName[x])\n\t\t.tickSize(0);\n\n\tvar yAxisWrapper = svg.append('g').attr('transform', transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]));\n\tvar yAxisGapsGroup = yAxisWrapper.append('g');\n\tvar yAxisLineGroup = yAxisWrapper.append('g');\n\n\tmakeLabels();\n\n\n\tsvg = svg\n\t\t.append('g')\n\t\t.attr('transform', transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]))\n\t\t.append('g').attr('id', 'zoom-group')\n\t\t.call(zoom).on('mousedown.zoom', null); //disable panning\n\n\tvar brushGroup = svg\n\t\t.append('g').attr('clip-path', 'url(#plot-clip-box)')\n\t\t.append('g').attr('id', 'brush-group')\n\t\t.call(brush);\n\n\tvar colorScale = initialColorScale;\n\n\tfunction drawBG() {\n\t\tvar allDots = dataObj.currentData().raw;\n\t\tbackground.clearRect(0, 0, width, height);\n\t\tbackground.fillStyle = UNSELECTED_DOT_FILL;\n\t\t_.each(allDots, function(d) {\n\t\t\tconst cx = xScale(d.x_relative_offset);\n\t\t\tconst cy = yScale(d.y_relative_offset);\n\n\t\t\tif (cx < 0 || cx > width || cy < 0 || cy > height)\n\t\t\t\treturn;\n\n\t\t\tbackground.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t});\n\t}\n\n\tfunction draw(elapsedMS, initialColorScale, finalColorScale) {\n\t\tvar start = Date.now();\n\n\t\tvar intermediateColorScale;\n\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\n\t\tvar allData = dataObj.currentData();\n\t\tvar activeDots = allData.active;\n\n\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tcontext.clearRect(0, 0, width, height);\n\n\t\t/* On top, active dots */\n\t\tvar groups = [];\n\t\tvar index = 0;\n\n\t\tconst roundlogks = x => Math.floor(x.logks * ROUNDING_FACTOR) / ROUNDING_FACTOR; \n\t\twhile (index < activeDots.length) {\n\t\t\tvar low = index;\n\t\t\tvar val = roundlogks(activeDots[index]);\n\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\tlogks: val\n\t\t\t}, x => -roundlogks(x));\n\t\t\tgroups.push([low, index]);\n\t\t}\n\n\t\t_.each(groups, function([loIndex, hiIndex]) {\n\t\t\tcontext.fillStyle = intermediateColorScale(roundlogks(activeDots[loIndex]));\n\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\tconst d = activeDots[i];\n\t\t\t\tconst cx = xScale(d.x_relative_offset);\n\t\t\t\tconst cy = yScale(d.y_relative_offset);\n\n\t\t\t\tif (cx < 0 || cx > width || cy < 0 || cy > height)\n\t\t\t\t\tcontinue;\n\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t}\n\t\t});\n\n\t\tconst diff = Date.now() - start;\n\t\t//console.log('Start of call to end of draw call:', diff);\n\t\tif (elapsedMS > 0) {\n\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t}\n\t}\n\n\tfunction interpolateScales(a, b, t) {\n\t\tconst aDomain = a.domain();\n\t\tconst bDomain = b.domain();\n\t\tconst min = Math.min(aDomain[0], bDomain[0]);\n\t\tconst max = Math.max(aDomain[aDomain.length - 1], bDomain[bDomain.length - 1]);\n\t\tconst step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\tconst domain = _.range(min, max + 1, step);\n\t\tconst range = _.map(domain, function(input) {\n\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t});\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t}\n\n\tfunction setSyntenyData() {\n\t\tdraw(0, colorScale, colorScale);\n\t}\n\tdataObj.addListener(setSyntenyData);\n\tdrawBG();\n\tsetSyntenyData();\n\n\tfunction setNavigationMode(mode) {\n\t\tif (mode === 'pan') {\n\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t} else if (mode === 'brush') {\n\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t}\n\t}\n\n\tfunction setColorScale(newColorScale) {\n\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\tcolorScale = newColorScale;\n\t}\n\n\tfunction setField(f) {\n\t\tfield = f;\n\t\tsetSyntenyData();\n\t}\n\n\treturn {\n\t\tsetNavMode: setNavigationMode,\n\t\tsetColorScale: setColorScale,\n\t\tsetField: setField\n\t};\n}\n\nexports.synteny = synteny;\n\n// Local Variables:\n// mode: js2\n// js2-basic-offset: 8\n// End:\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dotplot.js\n **/","'use strict';\n\nconst {\n\tHISTOGRAM_MARGIN,\n\tHISTOGRAM_Y_SCALE_TRANS_LEN,\n\tNUM_HISTOGRAM_TICKS,\n\tUNSELECTED_BAR_FILL\n} = require('constants');\n\nconst persistenceFuncs = require('persistence');\nconst utils = require('utils');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst transform = require('svg-transform');\n\nfunction histogram(id, dataObj, field, colorScale) {\n\tconst dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\n\tconst plot = d3.select(id);\n\tconst plotWidth = utils.getComputedAttr(plot.node(), 'width');\n\tconst plotHeight = utils.getComputedAttr(plot.node(), 'height');\n\n\tconst prettyNames = {\n\t\tlogks: 'log(ks)',\n\t\tlogkn: 'log(kn)',\n\t\tlogkskn: 'log(ks/kn)'\n\t};\n\tplot.append('text')\n\t\t.attr('x', 2 * plotHeight / 3)\n\t\t.attr('width', plotHeight / 3)\n\t\t.attr('y', 50)\n\t\t.attr('height', 50)\n\t\t.classed('histogram-title', true)\n\t\t.text(prettyNames[field]);\n\n\tfunction plotBrushBrush() {\n\t\tif (!plotBrush.empty()) {\n\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t}\n\t}\n\n\tfunction plotBrushEnd() {\n\t\tif (plotBrush.empty()) {\n\t\t\tdataObj.removeDataFilter(field);\n\t\t}\n\t\tdataObj.notifyListeners('histogram-stop');\n\t\tupdateColors(dataBarSel); // Cancel color animation -- just brushing\n\t}\n\n\tconst xPlotScale = d3.scale.linear()\n\t\t.domain(dataExtent)\n\t\t.range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\n\tconst bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n\tconst summaryF = dataObj.currentDataSummary(bins);\n\tconst getYExtent = (summary) => [0, 3 / 2 * _.max(_.pluck(summary, 'y'))];\n\n\tconst yPlotScale = d3.scale.linear()\n\t\t.domain(getYExtent(summaryF()))\n\t\t.range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\n\tfunction updateMinMaxMarkers(persistence) {\n\t\tconst summary = summaryF();\n\t\tconst extrema = persistenceFuncs.simplify(summary, persistence);\n\n\t\tconst isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t\tconst shouldBeMarked = (x, i, A) => i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t\tconst markers = _.map(extrema, function(d, i, A) {\n\t\t\treturn {\n\t\t\t\tcolor: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t\t\t\tx: d.x + d.dx / 2,\n\t\t\t\ty: d.y\n\t\t\t};\n\t\t});\n\n\t\tconst tempSelA = plot.selectAll('.maxMark').data(markers);\n\t\ttempSelA.exit().remove();\n\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\ttempSelA\n\t\t\t.attr('cx', d => xPlotScale(d.x))\n\t\t\t.attr('cy', d => yPlotScale(d.y) - 5)\n\t\t\t.attr('r', 3)\n\t\t\t.attr('fill', d => d.color);\n\t}\n\n\tconst plotBrush = d3.svg.brush()\n\t\t.x(xPlotScale)\n\t\t.on('brush', plotBrushBrush)\n\t\t.on('brushend', plotBrushEnd);\n\n\tconst dataBarSel = plot.selectAll('.dataBars')\n\t\t.data(summaryF())\n\t\t.enter()\n\t\t.append('rect').classed('dataBars', true)\n\t\t.attr('x', d => xPlotScale(d.x))\n\t\t.attr('width', d => xPlotScale(d.x + d.dx) - xPlotScale(d.x));\n\n\tconst brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group')\n\t\t.attr('transform', transform([{translate: [0, HISTOGRAM_MARGIN]}]))\n\t\t.call(plotBrush);\n\tbrushSelectForBM.selectAll('rect')\n\t\t.attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\n\tconst xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\tconst yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\n\tplot.append('g')\n\t\t.attr('transform', transform([{translate: [0, plotHeight - HISTOGRAM_MARGIN]}]))\n\t\t.classed('xAxis', true).call(xAxis);\n\tconst yAxisSel = plot.append('g')\n\t\t.attr('transform', transform([{translate: [HISTOGRAM_MARGIN, 0]}]))\n\t\t.classed('yAxis', true).call(yAxis);\n\n\tconst updateHeights = function(selection) {\n\t\tselection.transition(); // cancel transition\n\t\tselection.attr('y', d => yPlotScale(d.y));\n\t};\n\tconst updateColors = function(selection) {\n\t\tselection.transition(); // cancel transition\n\t\tconst extent = plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n\t\tconst active = bin => bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\n\t\tselection\n\t\t\t.attr('height', d => plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y))\n\t\t\t.attr('fill', d => active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL);\n\t};\n\n\tconst updatePlotAttrs = function(selection) {\n\t\tupdateHeights(selection);\n\t\tupdateColors(selection);\n\t};\n\n\tfunction updatePlot(typeHint) {\n\t\tdataBarSel.transition(); /* cancel previous transition */\n\n\t\ttypeHint = typeHint || '';\n\n\t\tconst summary = summaryF();\n\t\tlet tempSel = dataBarSel.data(summary);\n\n\t\tif (typeHint.indexOf('stop') > -1) {\n\t\t\tyPlotScale.domain(getYExtent(summary));\n\t\t\tyAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t\t\ttempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n\t\t} \n\n\t\ttempSel.call(updatePlotAttrs);\n\t}\n\n\tdataObj.addListener(updatePlot);\n\n\tfunction setColorScale(newColorScale) {\n\t\tcolorScale = newColorScale;\n\t\tupdatePlot('stop'); /* trigger animation -- FIXME */\n\t}\n\n\treturn {\n\t\tsetColorScale: setColorScale,\n\t\tbrush: plotBrush,\n\t\tsendBrushEvent: plotBrushBrush,\n\t\tselection: brushSelectForBM,\n\t\tupdateMinMaxMarkers: updateMinMaxMarkers,\n\t\tbins: summaryF\n\t};\n}\n\nexports.histogram = histogram;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/histogram.js\n **/","'use strict';\n\nconst histogram = require('histogram');\nconst dotplot = require('dotplot');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst autoscale = require('auto-colorscale');\n\nrequire('style.css');\n\nconst { \n\tRUN_BENCHMARKS, \n\tSHOW_MAXIMA_AND_MINIMA \n} = require('constants');\n\nfunction buildDiv(element_id) {\n\tconst div = d3.select(element_id).append('div').classed('_synteny-dotplot-builder', true);\n\n\tdiv.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\n\tconst subdiv = div.append('div').classed('dotplot', true);\n\t/* pointer-events = none stops the canvas from intercepting brush events\n\t * before they get to the svg element below. */\n\tsubdiv.append('canvas')\n\t\t.attr('id', 'dotplot-canvas-background').classed('dotplot', true)\n\t\t.style('pointer-events', 'none');\n\tsubdiv.append('canvas')\n\t\t.attr('id', 'dotplot-canvas').classed('dotplot', true)\n\t\t.style('pointer-events', 'none');\n\n\tconst histogramWrapper = div.append('div').attr('id', 'histogram-wrapper');\n\thistogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\thistogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\thistogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\n\tconst formWrapper = div.append('div').attr('id', 'form-wrapper');\n\n\tfunction makeForm(title, optionId, elements, checkIndex) {\n\t\tconst navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\tnavOptions.append('strong').text(title + ': ');\n\n\t\tconst navForm = navOptions.append('form').attr('id', optionId);\n\t\tconst options = navForm.selectAll('input')\n\t\t\t.data(elements).enter().append('input')\n\t\t\t.attr('type', 'radio').attr('name', optionId)\n\t\t\t.attr('value', d => d[0]);\n\n\t\toptions.forEach(function(selection) {\n\t\t\tselection.forEach(function(element, i) {\n\t\t\t\tconst label = document.createElement('label');\n\t\t\t\tlabel.textContent = elements[i][1];\n\t\t\t\tnavForm.node().insertBefore(label, element);\n\t\t\t});\n\t\t});\n\n\t\toptions[0][checkIndex].checked = true;\n\t}\n\n\tconst option = (value, text) => [value, text];\n\n\tmakeForm('Navigation Mode', 'mouse-options', [\n\t\toption('brush', 'Brushing'),\n\t\toption('pan', 'Panning')\n\t], 0);\n\n\tmakeForm('Color Scale', 'color-options', [\n\t\toption('auto', 'auto'),\n\t\toption('rainbow_quantized', 'rainbow_quantized')\n\t], 0);\n\n\tconst persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\tpersistenceOptions.append('strong').text('Auto-scale persistence');\n\n\tpersistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100)\n\t\t.attr('value', 40).attr('step', 1);\n\n\tpersistenceOptions.append('button').attr('id', 'persistence-button').attr('type', 'button').text('Refresh auto scale');\n\n\tpersistenceOptions.append('p').text('Largest persistence edge that will be removed: ').append('label').attr('id', 'persistence-text').text('40');\n}\n\nfunction controller(dataObj, element_id, meta) {\n\n\tbuildDiv('#' + element_id);\n\t\n\tconst refreshAutoScale = function(persistence) {\n\t\tconst radio = document.getElementById('color-options');\n\t\tconst auto = _.find(radio.children, { value: 'auto' });\n\t\tauto.checked = true;\n\n\t\tconst h = histograms[activeField];\n\t\th.setColorScale(autoscale.generateAutoScale(h.bins(), persistence));\n\n\t\tif (SHOW_MAXIMA_AND_MINIMA)\n\t\t\t_.each(histograms, h => h.updateMinMaxMarkers(persistence));\n\t};\n\n\tconst getPersistence = () => d3.select('#persistence').node().value;\n\n\td3.select('#persistence')\n\t\t.on('input', function() {\n\t\t\tconst p = getPersistence();\n\t\t\trefreshAutoScale(p);\n\t\t\td3.select('#persistence-text').node().innerText = p;\n\t\t});\n\n\td3.select('#persistence-button')\n\t\t.on('click', function() {\n\t\t\trefreshAutoScale(getPersistence());\n\t\t});\n\n\t/* zoom/pan switching */\n\td3.selectAll('#mouse-options input[name=mouse-options]')\n\t\t.on('change', function() {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\n\t/* color mode switching */\n\tvar activeField = 'logks';\n\t\n\t/* Don't be cute and use fat arrow functions here. Fat arrow functions\n\t * have a lexically bound \"this\" and we really really need the old \"this\"\n\t * scoping, since we are getting value from a form. */\n\td3.selectAll('#color-options input[name=color-options]')\n\t\t.on('change', function() {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t\t\t} else {\n\t\t\t\tnewCS = colorScale(activeField, this.value);\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t});\n\n\tconst colorScale = require('colorscales').onData(dataObj.currentData().raw);\n\n\tconst initial = colorScale(activeField, 'rg');\n\n\tconst histograms = {\n\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initial)\n\t};\n\tconst activePlot = histograms[activeField];\n\tconst initialAutoScale = autoscale.generateAutoScale(activePlot.bins(), getPersistence());\n\tactivePlot.setColorScale(initialAutoScale);\n\n\tconst syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initialAutoScale, meta);\n\n\n\t// Since the histograms aren't controlling their own color scale policy \n\t// now (a good thing), we need to manually fire of their update methods. \n\t// Eventually, we should fix this up.\n\tdataObj.addListener(function(typeHint) {\n\t\tif(typeHint.indexOf('stop') > -1)\n\t\t\t_.each(histograms, h => h.updateMinMaxMarkers(getPersistence()));\n\t});\n\tdataObj.notifyListeners('initial');\n\n\t/* Benchmark */\n\tif (RUN_BENCHMARKS) {\n\t\tconst [minLogKs, maxLogKs] = d3.extent(dataObj.currentData().raw, x => x.logks);\n\t\tconst points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\n\t\tconst rangeList = _.chain(points)\n\t\t\t.map(lo => _.map(points, hi => [lo, hi]))\n\t\t\t.flatten()\n\t\t\t.filter(([lo, hi]) => lo < hi)\n\t\t\t.value();\n\n\t\tconst asyncBenchmark = require('async-benchmark');\n\t\tasyncBenchmark.benchmark(rangeList, function(range) {\n\t\t\thistograms.logks.brush.extent(range);\n\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t}, function({ average, max }) {\n\t\t\talert('Average: ' + average + ', max: ' + max);\n\t\t});\n\t}\n}\n\nexports.controller = controller;\n\n// Local Variables:\n// mode: js2\n// js2-basic-offset: 8\n// End:\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/synteny-vis.js\n **/","(function(exports){\ncrossfilter.version = \"1.3.12\";\nfunction crossfilter_identity(d) {\n  return d;\n}\ncrossfilter.permute = permute;\n\nfunction permute(array, index) {\n  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\nvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\nbisect.by = bisect_by;\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\nvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\nheap.by = heap_by;\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\nvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\nheapselect.by = heapselect_by;\n\nfunction heapselect_by(f) {\n  var heap = heap_by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        x,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (x = f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\nvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\ninsertionsort.by = insertionsort_by;\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\nvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\nquicksort.by = quicksort_by;\n\nfunction quicksort_by(f) {\n  var insertionsort = insertionsort_by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\nvar crossfilter_array8 = crossfilter_arrayUntyped,\n    crossfilter_array16 = crossfilter_arrayUntyped,\n    crossfilter_array32 = crossfilter_arrayUntyped,\n    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\nif (typeof Uint8Array !== \"undefined\") {\n  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\nfunction crossfilter_null() {\n  return null;\n}\nfunction crossfilter_zero() {\n  return 0;\n}\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\nexports.crossfilter = crossfilter;\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      m = 0, // a bit mask representing which dimensions are in use\n      M = 8, // number of dimensions that can fit in `filters`\n      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = []; // when data is removed\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters = crossfilter_arrayLengthen(filters, n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters.\n  function removeData() {\n    var newIndex = crossfilter_index(n, n),\n        removed = [];\n    for (var i = 0, j = 0; i < n; ++i) {\n      if (filters[i]) newIndex[i] = j++;\n      else removed.push(i);\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(0, [], removed); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var i = 0, j = 0, k; i < n; ++i) {\n      if (k = filters[i]) {\n        if (i !== j) filters[j] = k, data[j] = data[i];\n        ++j;\n      }\n    }\n    data.length = j;\n    while (n > j) filters[--n] = 0;\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value) {\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n        zero = ~one, // inverted one, e.g., 11110111\n        values, // sorted, cached array\n        index, // value rank ↦ object id\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        sort = quicksort_by(function(i) { return newValues[i]; }),\n        refilter = crossfilter_filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Incorporate any existing data into this dimension, and make sure that the\n    // filter bitset is wide enough to handle the new dimension.\n    m |= one;\n    if (M >= 32 ? !one : m & -(1 << M)) {\n      filters = crossfilter_arrayWiden(filters, M <<= 1);\n    }\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      // Permute new values into natural order using a sorted index.\n      newValues = newData.map(value);\n      newIndex = sort(crossfilter_range(n1), 0, n1);\n      newValues = permute(newValues, newIndex);\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n      if (refilterFunction) {\n        for (i = 0; i < n1; ++i) {\n          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n        }\n      } else {\n        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n      var oldValues = values,\n          oldIndex = index,\n          i0 = 0,\n          i1 = 0;\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = new Array(n);\n      index = crossfilter_index(n, n);\n\n      // Merge the old and new sorted values, and old and new index.\n      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0++];\n        } else {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1++] + n0;\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++i) {\n        values[i] = oldValues[i0];\n        index[i] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++i) {\n        values[i] = newValues[i1];\n        index[i] = newIndex[i1] + n0;\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (filters[k = index[i]]) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[k];\n          ++j;\n        }\n      }\n      values.length = j;\n      while (j < n) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [];\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilter = crossfilter_filterAll;\n\n      filterIndexFunction(refilterFunction = f);\n\n      lo0 = 0;\n      hi0 = n;\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [];\n\n      for (i = 0; i < n; ++i) {\n        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n          if (x) filters[k] &= zero, added.push(k);\n          else filters[k] |= one, removed.push(k);\n        }\n      }\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k) {\n      var array = [],\n          i = hi0,\n          j;\n\n      while (--i >= lo0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k) {\n      var array = [],\n          i = lo0,\n          j;\n\n      while (i < hi0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n        var oldGroups = groups,\n            reIndex = crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            if (g0 = oldGroups[++i0]) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n          while (!(x1 > x)) {\n            groupIndex[j = newIndex[i1] + n0] = k;\n            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater than all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n          groupIndex[i0] = reIndex[groupIndex[i0]];\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if (++k === groupCapacity) {\n            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData() {\n        if (k > 1) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK);\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          for (var i = 0, j = 0; i < n; ++i) {\n            if (filters[i]) {\n              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n              ++j;\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1) {\n            // Reindex the group index using seenGroups to find the new index.\n            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var i = 0; i < n; ++i) if (filters[i]) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      function updateMany(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g;\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      function updateOne(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = heapselect_by(valueOf);\n        heap = heap_by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      m &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = n0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, added, removed) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (!filters[k = added[i]]) {\n          reduceValue = reduceAdd(reduceValue, data[k]);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters[k = removed[i]] === filterOne) {\n          reduceValue = reduceRemove(reduceValue, data[k]);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      for (i = 0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? crossfilter_array8 : m < 0x10001\n      ? crossfilter_array16\n      : crossfilter_array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n})(typeof exports !== 'undefined' && exports || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crossfilter/crossfilter.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = require(\"./crossfilter\").crossfilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crossfilter/index.js\n ** module id = 14\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder .dotplot{float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:50%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:rgba(0,0,0,.25)}._synteny-dotplot-builder #histogram-wrapper{position:fixed;right:0;width:50%}._synteny-dotplot-builder .histogram{width:100%;height:75%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{position:fixed;bottom:10;right:10;width:50%;height:12%}._synteny-dotplot-builder form{display:inline}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./src/style.css\n ** module id = 15\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 16\n ** module chunks = 0\n **/","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/queue-async/queue.js\n ** module id = 17\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 18\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/style.css\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 20\n ** module chunks = 0\n **/"],"sourceRoot":""}