{"version":3,"sources":["webpack:///synteny-dotplot-builder.js","webpack:///webpack/bootstrap 7f051435002b9440aa8d","webpack:///./src/main.js","webpack:///./~/lodash/index.js","webpack:///./~/d3/d3.js","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/persistence.js","webpack:///./~/svg-transform/index.js","webpack:///./src/async-benchmark.js","webpack:///./src/auto-colorscale.js","webpack:///./src/colorscales.js","webpack:///./src/dotplot.js","webpack:///./src/histogram.js","webpack:///./src/synteny-vis.js","webpack:///./src/style.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/queue-async/queue.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/style.css?2ad8","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ksTextToObjects","text","csvLines","replace","split","_","chain","filter","line","map","ksLineToSyntenyDot","isFinite","logks","logkn","fields","ks","Number","kn","log10","n","Math","log","roundedlogks","floor","logkskn","x_chromosome_id","y_chromosome_id","x_relative_offset","round","y_relative_offset","lengthsToCumulativeBPCounts","len_list","ntLenList","sortBy","reverse","reduce","kv","name","total","length","geLenList","gene_count","nameLenList","geneCounts","object","x","nt","ge","gene_counts","inlineKSData","xmap","ymap","each","ksObj","xShift","yShift","between","low","high","field","createDataObj","syntenyDots","xmapPair","ymapPair","filterMapForNames","pairs","pluck","reject","getFilterFunction","filterFuncs","values","all","f","ret","dataFilters","getXLineOffsets","getYLineOffsets","gentMode","setGEvNTMode","mode","notifyListeners","getGEvNTMode","setOrder","descending","getXLineNames","getYLineNames","currentData","raw","active","sortedDots","memoize","partial","currentDataSummary","ticks","filtersWithoutField","omit","validPoints","dx","hi","sortedIndex","lo","y","addSpatialFilter","extents","typeHint","spatial","dot","removeSpatialFilter","addDataFilter","extent","removeDataFilter","listeners","addListener","push","typeOfChange","TIME_DATA_OPERATIONS","logIt","_len","arguments","args","Array","_key","start","Date","now","apply","concat","console","_require","queue","d3","sv","makeSyntenyDotPlot","_ref","data_url","element_id","genome_x","genome_y","defer","await","err","x_name","y_name","ksData","xCumLenMap","chromosomes","yCumLenMap","inlinedKSData","ksDataObject","controller","window","__WEBPACK_AMD_DEFINE_RESULT__","global","baseCompareAscending","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","criteria","compareMultiple","orders","objCriteria","othCriteria","ordersLength","result","order","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeRegExpChar","leadingChar","whitespaceChar","regexpEscapes","stringEscapes","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","PLACEHOLDER","sortedUniq","iteratee","seen","computed","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","actions","this","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","POSITIVE_INFINITY","__views__","lazyClone","arrayCopy","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","data","type","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","MapCache","__data__","mapDelete","has","mapGet","mapHas","mapSet","SetCache","hash","nativeCreate","set","Set","cacheIndexOf","cache","isObject","cachePush","add","arrayConcat","othIndex","othLength","source","arrayEach","arrayEachRight","arrayEvery","arrayExtremum","comparator","exValue","current","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arrayReduceRight","arraySome","arraySum","assignDefaults","objectValue","sourceValue","assignOwnDefaults","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","initCloneArray","tag","objToString","isFunc","funcTag","objectTag","argsTag","cloneableTags","initCloneByTag","initCloneObject","baseForOwn","subValue","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","getIndexOf","isCommon","createCache","valuesLength","valuesIndex","baseEvery","baseEach","baseExtremum","baseFill","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseForIn","baseFor","keysIn","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseMerge","isSrcArr","baseMergeDeep","mergeFunc","isPlainObject","toPlainObject","baseProperty","basePropertyDeep","basePullAt","indexes","previous","splice","baseRandom","min","max","nativeFloor","nativeRandom","baseReduce","initFromCollection","baseSome","baseSortBy","comparer","sort","baseSortByOrder","callback","getCallback","baseSum","baseUniq","isLarge","seenIndex","baseValues","baseWhile","isDrop","action","binaryIndex","retHighest","HALF_MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","MAX_ARRAY_INDEX","bufferClone","buffer","ArrayBuffer","byteLength","Uint8Array","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","nativeMax","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","createBaseEach","getLength","isLength","iterable","createBaseFor","keysFunc","createBindWrapper","wrapper","fn","root","Ctor","createCtorWrapper","createCompounder","words","deburr","thisBinding","baseCreate","prototype","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","toIterable","createFind","createFindIndex","createFindKey","objectFunc","createFlow","funcs","thru","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isCurry","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","isCurryBound","BIND_FLAG","BIND_KEY_FLAG","newData","setData","isBind","isBindKey","reorder","isAry","CURRY_BOUND_FLAG","CURRY_RIGHT_FLAG","strLength","nativeIsFinite","padLength","repeat","nativeCeil","slice","createPartialWrapper","createRound","methodName","number","precision","pow","createSortedIndex","mergeData","baseSetData","arrValue","othValue","boolTag","dateTag","errorTag","message","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","constructor","othCtor","realNames","otherFunc","target","getNative","isNative","transforms","size","input","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","byteOffset","reFlags","exec","lastIndex","invokePath","reIsUint","test","MAX_SAFE_INTEGER","reIsPlainProp","reIsDeepProp","srcBitmask","newBitmask","isCombo","mergeDefaults","merge","pickByArray","pickByCallback","oldArray","shimKeys","allowIndexes","rePropName","match","quote","reEscapeChar","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","first","flatten","flattenDeep","initial","lastIndexOf","pull","remove","rest","take","takeRight","takeRightWhile","takeWhile","uniq","isSorted","unzip","group","unzipWith","xor","zipObject","tap","interceptor","wrapperChain","wrapperCommit","wrapperPlant","parent","wrapperReverse","wrapped","wrapperToString","wrapperValue","every","findWhere","find","includes","isString","sample","toArray","rand","shuffle","some","sortByOrder","where","after","temp","before","debounce","options","cancel","timeoutId","clearTimeout","maxTimeoutId","lastCalled","trailingCall","complete","isCalled","delayed","remaining","stamp","maxDelayed","trailing","debounced","leading","maxWait","leadingCall","resolver","memoized","get","Cache","negate","once","otherArgs","spread","throttle","wrap","cloneDeep","gt","gte","propertyIsEnumerable","isBoolean","isDate","isElement","nodeType","isEmpty","isEqual","isError","isMatch","isNaN","isNumber","reIsNative","fnToString","reIsHostCtor","isNull","isRegExp","typedArrayTags","isUndefined","lt","lte","create","properties","functions","defaultValue","invert","multiValue","isProto","skipIndexes","nested","transform","valuesIn","inRange","random","floating","noMin","noMax","parseFloat","capitalize","toUpperCase","reLatin1","reComboMark","endsWith","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChars","reRegExpChars","pad","parseInt","radix","trim","nativeParseInt","reHasHexPrefix","startsWith","template","otherOptions","settings","templateSettings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","trimLeft","trimRight","trunc","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","separator","search","newEnd","substring","unescape","reHasEscapedHtml","reEscapedHtml","pattern","reWords","matches","constant","matchesProperty","mixin","isObj","methodNames","noConflict","oldDash","noop","propertyOf","range","step","times","MAX_ARRAY_LENGTH","uniqueId","prefix","idCounter","augend","addend","sum","defaults","pick","contextProps","Error","String","arrayProto","objectProto","stringProto","toString","WeakMap","ceil","nativeIsArray","nativeKeys","nativeNow","NEGATIVE_INFINITY","metaMap","support","reEscape","reEvaluate","baseEachRight","count","HOT_SPAN","HOT_COUNT","difference","findIndex","findLastIndex","intersection","arrays","caches","pullAt","sortedLastIndex","union","without","zip","zipWith","wrapperConcat","at","countBy","findLast","forEach","forEachRight","groupBy","indexBy","invoke","isProp","partition","reduceRight","sortByAll","getTime","bind","bindAll","bindKey","curry","curryRight","delay","flow","flowRight","modArgs","partialRight","rearg","assign","defaultsDeep","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","camelCase","word","toLowerCase","kebabCase","padLeft","padRight","snakeCase","startCase","e","method","methodOf","backflow","collect","compose","eachRight","extend","methods","select","tail","unique","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","names","commit","run","toJSON","valueOf","mapTag","setTag","weakMapTag","upper","lower","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","b","d","r","t","u","v","\\","\n","\r"," "," ","freeExports","freeModule","freeGlobal","freeSelf","self","freeWindow","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","NaN","d3_number","d3_numeric","d3_bisector","compare","left","right","d3_zipLength","d3_range_integerScale","k","d3_class","ctor","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","i","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","on","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","j","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","top","margin","padding","border","ctm","getScreenCTM","pageX","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","d3_timer_sweep","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","join","specifier","d3_format_re","align","sign","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","date","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","getMonth","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","points","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","rangeRound","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","zips","transpose","matrix","entries","merged","empty","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","getComputedStyle","getPropertyValue","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","csv","tsv","then","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","RUN_BENCHMARKS","SHOW_MAXIMA_AND_MINIMA","AUTO_SCALE_VALLEY_FILL","SYNTENY_MARGIN","CIRCLE_RADIUS","UNSELECTED_DOT_FILL","NUM_COLOR_SCALE_INTERPOLATION_SAMPLES","DOTPLOT_COLOR_TRANS_LEN","HISTOGRAM_MARGIN","HISTOGRAM_Y_SCALE_TRANS_LEN","NUM_HISTOGRAM_TICKS","UNSELECTED_BAR_FILL","COLOR_RANGES","rg","quantized","rg_quantized","rainbow","rainbow_quantized","unselected","getComputedAttr","element","samplePointsInRange","removeNonExtrema","here","gapBetweenPoints","indexOfSmallestPointDifference","simplify","_x","_x2","_again","dirtyPoints","persistence","toRemove","prop","benchmark","testArgs","done","results","runOne","tests","timeIt","stats","arg","totalTime","average","persistenceFuncs","generateAutoScale","extrema","generateColorScaleFromExtrema","isMaxima","shouldBeMarked","colors","colored","utils","onData","generateScale","colorScale","synteny","dataObj","initialColorScale","meta","resizeBrushBoundary","scaling","corners","vertical","horizontal","horizontalRescale","verticalRescale","draw","elapsedMS","finalColorScale","makeComp","intermediateColorScale","interpolateScales","allData","activeDots","allDots","contextbak","clearRect","height","fillStyle","xScale","yScale","fillRect","_xScale$domain","_xScale$domain2","_slicedToArray","minDomX","maxDomX","_yScale$domain","_yScale$domain2","minDomY","maxDomY","_xScale$range","_xScale$range2","minRanX","maxRanX","_yScale$range","_yScale$range2","minRanY","maxRanY","widthDomX","widthDomY","widthRanX","widthRanY","xRatio","yRatio","val","loIndex","hiIndex","diff","aDomain","bDomain","setSyntenyData","setNavigationMode","setColorScale","newColorScale","setField","dataAspectRatio","baseID","svgElement","getElementById","computedWidth","computedHeight","windowAspectRatio","brushGroup","tempXOffsets","xOffsets","tempXGaps","xAxisTickValues","tempYOffsets","yOffsets","tempYGaps","yAxisTickValues","xLineAxis","xGapsAxis","yLineAxis","yGapsAxis","xAxisGapsGroup","yAxisGapsGroup","xAxisLineGroup","yAxisLineGroup","getContext","TEXT_OFFSET","TEXT_BOX_HEIGHT","xPairs","xOffsetToNameMap","xAxisWrapper","yPairs","yOffsetToNameMap","yAxisWrapper","setNavMode","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","plotBrushBrush","plotBrush","plotBrushEnd","updateColors","dataBarSel","updateMinMaxMarkers","summary","_bins","markers","tempSelA","plot","xPlotScale","yPlotScale","updatePlot","tempSel","getYExtent","yAxisSel","yAxis","updatePlotAttrs","dataExtent","plotWidth","plotHeight","prettyNames","brushSelectForBM","xAxis","updateHeights","sendBrushEvent","buildDiv","makeForm","title","optionId","elements","checkIndex","navOptions","formWrapper","navForm","label","checked","div","histogramWrapper","option","persistenceOptions","refreshAutoScale","radio","auto","histograms","activeField","autoscale","getPersistence","innerText","syntenyPlot","newCS","activeCS","dotplot","_d3$extent","_d3$extent2","minLogKs","maxLogKs","rangeList","_ref2","asyncBenchmark","info","alert","item","mediaQuery","alreadyImportedModules","parallelism","popping","tasks","notify","awaitAll","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","firstChild","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","encodeURIComponent","blob","oldSrc","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","content","locals","webpackPolyfill","deprecate"],"mappings":"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","file":"synteny-dotplot-builder.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar TIME_DATA_OPERATIONS = _require.TIME_DATA_OPERATIONS;\n\t\n\tvar queue = __webpack_require__(15);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar sv = __webpack_require__(12);\n\t\n\texports.makeSyntenyDotPlot = function (_ref) {\n\t\tvar data_url = _ref.data_url;\n\t\tvar element_id = _ref.element_id;\n\t\tvar genome_x = _ref.genome_x;\n\t\tvar genome_y = _ref.genome_y;\n\t\n\t\tqueue().defer(d3.text, data_url).await(function (err, ks) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tvar x_name = genome_x.name;\n\t\t\tvar y_name = genome_y.name;\n\t\n\t\t\tvar ksData = ksTextToObjects(ks);\n\t\t\tvar xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t\t\tvar yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t\t\tvar inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\t\n\t\t\tvar ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tsv.controller(ksDataObject, element_id, { x_name: x_name, y_name: y_name });\n\t\t});\n\t};\n\t\n\tfunction ksTextToObjects(text) {\n\t\t/* .ks files are delimited with a combination of tabs and double bars. */\n\t\tvar csvLines = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '').split('\\n');\n\t\n\t\treturn _.chain(csvLines).filter(function (line) {\n\t\t\treturn line && line[0] !== '#';\n\t\t}).map(ksLineToSyntenyDot).filter(function (line) {\n\t\t\treturn isFinite(line.logks) && isFinite(line.logkn);\n\t\t}).value();\n\t}\n\t\n\tfunction ksLineToSyntenyDot(line) {\n\t\tvar fields = line.split(',');\n\t\n\t\tvar ks = Number(fields[0]);\n\t\tvar kn = Number(fields[1]);\n\t\tvar log10 = function log10(n) {\n\t\t\treturn Math.log(n) / Math.log(10);\n\t\t};\n\t\n\t\treturn {\n\t\t\tks: ks,\n\t\t\tlogks: log10(ks),\n\t\t\troundedlogks: Math.floor(log10(ks) * 10) / 10,\n\t\t\tkn: kn,\n\t\t\tlogkn: log10(kn),\n\t\t\tlogkskn: log10(ks) - log10(kn),\n\t\t\tx_chromosome_id: fields[3],\n\t\t\ty_chromosome_id: fields[15],\n\t\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t\t};\n\t}\n\t\n\tfunction lengthsToCumulativeBPCounts(len_list) {\n\t\tvar ntLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar nameLenList = _.chain(len_list).sortBy('name').reduce(function (map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t}).value();\n\t\n\t\tvar geneCounts = _.object(_.map(len_list, function (x) {\n\t\t\treturn x.name;\n\t\t}), _.map(len_list, function (x) {\n\t\t\treturn x.gene_count;\n\t\t}));\n\t\n\t\treturn {\n\t\t\tnt: ntLenList,\n\t\t\tge: geLenList,\n\t\t\tname: nameLenList,\n\t\t\tgene_counts: geneCounts\n\t\t};\n\t}\n\t\n\t// Compute absolute BP offset from chromosome and relative offset\n\tfunction inlineKSData(ks, xmap, ymap) {\n\t\t_.each(ks, function (ksObj) {\n\t\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\t\tksObj.x_relative_offset += xShift;\n\t\t\tksObj.y_relative_offset += yShift;\n\t\t});\n\t\treturn ks;\n\t}\n\t\n\tfunction between(low, high, field) {\n\t\tif (field) {\n\t\t\treturn function (x) {\n\t\t\t\treturn low <= x[field] && x[field] < high;\n\t\t\t};\n\t\t} else {\n\t\t\treturn function (x) {\n\t\t\t\treturn low <= x && x < high;\n\t\t\t};\n\t\t}\n\t}\n\t\n\tfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\t\tvar xmap = xmapPair.ge;\n\t\tvar ymap = ymapPair.ge;\n\t\tvar ret = {};\n\t\n\t\tvar dataFilters = {};\n\t\n\t\tret.getXLineOffsets = function () {\n\t\t\treturn _.chain(xmap).values().sortBy().value();\n\t\t};\n\t\n\t\tret.getYLineOffsets = function () {\n\t\t\treturn _.chain(ymap).values().sortBy().value();\n\t\t};\n\t\n\t\tvar gentMode = 'nt';\n\t\tret.setGEvNTMode = function (mode) {\n\t\t\tgentMode = mode;\n\t\t\txmap = xmapPair[mode];\n\t\t\tymap = ymapPair[mode];\n\t\t\tret.notifyListeners('ge-v-nt-change');\n\t\t};\n\t\n\t\tret.getGEvNTMode = function () {\n\t\t\treturn gentMode;\n\t\t};\n\t\n\t\tret.setOrder = function (field, descending) {\n\t\t\tsyntenyDots = _.sortBy(syntenyDots, field);\n\t\t\tif (descending) {\n\t\t\t\tsyntenyDots.reverse();\n\t\t\t}\n\t\t\tret.notifyListeners('order-change');\n\t\t};\n\t\n\t\tret.getXLineNames = function () {\n\t\t\treturn filterMapForNames(xmap);\n\t\t};\n\t\n\t\tret.getYLineNames = function () {\n\t\t\treturn filterMapForNames(ymap);\n\t\t};\n\t\n\t\tfunction filterMapForNames(map) {\n\t\t\treturn _.chain(map).pairs().sortBy('1').pluck('0').reject(function (x) {\n\t\t\t\treturn x === 'total';\n\t\t\t}).value();\n\t\t}\n\t\n\t\tfunction getFilterFunction(filter) {\n\t\t\tvar filterFuncs = _.values(filter);\n\t\t\treturn function (x) {\n\t\t\t\treturn _.all(_.map(filterFuncs, function (f) {\n\t\t\t\t\treturn f(x);\n\t\t\t\t}));\n\t\t\t};\n\t\t}\n\t\n\t\tret.currentData = function currentData() {\n\t\t\treturn {\n\t\t\t\traw: syntenyDots,\n\t\t\t\tactive: _.filter(syntenyDots, getFilterFunction(dataFilters))\n\t\t\t};\n\t\t};\n\t\n\t\tvar sortedDots = _.memoize(_.partial(_.sortBy, syntenyDots));\n\t\tret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t\t\tvar filtersWithoutField = getFilterFunction(_.omit(dataFilters, field));\n\t\t\tvar validPoints = _.filter(sortedDots(field), filtersWithoutField);\n\t\t\tvar dx = ticks[1] - ticks[0];\n\t\n\t\t\treturn _.map(ticks, function (x) {\n\t\t\t\tvar hi = _.sortedIndex(validPoints, _defineProperty({}, field, x + dx), field);\n\t\t\t\tvar lo = _.sortedIndex(validPoints, _defineProperty({}, field, x), field);\n\t\t\t\treturn { x: x, dx: dx, y: hi - lo };\n\t\t\t});\n\t\t};\n\t\n\t\tret.addSpatialFilter = function (extents, typeHint) {\n\t\t\tdataFilters.spatial = function (dot) {\n\t\t\t\treturn dot.x_relative_offset >= extents[0][0] && dot.x_relative_offset <= extents[1][0] && dot.y_relative_offset >= extents[0][1] && dot.y_relative_offset <= extents[1][1];\n\t\t\t};\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.removeSpatialFilter = function (typeHint) {\n\t\t\tdelete dataFilters.spatial;\n\t\t\tret.notifyListeners(typeHint);\n\t\t};\n\t\n\t\tret.addDataFilter = function (extent, field, typeHint) {\n\t\t\tdataFilters[field] = between(extent[0], extent[1], field);\n\t\t\tret.notifyListeners(typeHint || 'data');\n\t\t};\n\t\n\t\tret.removeDataFilter = function (field) {\n\t\t\tdelete dataFilters[field];\n\t\t\tret.notifyListeners('data-stop');\n\t\t};\n\t\n\t\tvar listeners = [];\n\t\tret.addListener = function (x) {\n\t\t\tlisteners.push(x);\n\t\t};\n\t\n\t\tret.notifyListeners = function (typeOfChange) {\n\t\t\t_.each(listeners, function (x) {\n\t\t\t\tx(typeOfChange);\n\t\t\t});\n\t\t};\n\t\n\t\tif (TIME_DATA_OPERATIONS) {\n\t\t\tvar logIt = function logIt(f, name) {\n\t\t\t\treturn function () {\n\t\t\t\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\t\t\targs[_key] = arguments[_key];\n\t\t\t\t\t}\n\t\n\t\t\t\t\tvar start = Date.now();\n\t\t\t\t\tvar x = f.call.apply(f, [null].concat(args));\n\t\t\t\t\tconsole.log(name, Date.now() - start);\n\t\t\t\t\treturn x;\n\t\t\t\t};\n\t\t\t};\n\t\n\t\t\tret.currentData = logIt(ret.currentData, 'currentData');\n\t\t\tret.currentDataSummary = logIt(ret.currentDataSummary, 'currentDataSummary');\n\t\t\tret.notifyListeners = logIt(ret.notifyListeners, 'notifyListeners');\n\t\t}\n\t\n\t\tret.setOrder('logks', true);\n\t\tret.setGEvNTMode(gentMode);\n\t\treturn ret;\n\t}\n\t\n\t// We need to expose this to the outside world.\n\twindow.makeSyntenyDotPlot = exports.makeSyntenyDotPlot;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n\t * Build: `lodash modern -d -o ./index.js`\n\t * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t * Available under MIT license <https://lodash.com/license>\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '3.10.1';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256;\n\t\n\t  /** Used as default options for `_.trunc`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect when a function becomes hot. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      weakMapTag = '[object WeakMap]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t  /**\n\t   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n\t   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n\t   */\n\t  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n\t      reHasRegExpChars = RegExp(reRegExpChars.source);\n\t\n\t  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n\t  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0[xX]/;\n\t\n\t  /** Used to detect host constructors (Safari > 5). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^\\d+$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to match words to create compound words. */\n\t  var reWords = (function() {\n\t    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n\t        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\t\n\t    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n\t  }());\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n\t    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n\t    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\t  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\t  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\t  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\t  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n\t  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n\t  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n\t  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[mapTag] = cloneableTags[setTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to determine if values are of the language type `Object`. */\n\t  var objectTypes = {\n\t    'function': true,\n\t    'object': true\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled regexes. */\n\t  var regexpEscapes = {\n\t    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n\t    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n\t    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n\t    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n\t    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\t\n\t  /** Detect free variable `window`. */\n\t  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\t\n\t  /**\n\t   * Used as a reference to the global object.\n\t   *\n\t   * The `this` value is used if it's the global object to avoid Greasemonkey's\n\t   * restricted `window` object, otherwise the `window` object is used.\n\t   */\n\t  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * The base implementation of `compareAscending` which compares values and\n\t   * sorts them in ascending order without guaranteeing a stable sort.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to compare.\n\t   * @param {*} other The other value to compare.\n\t   * @returns {number} Returns the sort order indicator for `value`.\n\t   */\n\t  function baseCompareAscending(value, other) {\n\t    if (value !== other) {\n\t      var valIsNull = value === null,\n\t          valIsUndef = value === undefined,\n\t          valIsReflexive = value === value;\n\t\n\t      var othIsNull = other === null,\n\t          othIsUndef = other === undefined,\n\t          othIsReflexive = other === other;\n\t\n\t      if ((value > other && !othIsNull) || !valIsReflexive ||\n\t          (valIsNull && !othIsUndef && othIsReflexive) ||\n\t          (valIsUndef && othIsReflexive)) {\n\t        return 1;\n\t      }\n\t      if ((value < other && !valIsNull) || !othIsReflexive ||\n\t          (othIsNull && !valIsUndef && valIsReflexive) ||\n\t          (othIsUndef && valIsReflexive)) {\n\t        return -1;\n\t      }\n\t    }\n\t    return 0;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromRight) {\n\t    var length = array.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without support for binary searches.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isFunction` without support for environments\n\t   * with incorrect `typeof` results.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t   */\n\t  function baseIsFunction(value) {\n\t    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n\t    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n\t    return typeof value == 'function' || false;\n\t  }\n\t\n\t  /**\n\t   * Converts `value` to a string if it's not one. An empty string is returned\n\t   * for `null` or `undefined` values.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to process.\n\t   * @returns {string} Returns the string.\n\t   */\n\t  function baseToString(value) {\n\t    return value == null ? '' : (value + '');\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the first character not found in `chars`.\n\t   */\n\t  function charsLeftIndex(string, chars) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n\t   * of `string` that is not found in `chars`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @param {string} chars The characters to find.\n\t   * @returns {number} Returns the index of the last character not found in `chars`.\n\t   */\n\t  function charsRightIndex(string, chars) {\n\t    var index = string.length;\n\t\n\t    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n\t   * sort them in ascending order.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareAscending(object, other) {\n\t    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n\t   * and stable sort them.\n\t   *\n\t   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n\t   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n\t   * descending if \"desc\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to compare.\n\t   * @param {Object} other The other object to compare.\n\t   * @param {boolean[]} orders The order to sort by for each property.\n\t   * @returns {number} Returns the sort order indicator for `object`.\n\t   */\n\t  function compareMultiple(object, other, orders) {\n\t    var index = -1,\n\t        objCriteria = object.criteria,\n\t        othCriteria = other.criteria,\n\t        length = objCriteria.length,\n\t        ordersLength = orders.length;\n\t\n\t    while (++index < length) {\n\t      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n\t      if (result) {\n\t        if (index >= ordersLength) {\n\t          return result;\n\t        }\n\t        var order = orders[index];\n\t        return result * ((order === 'asc' || order === true) ? 1 : -1);\n\t      }\n\t    }\n\t    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t    // that causes it, under certain circumstances, to provide the same value for\n\t    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t    // for more details.\n\t    //\n\t    // This also ensures a stable sort in V8 and other engines.\n\t    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n\t    return object.index - other.index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @param {string} leadingChar The capture group for a leading character.\n\t   * @param {string} whitespaceChar The capture group for a whitespace character.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n\t    if (leadingChar) {\n\t      chr = regexpEscapes[chr];\n\t    } else if (whitespaceChar) {\n\t      chr = stringEscapes[chr];\n\t    }\n\t    return '\\\\' + chr;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 0 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is object-like.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t   */\n\t  function isObjectLike(value) {\n\t    return !!value && typeof value == 'object';\n\t  }\n\t\n\t  /**\n\t   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n\t   * character code is whitespace.\n\t   *\n\t   * @private\n\t   * @param {number} charCode The character code to inspect.\n\t   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n\t   */\n\t  function isSpace(charCode) {\n\t    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n\t      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      if (array[index] === placeholder) {\n\t        array[index] = PLACEHOLDER;\n\t        result[++resIndex] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * An implementation of `_.uniq` optimized for sorted arrays without support\n\t   * for callback shorthands and `this` binding.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} [iteratee] The function invoked per iteration.\n\t   * @returns {Array} Returns the new duplicate-value-free array.\n\t   */\n\t  function sortedUniq(array, iteratee) {\n\t    var seen,\n\t        index = -1,\n\t        length = array.length,\n\t        resIndex = -1,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index],\n\t          computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t      if (!index || seen !== computed) {\n\t        seen = computed;\n\t        result[++resIndex] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the first non-whitespace character.\n\t   */\n\t  function trimmedLeftIndex(string) {\n\t    var index = -1,\n\t        length = string.length;\n\t\n\t    while (++index < length && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n\t   * character of `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the index of the last non-whitespace character.\n\t   */\n\t  function trimmedRightIndex(string) {\n\t    var index = string.length;\n\t\n\t    while (index-- && isSpace(string.charCodeAt(index))) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the given `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @category Utility\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // using `context` to mock `Date#getTime` use in `_.now`\n\t   * var mock = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': getTimeMock };\n\t   *   }\n\t   * });\n\t   *\n\t   * // or creating a suped-up `defer` in Node.js\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    // Avoid issues with some ES3 environments that attempt to use values, named\n\t    // after built-in constructors like `Object`, for the creation of literals.\n\t    // ES5 clears this up by stating that literals must use built-in constructors.\n\t    // See https://es5.github.io/#x11.1.5 for more details.\n\t    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Native constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Number = context.Number,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for native method references. */\n\t    var arrayProto = Array.prototype,\n\t        objectProto = Object.prototype,\n\t        stringProto = String.prototype;\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var fnToString = Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /**\n\t     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Native method references. */\n\t    var ArrayBuffer = context.ArrayBuffer,\n\t        clearTimeout = context.clearTimeout,\n\t        parseFloat = context.parseFloat,\n\t        pow = Math.pow,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        Set = getNative(context, 'Set'),\n\t        setTimeout = context.setTimeout,\n\t        splice = arrayProto.splice,\n\t        Uint8Array = context.Uint8Array,\n\t        WeakMap = getNative(context, 'WeakMap');\n\t\n\t    /* Native method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeCreate = getNative(Object, 'create'),\n\t        nativeFloor = Math.floor,\n\t        nativeIsArray = getNative(Array, 'isArray'),\n\t        nativeIsFinite = context.isFinite,\n\t        nativeKeys = getNative(Object, 'keys'),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = getNative(Date, 'now'),\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random;\n\t\n\t    /** Used as references for `-Infinity` and `Infinity`. */\n\t    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n\t        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\t\n\t    /** Used as references for the maximum length and index of an array. */\n\t    var MAX_ARRAY_LENGTH = 4294967295,\n\t        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t    /**\n\t     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t     * of an array-like value.\n\t     */\n\t    var MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n\t     * Methods that operate on and return arrays, collections, and functions can\n\t     * be chained together. Methods that retrieve a single value or may return a\n\t     * primitive value will automatically end the chain returning the unwrapped\n\t     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n\t     * chained methods is lazy, that is, execution is deferred until `_#value`\n\t     * is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n\t     * fusion is an optimization strategy which merge iteratee calls; this can help\n\t     * to avoid the creation of intermediate data structures and greatly reduce the\n\t     * number of iteratee executions.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n\t     * `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n\t     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n\t     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n\t     * and `where`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n\t     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n\t     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n\t     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n\t     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n\t     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n\t     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n\t     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n\t     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n\t     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n\t     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n\t     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n\t     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n\t     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n\t     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n\t     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n\t     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n\t     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n\t     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n\t     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n\t     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n\t     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n\t     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n\t     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n\t     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n\t     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n\t     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n\t     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n\t     * `unescape`, `uniqueId`, `value`, and `words`\n\t     *\n\t     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n\t     * otherwise an unwrapped value is returned.\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Chain\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // returns an unwrapped value\n\t     * wrapped.reduce(function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 6\n\t     *\n\t     * // returns a wrapped value\n\t     * var squares = wrapped.map(function(n) {\n\t     *   return n * n;\n\t     * });\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype all chaining wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n\t     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n\t     */\n\t    function LodashWrapper(value, chainAll, actions) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = actions || [];\n\t      this.__chain__ = !!chainAll;\n\t    }\n\t\n\t    /**\n\t     * An object environment feature flags.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    var support = lodash.support = {};\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type Object\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type RegExp\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type string\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type Object\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type Function\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = POSITIVE_INFINITY;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = arrayCopy(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = arrayCopy(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = arrayCopy(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a cache object to store key/value pairs.\n\t     *\n\t     * @private\n\t     * @static\n\t     * @name Cache\n\t     * @memberOf _.memoize\n\t     */\n\t    function MapCache() {\n\t      this.__data__ = {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n\t     */\n\t    function mapDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the cached value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the cached value.\n\t     */\n\t    function mapGet(key) {\n\t      return key == '__proto__' ? undefined : this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Checks if a cached value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapHas(key) {\n\t      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n\t    }\n\t\n\t    /**\n\t     * Sets `value` to `key` of the cache.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf _.memoize.Cache\n\t     * @param {string} key The key of the value to cache.\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache object.\n\t     */\n\t    function mapSet(key, value) {\n\t      if (key != '__proto__') {\n\t        this.__data__[key] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates a cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var length = values ? values.length : 0;\n\t\n\t      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n\t      while (length--) {\n\t        this.push(values[length]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in `cache` mimicking the return signature of\n\t     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n\t     *\n\t     * @private\n\t     * @param {Object} cache The cache to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `0` if `value` is found, else `-1`.\n\t     */\n\t    function cacheIndexOf(cache, value) {\n\t      var data = cache.data,\n\t          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\t\n\t      return result ? 0 : -1;\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the cache.\n\t     *\n\t     * @private\n\t     * @name push\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to cache.\n\t     */\n\t    function cachePush(value) {\n\t      var data = this.data;\n\t      if (typeof value == 'string' || isObject(value)) {\n\t        data.set.add(value);\n\t      } else {\n\t        data.hash[value] = true;\n\t      }\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a new array joining `array` with `other`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to join.\n\t     * @param {Array} other The other array to join.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     */\n\t    function arrayConcat(array, other) {\n\t      var index = -1,\n\t          length = array.length,\n\t          othIndex = -1,\n\t          othLength = other.length,\n\t          result = Array(length + othLength);\n\t\n\t      while (++index < length) {\n\t        result[index] = array[index];\n\t      }\n\t      while (++othIndex < othLength) {\n\t        result[index++] = other[othIndex];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayCopy(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEach` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEach(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (iteratee(array[index], index, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.forEachRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayEachRight(array, iteratee) {\n\t      var length = array.length;\n\t\n\t      while (length--) {\n\t        if (iteratee(array[length], length, array) === false) {\n\t          break;\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.every` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arrayEvery(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (!predicate(array[index], index, array)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n\t     * with one argument: (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function arrayExtremum(array, iteratee, comparator, exValue) {\n\t      var index = -1,\n\t          length = array.length,\n\t          computed = exValue,\n\t          result = computed;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = +iteratee(value);\n\t\n\t        if (comparator(current, computed)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.filter` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function arrayFilter(array, predicate) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.map` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function arrayMap(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = iteratee(array[index], index, array);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Appends the elements of `values` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to append.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function arrayPush(array, values) {\n\t      var index = -1,\n\t          length = values.length,\n\t          offset = array.length;\n\t\n\t      while (++index < length) {\n\t        array[offset + index] = values[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduce` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the first element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (initFromArray && length) {\n\t        accumulator = array[++index];\n\t      }\n\t      while (++index < length) {\n\t        accumulator = iteratee(accumulator, array[index], index, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.reduceRight` for arrays without support for\n\t     * callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {boolean} [initFromArray] Specify using the last element of `array`\n\t     *  as the initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n\t      var length = array.length;\n\t      if (initFromArray && length) {\n\t        accumulator = array[--length];\n\t      }\n\t      while (length--) {\n\t        accumulator = iteratee(accumulator, array[length], length, array);\n\t      }\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.some` for arrays without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function arraySome(array, predicate) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        if (predicate(array[index], index, array)) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sum` for arrays without support for callback\n\t     * shorthands and `this` binding..\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function arraySum(array, iteratee) {\n\t      var length = array.length,\n\t          result = 0;\n\t\n\t      while (length--) {\n\t        result += +iteratee(array[length]) || 0;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assign` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : objectValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.template` to customize its `_.assign` use.\n\t     *\n\t     * **Note:** This function is like `assignDefaults` except that it ignores\n\t     * inherited property values when checking if a property is `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @param {string} key The key associated with the object and source values.\n\t     * @param {Object} object The destination object.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n\t      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n\t        ? sourceValue\n\t        : objectValue;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.assign` for customizing assigned values without\n\t     * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t     * functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function assignWith(object, source, customizer) {\n\t      var index = -1,\n\t          props = keys(source),\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key],\n\t            result = customizer(value, source[key], key, object, source);\n\t\n\t        if ((result === result ? (result !== value) : (value === value)) ||\n\t            (value === undefined && !(key in object))) {\n\t          object[key] = result;\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for argument juggling,\n\t     * multiple sources, and `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return source == null\n\t        ? object\n\t        : baseCopy(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for string collections\n\t     * and individual key arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     */\n\t    function baseAt(collection, props) {\n\t      var index = -1,\n\t          isNil = collection == null,\n\t          isArr = !isNil && isArrayLike(collection),\n\t          length = isArr ? collection.length : 0,\n\t          propsLength = props.length,\n\t          result = Array(propsLength);\n\t\n\t      while(++index < propsLength) {\n\t        var key = props[index];\n\t        if (isArr) {\n\t          result[index] = isIndex(key, length) ? collection[key] : undefined;\n\t        } else {\n\t          result[index] = isNil ? undefined : collection[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property names to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseCopy(source, props, object) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        object[key] = source[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.callback` which supports specifying the\n\t     * number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function baseCallback(func, thisArg, argCount) {\n\t      var type = typeof func;\n\t      if (type == 'function') {\n\t        return thisArg === undefined\n\t          ? func\n\t          : bindCallback(func, thisArg, argCount);\n\t      }\n\t      if (func == null) {\n\t        return identity;\n\t      }\n\t      if (type == 'object') {\n\t        return baseMatches(func);\n\t      }\n\t      return thisArg === undefined\n\t        ? property(func)\n\t        : baseMatchesProperty(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` without support for argument juggling\n\t     * and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The object `value` belongs to.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return arrayCopy(value, result);\n\t        }\n\t      } else {\n\t        var tag = objToString.call(value),\n\t            isFunc = tag == funcTag;\n\t\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return baseAssign(result, value);\n\t          }\n\t        } else {\n\t          return cloneableTags[tag]\n\t            ? initCloneByTag(value, tag, isDeep)\n\t            : (object ? value : {});\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == value) {\n\t          return stackB[length];\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate it with its clone.\n\t      stackA.push(value);\n\t      stackB.push(result);\n\t\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n\t        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(prototype) {\n\t        if (isObject(prototype)) {\n\t          object.prototype = prototype;\n\t          var result = new object;\n\t          object.prototype = undefined;\n\t        }\n\t        return result || {};\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an index\n\t     * of where to slice the arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.difference` which accepts a single array\n\t     * of values to exclude.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values) {\n\t      var length = array ? array.length : 0,\n\t          result = [];\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n\t          valuesLength = values.length;\n\t\n\t      if (cache) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t        values = cache;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index];\n\t\n\t        if (isCommon && value === value) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === value) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(values, value, 0) < 0) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the extremum value of `collection` invoking `iteratee` for each value\n\t     * in `collection` to generate the criterion by which the value is ranked.\n\t     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(collection, iteratee, comparator, exValue) {\n\t      var computed = exValue,\n\t          result = computed;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        var current = +iteratee(value, index, collection);\n\t        if (comparator(current, computed) || (current === exValue && current === result)) {\n\t          computed = current;\n\t          result = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : (end >>> 0);\n\t      start >>>= 0;\n\t\n\t      while (start < length) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t     * without support for callback shorthands and `this` binding, which iterates\n\t     * over `collection` using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @param {boolean} [retKey] Specify returning the key of the found element\n\t     *  instead of the element itself.\n\t     * @returns {*} Returns the found element or its key, else `undefined`.\n\t     */\n\t    function baseFind(collection, predicate, eachFunc, retKey) {\n\t      var result;\n\t      eachFunc(collection, function(value, key, collection) {\n\t        if (predicate(value, key, collection)) {\n\t          result = retKey ? key : value;\n\t          return false;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with added support for restricting\n\t     * flattening and specifying the start index.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, isDeep, isStrict, result) {\n\t      result || (result = []);\n\t\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (isObjectLike(value) && isArrayLike(value) &&\n\t            (isStrict || isArray(value) || isArguments(value))) {\n\t          if (isDeep) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, isDeep, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t     * each property. Iteratee functions may exit iteration early by explicitly\n\t     * returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forIn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForIn(object, iteratee) {\n\t      return baseFor(object, iteratee, keysIn);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from those provided.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the new array of filtered property names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (isFunction(object[key])) {\n\t          result[++resIndex] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `get` without support for string paths\n\t     * and default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path of the property to get.\n\t     * @param {string} [pathKey] The key representation of path.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path, pathKey) {\n\t      if (object == null) {\n\t        return;\n\t      }\n\t      if (pathKey !== undefined && pathKey in toObject(object)) {\n\t        path = [pathKey];\n\t      }\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[path[index++]];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` without support for `this` binding\n\t     * `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = objToString.call(object);\n\t        if (objTag == argsTag) {\n\t          objTag = objectTag;\n\t        } else if (objTag != objectTag) {\n\t          objIsArr = isTypedArray(object);\n\t        }\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = objToString.call(other);\n\t        if (othTag == argsTag) {\n\t          othTag = objectTag;\n\t        } else if (othTag != objectTag) {\n\t          othIsArr = isTypedArray(other);\n\t        }\n\t      }\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !(objIsArr || objIsObj)) {\n\t        return equalByTag(object, other, objTag);\n\t      }\n\t      if (!isLoose) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      // For more information on detecting circular references see https://es5.github.io/#JO.\n\t      stackA || (stackA = []);\n\t      stackB || (stackB = []);\n\t\n\t      var length = stackA.length;\n\t      while (length--) {\n\t        if (stackA[length] == object) {\n\t          return stackB[length] == other;\n\t        }\n\t      }\n\t      // Add `object` and `other` to the stack of traversed objects.\n\t      stackA.push(object);\n\t      stackB.push(other);\n\t\n\t      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t      stackA.pop();\n\t      stackB.pop();\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for callback\n\t     * shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} matchData The propery names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparing objects.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = toObject(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which does not clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        var key = matchData[0][0],\n\t            value = matchData[0][1];\n\t\n\t        return function(object) {\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t        };\n\t      }\n\t      return function(object) {\n\t        return baseIsMatch(object, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to compare.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      var isArr = isArray(path),\n\t          isCommon = isKey(path) && isStrictComparable(srcValue),\n\t          pathKey = (path + '');\n\t\n\t      path = toPath(path);\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        var key = pathKey;\n\t        object = toObject(object);\n\t        if ((isArr || !isCommon) && !(key in object)) {\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          if (object == null) {\n\t            return false;\n\t          }\n\t          key = last(path);\n\t          object = toObject(object);\n\t        }\n\t        return object[key] === srcValue\n\t          ? (srcValue !== undefined || (key in object))\n\t          : baseIsEqual(srcValue, object[key], undefined, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for argument juggling,\n\t     * multiple sources, and `this` binding `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseMerge(object, source, customizer, stackA, stackB) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n\t          props = isSrcArr ? undefined : keys(source);\n\t\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObjectLike(srcValue)) {\n\t          stackA || (stackA = []);\n\t          stackB || (stackB = []);\n\t          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n\t        }\n\t        else {\n\t          var value = object[key],\n\t              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t              isCommon = result === undefined;\n\t\n\t          if (isCommon) {\n\t            result = srcValue;\n\t          }\n\t          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n\t              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n\t            object[key] = result;\n\t          }\n\t        }\n\t      });\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Array} [stackA=[]] Tracks traversed source objects.\n\t     * @param {Array} [stackB=[]] Associates values with source counterparts.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n\t      var length = stackA.length,\n\t          srcValue = source[key];\n\t\n\t      while (length--) {\n\t        if (stackA[length] == srcValue) {\n\t          object[key] = stackB[length];\n\t          return;\n\t        }\n\t      }\n\t      var value = object[key],\n\t          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n\t          isCommon = result === undefined;\n\t\n\t      if (isCommon) {\n\t        result = srcValue;\n\t        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n\t          result = isArray(value)\n\t            ? value\n\t            : (isArrayLike(value) ? arrayCopy(value) : []);\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          result = isArguments(value)\n\t            ? toPlainObject(value)\n\t            : (isPlainObject(value) ? value : {});\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      // Add the source value to the stack of traversed objects and associate\n\t      // it with its merged value.\n\t      stackA.push(srcValue);\n\t      stackB.push(result);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n\t      } else if (result === result ? (result !== value) : (value === value)) {\n\t        object[key] = result;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      var pathKey = (path + '');\n\t      path = toPath(path);\n\t      return function(object) {\n\t        return baseGet(object, path, pathKey);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * index arguments and capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0;\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (index != previous && isIndex(index)) {\n\t          var previous = index;\n\t          splice.call(array, index, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for argument juggling\n\t     * and returning floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} min The minimum possible value.\n\t     * @param {number} max The maximum possible value.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(min, max) {\n\t      return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.reduce` and `_.reduceRight` without support\n\t     * for callback shorthands and `this` binding, which iterates over `collection`\n\t     * using the provided `eachFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {*} accumulator The initial value.\n\t     * @param {boolean} initFromCollection Specify using the first or last element\n\t     *  of `collection` as the initial value.\n\t     * @param {Function} eachFunc The function to iterate over `collection`.\n\t     * @returns {*} Returns the accumulated value.\n\t     */\n\t    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n\t      eachFunc(collection, function(value, index, collection) {\n\t        accumulator = initFromCollection\n\t          ? (initFromCollection = false, value)\n\t          : iteratee(accumulator, value, index, collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      start = start == null ? 0 : (+start || 0);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : (+end || 0);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortBy` which uses `comparer` to define\n\t     * the sort order of `array` and replaces criteria objects with their\n\t     * corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sort.\n\t     * @param {Function} comparer The function to define sort order.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseSortBy(array, comparer) {\n\t      var length = array.length;\n\t\n\t      array.sort(comparer);\n\t      while (length--) {\n\t        array[length] = array[length].value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortByOrder` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseSortByOrder(collection, iteratees, orders) {\n\t      var callback = getCallback(),\n\t          index = -1;\n\t\n\t      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\t\n\t      var result = baseMap(collection, function(value) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sum` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {number} Returns the sum.\n\t     */\n\t    function baseSum(collection, iteratee) {\n\t      var result = 0;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result += +iteratee(value, index, collection) || 0;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniq` without support for callback shorthands\n\t     * and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The function invoked per iteration.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     */\n\t    function baseUniq(array, iteratee) {\n\t      var index = -1,\n\t          indexOf = getIndexOf(),\n\t          length = array.length,\n\t          isCommon = indexOf == baseIndexOf,\n\t          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n\t          seen = isLarge ? createCache() : null,\n\t          result = [];\n\t\n\t      if (seen) {\n\t        indexOf = cacheIndexOf;\n\t        isCommon = false;\n\t      } else {\n\t        isLarge = false;\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value, index, array) : value;\n\t\n\t        if (isCommon && value === value) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (indexOf(seen, computed, 0) < 0) {\n\t          if (iteratee || isLarge) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t     * array of `object` property values corresponding to the property names\n\t     * of `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} props The property names to get values for.\n\t     * @returns {Object} Returns the array of property values.\n\t     */\n\t    function baseValues(object, props) {\n\t      var index = -1,\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = object[props[index]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n\t     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      var index = -1,\n\t          length = actions.length;\n\t\n\t      while (++index < length) {\n\t        var action = actions[index];\n\t        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return binaryIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * This function is like `binaryIndex` except that it invokes `iteratee` for\n\t     * `value` and each element of `array` to compute their sort ranking. The\n\t     * iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function binaryIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsUndef = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            isDef = computed !== undefined,\n\t            isReflexive = computed === computed;\n\t\n\t        if (valIsNaN) {\n\t          var setLow = isReflexive || retHighest;\n\t        } else if (valIsNull) {\n\t          setLow = isReflexive && isDef && (retHighest || computed != null);\n\t        } else if (valIsUndef) {\n\t          setLow = isReflexive && (retHighest || isDef);\n\t        } else if (computed == null) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseCallback` which only supports `this` binding\n\t     * and specifying the number of arguments to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {number} [argCount] The number of arguments to provide to `func`.\n\t     * @returns {Function} Returns the callback.\n\t     */\n\t    function bindCallback(func, thisArg, argCount) {\n\t      if (typeof func != 'function') {\n\t        return identity;\n\t      }\n\t      if (thisArg === undefined) {\n\t        return func;\n\t      }\n\t      switch (argCount) {\n\t        case 1: return function(value) {\n\t          return func.call(thisArg, value);\n\t        };\n\t        case 3: return function(value, index, collection) {\n\t          return func.call(thisArg, value, index, collection);\n\t        };\n\t        case 4: return function(accumulator, value, index, collection) {\n\t          return func.call(thisArg, accumulator, value, index, collection);\n\t        };\n\t        case 5: return function(value, other, key, object, source) {\n\t          return func.call(thisArg, value, other, key, object, source);\n\t        };\n\t      }\n\t      return function() {\n\t        return func.apply(thisArg, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the given array buffer.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} buffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function bufferClone(buffer) {\n\t      var result = new ArrayBuffer(buffer.byteLength),\n\t          view = new Uint8Array(result);\n\t\n\t      view.set(new Uint8Array(buffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders) {\n\t      var holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          result = Array(leftLength + argsLength);\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        result[holders[argsIndex]] = args[argsIndex];\n\t      }\n\t      while (argsLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders) {\n\t      var holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          argsIndex = -1,\n\t          argsLength = nativeMax(args.length - holdersLength, 0),\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          result = Array(argsLength + rightLength);\n\t\n\t      while (++argsIndex < argsLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set keys and values of the accumulator object.\n\t     * @param {Function} [initializer] The function to initialize the accumulator object.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee, thisArg) {\n\t        var result = initializer ? initializer() : {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        if (isArray(collection)) {\n\t          var index = -1,\n\t              length = collection.length;\n\t\n\t          while (++index < length) {\n\t            var value = collection[index];\n\t            setter(result, value, iteratee(value, index, collection), collection);\n\t          }\n\t        } else {\n\t          baseEach(collection, function(value, key, collection) {\n\t            setter(result, value, iteratee(value, key, collection), collection);\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return restParam(function(object, sources) {\n\t        var index = -1,\n\t            length = object == null ? 0 : sources.length,\n\t            customizer = length > 2 ? sources[length - 2] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined,\n\t            thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t        if (typeof customizer == 'function') {\n\t          customizer = bindCallback(customizer, thisArg, 5);\n\t          length -= 2;\n\t        } else {\n\t          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t          length -= (customizer ? 1 : 0);\n\t        }\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        var length = collection ? getLength(collection) : 0;\n\t        if (!isLength(length)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var index = fromRight ? length : -1,\n\t            iterable = toObject(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var iterable = toObject(object),\n\t            props = keysFunc(object),\n\t            length = props.length,\n\t            index = fromRight ? length : -1;\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var key = props[index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createBindWrapper(func, thisArg) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(thisArg, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `Set` cache object to optimize linear searches of large arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} [values] The values to cache.\n\t     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n\t     */\n\t    function createCache(values) {\n\t      return (nativeCreate && Set) ? new SetCache(values) : null;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces compound words out of the words in a\n\t     * given string.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        var index = -1,\n\t            array = words(deburr(string)),\n\t            length = array.length,\n\t            result = '';\n\t\n\t        while (++index < length) {\n\t          result = callback(result, array[index], index);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors.\n\t        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.curry` or `_.curryRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The curry bit flag.\n\t     * @returns {Function} Returns the new curry function.\n\t     */\n\t    function createCurry(flag) {\n\t      function curryFunc(func, arity, guard) {\n\t        if (guard && isIterateeCall(func, arity, guard)) {\n\t          arity = undefined;\n\t        }\n\t        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n\t        result.placeholder = curryFunc.placeholder;\n\t        return result;\n\t      }\n\t      return curryFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.defaults` or `_.defaultsDeep` function.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Function} Returns the new defaults function.\n\t     */\n\t    function createDefaults(assigner, customizer) {\n\t      return restParam(function(args) {\n\t        var object = args[0];\n\t        if (object == null) {\n\t          return object;\n\t        }\n\t        args.push(customizer);\n\t        return assigner.apply(undefined, args);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.max` or `_.min` function.\n\t     *\n\t     * @private\n\t     * @param {Function} comparator The function used to compare values.\n\t     * @param {*} exValue The initial extremum value.\n\t     * @returns {Function} Returns the new extremum function.\n\t     */\n\t    function createExtremum(comparator, exValue) {\n\t      return function(collection, iteratee, thisArg) {\n\t        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t          iteratee = undefined;\n\t        }\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t        if (iteratee.length == 1) {\n\t          collection = isArray(collection) ? collection : toIterable(collection);\n\t          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n\t          if (!(collection.length && result === exValue)) {\n\t            return result;\n\t          }\n\t        }\n\t        return baseExtremum(collection, iteratee, comparator, exValue);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(eachFunc, fromRight) {\n\t      return function(collection, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        if (isArray(collection)) {\n\t          var index = baseFindIndex(collection, predicate, fromRight);\n\t          return index > -1 ? collection[index] : undefined;\n\t        }\n\t        return baseFind(collection, predicate, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findIndex` or `_.findLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindIndex(fromRight) {\n\t      return function(array, predicate, thisArg) {\n\t        if (!(array && array.length)) {\n\t          return -1;\n\t        }\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFindIndex(array, predicate, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.findKey` or `_.findLastKey` function.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFindKey(objectFunc) {\n\t      return function(object, predicate, thisArg) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t        return baseFind(object, predicate, objectFunc, true);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return function() {\n\t        var wrapper,\n\t            length = arguments.length,\n\t            index = fromRight ? length : -1,\n\t            leftIndex = 0,\n\t            funcs = Array(length);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          var func = funcs[leftIndex++] = arguments[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n\t            wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? -1 : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forEach` or `_.forEachRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForEach(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, thisArg) {\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee)\n\t          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forIn` or `_.forInRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForIn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee, keysIn);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} objectFunc The function to iterate over an object.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createForOwn(objectFunc) {\n\t      return function(object, iteratee, thisArg) {\n\t        if (typeof iteratee != 'function' || thisArg !== undefined) {\n\t          iteratee = bindCallback(iteratee, thisArg, 3);\n\t        }\n\t        return objectFunc(object, iteratee);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.mapKeys` or `_.mapValues`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n\t     * @returns {Function} Returns the new map function.\n\t     */\n\t    function createObjectMapper(isMapKeys) {\n\t      return function(object, iteratee, thisArg) {\n\t        var result = {};\n\t        iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t        baseForOwn(object, function(value, key, object) {\n\t          var mapped = iteratee(value, key, object);\n\t          key = isMapKeys ? mapped : key;\n\t          value = isMapKeys ? value : mapped;\n\t          result[key] = value;\n\t        });\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.padLeft` or `_.padRight`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify padding from the right.\n\t     * @returns {Function} Returns the new pad function.\n\t     */\n\t    function createPadDir(fromRight) {\n\t      return function(string, length, chars) {\n\t        string = baseToString(string);\n\t        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.partial` or `_.partialRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} flag The partial bit flag.\n\t     * @returns {Function} Returns the new partial function.\n\t     */\n\t    function createPartial(flag) {\n\t      var partialFunc = restParam(function(func, partials) {\n\t        var holders = replaceHolders(partials, partialFunc.placeholder);\n\t        return createWrapper(func, flag, undefined, partials, holders);\n\t      });\n\t      return partialFunc;\n\t    }\n\t\n\t    /**\n\t     * Creates a function for `_.reduce` or `_.reduceRight`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over an array.\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @returns {Function} Returns the new each function.\n\t     */\n\t    function createReduce(arrayFunc, eachFunc) {\n\t      return function(collection, iteratee, accumulator, thisArg) {\n\t        var initFromArray = arguments.length < 3;\n\t        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n\t          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n\t          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with optional `this`\n\t     * binding of, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurry = bitmask & CURRY_FLAG,\n\t          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n\t          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it to other functions.\n\t        var length = arguments.length,\n\t            index = length,\n\t            args = Array(length);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight);\n\t        }\n\t        if (isCurry || isCurryRight) {\n\t          var placeholder = wrapper.placeholder,\n\t              argsHolders = replaceHolders(args, placeholder);\n\t\n\t          length -= argsHolders.length;\n\t          if (length < arity) {\n\t            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n\t                newArity = nativeMax(arity - length, 0),\n\t                newsHolders = isCurry ? argsHolders : undefined,\n\t                newHoldersRight = isCurry ? undefined : argsHolders,\n\t                newPartials = isCurry ? args : undefined,\n\t                newPartialsRight = isCurry ? undefined : args;\n\t\n\t            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t            if (!isCurryBound) {\n\t              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t            }\n\t            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n\t                result = createHybridWrapper.apply(undefined, newData);\n\t\n\t            if (isLaziable(func)) {\n\t              setData(result, newData);\n\t            }\n\t            result.placeholder = placeholder;\n\t            return result;\n\t          }\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        }\n\t        if (isAry && ary < args.length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(func);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates the padding required for `string` based on the given `length`.\n\t     * The `chars` string is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to create padding for.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the pad for `string`.\n\t     */\n\t    function createPadding(string, length, chars) {\n\t      var strLength = string.length;\n\t      length = +length;\n\t\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return '';\n\t      }\n\t      var padLength = length - strLength;\n\t      chars = chars == null ? ' ' : (chars + '');\n\t      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` and invokes it with the optional `this`\n\t     * binding of `thisArg` and the `partials` prepended to those provided to\n\t     * the wrapper.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to the new function.\n\t     * @returns {Function} Returns the new bound function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        // Avoid `arguments` object use disqualifying optimizations by\n\t        // converting it to an array before providing it `func`.\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength);\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        precision = precision === undefined ? 0 : (+precision || 0);\n\t        if (precision) {\n\t          precision = pow(10, precision);\n\t          return func(number * precision) / precision;\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {Function} Returns the new index function.\n\t     */\n\t    function createSortedIndex(retHighest) {\n\t      return function(array, value, iteratee, thisArg) {\n\t        var callback = getCallback(iteratee);\n\t        return (iteratee == null && callback === baseCallback)\n\t          ? binaryIndex(array, value, retHighest)\n\t          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to reference.\n\t     * @param {number} bitmask The bitmask of flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      length -= (holders ? holders.length : 0);\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func),\n\t          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t        bitmask = newData[1];\n\t        arity = newData[9];\n\t      }\n\t      newData[9] = arity == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : (nativeMax(arity - length, 0) || 0);\n\t\n\t      if (bitmask == BIND_FLAG) {\n\t        var result = createBindWrapper(newData[0], newData[2]);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n\t        result = createPartialWrapper.apply(undefined, newData);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing arrays.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var index = -1,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index],\n\t            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t        if (result !== undefined) {\n\t          if (result) {\n\t            continue;\n\t          }\n\t          return false;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (isLoose) {\n\t          if (!arraySome(other, function(othValue) {\n\t                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t              })) {\n\t            return false;\n\t          }\n\t        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag) {\n\t      switch (tag) {\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object)\n\t            ? other != +other\n\t            : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings primitives and string\n\t          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t          return object == (other + '');\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparing values.\n\t     * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t     * @param {Array} [stackA] Tracks traversed `value` objects.\n\t     * @param {Array} [stackB] Tracks traversed `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t      var objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isLoose) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      var skipCtor = isLoose;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key],\n\t            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t          return false;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (!skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseCallback` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getCallback(func, thisArg, argCount) {\n\t      var result = lodash.callback || callback;\n\t      result = result === callback ? baseCallback : result;\n\t      return argCount ? result(func, thisArg, argCount) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = func.name,\n\t          array = realNames[result],\n\t          length = array ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n\t     * customized this function returns the custom method, otherwise it returns\n\t     * the `baseIndexOf` function. If arguments are provided the chosen function\n\t     * is invoked with them and its result is returned.\n\t     *\n\t     * @private\n\t     * @returns {Function|number} Returns the chosen function or its result.\n\t     */\n\t    function getIndexOf(collection, target, fromIndex) {\n\t      var result = lodash.indexOf || indexOf;\n\t      result = result === indexOf ? baseIndexOf : result;\n\t      return collection ? result(collection, target, fromIndex) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the propery names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = pairs(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        result[length][2] = isStrictComparable(result[length][1]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = object == null ? undefined : object[key];\n\t      return isNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add array properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      var Ctor = object.constructor;\n\t      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n\t        Ctor = Object;\n\t      }\n\t      return new Ctor;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return bufferClone(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          var buffer = object.buffer;\n\t          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          var result = new Ctor(object.source, reFlags.exec(object));\n\t          result.lastIndex = object.lastIndex;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function invokePath(object, path, args) {\n\t      if (object != null && !isKey(path, object)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[path];\n\t      return func == null ? undefined : func.apply(object, args);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return value > -1 && value % 1 == 0 && value < length;\n\t    }\n\t\n\t    /**\n\t     * Checks if the provided arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t          ? (isArrayLike(object) && isIndex(index, object.length))\n\t          : (type == 'string' && index in object)) {\n\t        var other = object[index];\n\t        return value === value ? (value === other) : (other !== other);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      var type = typeof value;\n\t      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t        return true;\n\t      }\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var result = !reIsDeepProp.test(value);\n\t      return result || (object != null && value in toObject(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func);\n\t      if (!(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      var other = lodash[funcName];\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers required to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n\t     * augment function arguments, making the order in which they are executed important,\n\t     * preventing the merging of metadata. However, we make an exception for a safe\n\t     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < ARY_FLAG;\n\t\n\t      var isCombo =\n\t        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n\t        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n\t        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = arrayCopy(value);\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objectValue The destination object property value.\n\t     * @param {*} sourceValue The source object property value.\n\t     * @returns {*} Returns the value to assign to the destination object.\n\t     */\n\t    function mergeDefaults(objectValue, sourceValue) {\n\t      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties specified\n\t     * by `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property names to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByArray(object, props) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.pick` which picks `object` properties `predicate`\n\t     * returns truthy for.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function pickByCallback(object, predicate) {\n\t      var result = {};\n\t      baseForIn(object, function(value, key, object) {\n\t        if (predicate(value, key, object)) {\n\t          result[key] = value;\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = arrayCopy(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity function\n\t     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * A fallback implementation of `Object.keys` which creates an array of the\n\t     * own enumerable property names of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function shimKeys(object) {\n\t      var props = keysIn(object),\n\t          propsLength = props.length,\n\t          length = propsLength && object.length;\n\t\n\t      var allowIndexes = !!length && isLength(length) &&\n\t        (isArray(object) || isArguments(object));\n\t\n\t      var index = -1,\n\t          result = [];\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array-like object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array|Object} Returns the array-like object.\n\t     */\n\t    function toIterable(value) {\n\t      if (value == null) {\n\t        return [];\n\t      }\n\t      if (!isArrayLike(value)) {\n\t        return values(value);\n\t      }\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an object if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Object} Returns the object.\n\t     */\n\t    function toObject(value) {\n\t      return isObject(value) ? value : Object(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to property path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      var result = [];\n\t      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      return wrapper instanceof LazyWrapper\n\t        ? wrapper.clone()\n\t        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `collection` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new array containing chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(nativeFloor(size) || 1, 1);\n\t      }\n\t      var index = 0,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[++resIndex] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = -1,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[++resIndex] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other\n\t     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The arrays of values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.difference([1, 2, 3], [4, 2]);\n\t     * // => [1, 3]\n\t     */\n\t    var difference = restParam(function(array, values) {\n\t      return (isObjectLike(array) && isArrayLike(array))\n\t        ? baseDifference(array, baseFlatten(values, false, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that match the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [1]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.dropWhile(users, 'active'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8], '*', 1, 2);\n\t     * // => [4, '*', 8]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(chr) {\n\t     *   return chr.user == 'barney';\n\t     * });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findIndex(users, 'active', false);\n\t     * // => 0\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    var findIndex = createFindIndex();\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(chr) {\n\t     *   return chr.user == 'pebbles';\n\t     * });\n\t     * // => 2\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastIndex(users, 'active', false);\n\t     * // => 2\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    var findLastIndex = createFindIndex(true);\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias head\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.first([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.first([]);\n\t     * // => undefined\n\t     */\n\t    function first(array) {\n\t      return array ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n\t     * flattened, otherwise it is only flattened a single level.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {boolean} [isDeep] Specify a deep flatten.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * // using `isDeep`\n\t     * _.flatten([1, [2, 3, [4]]], true);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flatten(array, isDeep, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (guard && isIterateeCall(array, isDeep, guard)) {\n\t        isDeep = false;\n\t      }\n\t      return length ? baseFlatten(array, isDeep) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens a nested array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to recursively flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, 3, [4]]]);\n\t     * // => [1, 2, 3, 4]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, true) : [];\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n\t     * performs a faster binary search.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n\t     *  to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // using `fromIndex`\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     *\n\t     * // performing a binary search\n\t     * _.indexOf([1, 1, 2, 2], 2, true);\n\t     * // => 2\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      if (typeof fromIndex == 'number') {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n\t      } else if (fromIndex) {\n\t        var index = binaryIndex(array, value);\n\t        if (index < length &&\n\t            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      return baseIndexOf(array, value, fromIndex || 0);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all of the provided\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     * @example\n\t     * _.intersection([1, 2], [4, 2], [2, 1]);\n\t     * // => [2]\n\t     */\n\t    var intersection = restParam(function(arrays) {\n\t      var othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(length),\n\t          indexOf = getIndexOf(),\n\t          isCommon = indexOf == baseIndexOf,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n\t        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n\t      }\n\t      var array = arrays[0],\n\t          index = -1,\n\t          length = array ? array.length : 0,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length) {\n\t        value = array[index];\n\t        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n\t          var othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(value);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n\t     *  or `true` to perform a binary search on a sorted array.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // using `fromIndex`\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     *\n\t     * // performing a binary search\n\t     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n\t     * // => 3\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (typeof fromIndex == 'number') {\n\t        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n\t      } else if (fromIndex) {\n\t        index = binaryIndex(array, value, true) - 1;\n\t        var other = array[index];\n\t        if (value === value ? (value === other) : (other !== other)) {\n\t          return index;\n\t        }\n\t        return -1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Removes all provided values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 1, 2, 3];\n\t     *\n\t     * _.pull(array, 2, 3);\n\t     * console.log(array);\n\t     * // => [1, 1]\n\t     */\n\t    function pull() {\n\t      var args = arguments,\n\t          array = args[0];\n\t\n\t      if (!(array && array.length)) {\n\t        return array;\n\t      }\n\t      var index = 0,\n\t          indexOf = getIndexOf(),\n\t          length = args.length;\n\t\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = args[index];\n\t\n\t        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to the given indexes and returns\n\t     * an array of the removed elements. Indexes may be specified as an array of\n\t     * indexes or as individual arguments.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [5, 10, 15, 20];\n\t     * var evens = _.pullAt(array, 1, 3);\n\t     *\n\t     * console.log(array);\n\t     * // => [5, 15]\n\t     *\n\t     * console.log(evens);\n\t     * // => [10, 20]\n\t     */\n\t    var pullAt = restParam(function(array, indexes) {\n\t      indexes = baseFlatten(indexes);\n\t\n\t      var result = baseAt(array, indexes);\n\t      basePullAt(array, indexes.sort(baseCompareAscending));\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate, thisArg) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias tail\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.rest([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function rest(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of `Array#slice` to support node\n\t     * lists in IE < 9 and to ensure dense arrays are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value` should\n\t     * be inserted into `array` in order to maintain its sort order. If an iteratee\n\t     * function is provided it is invoked for `value` and each element of `array`\n\t     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n\t     * invoked with one argument; (value).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     *\n\t     * _.sortedIndex([4, 4, 5, 5], 5);\n\t     * // => 2\n\t     *\n\t     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n\t     *\n\t     * // using an iteratee function\n\t     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n\t     *   return this.data[word];\n\t     * }, dict);\n\t     * // => 1\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n\t     * // => 1\n\t     */\n\t    var sortedIndex = createSortedIndex();\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 4, 5, 5], 5);\n\t     * // => 4\n\t     */\n\t    var sortedLastIndex = createSortedIndex(true);\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n\t        n = 1;\n\t      }\n\t      n = length - (+n || 0);\n\t      return baseSlice(array, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n\t     * and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRightWhile([1, 2, 3], function(n) {\n\t     *   return n > 1;\n\t     * });\n\t     * // => [2, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n\t     * // => ['pebbles']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n\t     * // => ['fred', 'pebbles']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is bound to\n\t     * `thisArg` and invoked with three arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeWhile([1, 2, 3], function(n) {\n\t     *   return n < 3;\n\t     * });\n\t     * // => [1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.takeWhile(users, 'active'), 'user');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate, thisArg) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all of the provided arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([1, 2], [4, 2], [2, 1]);\n\t     * // => [1, 2, 4]\n\t     */\n\t    var union = restParam(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, false, true));\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurence of each element\n\t     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n\t     * for sorted arrays. If an iteratee function is provided it is invoked for\n\t     * each element in the array to generate the criterion by which uniqueness\n\t     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, array).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias unique\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {boolean} [isSorted] Specify the array is sorted.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new duplicate-value-free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     *\n\t     * // using `isSorted`\n\t     * _.uniq([1, 1, 2], true);\n\t     * // => [1, 2]\n\t     *\n\t     * // using an iteratee function\n\t     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => [1, 2.5]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniq(array, isSorted, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (isSorted != null && typeof isSorted != 'boolean') {\n\t        thisArg = iteratee;\n\t        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n\t        isSorted = false;\n\t      }\n\t      var callback = getCallback();\n\t      if (!(iteratee == null && callback === baseCallback)) {\n\t        iteratee = callback(iteratee, thisArg, 3);\n\t      }\n\t      return (isSorted && getIndexOf() == baseIndexOf)\n\t        ? sortedUniq(array, iteratee)\n\t        : baseUniq(array, iteratee);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          length = 0;\n\t\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLike(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = arrayMap(array, baseProperty(index));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts an iteratee to specify\n\t     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee] The function to combine regrouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee, thisArg) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      iteratee = bindCallback(iteratee, thisArg, 4);\n\t      return arrayMap(result, function(group) {\n\t        return arrayReduce(group, iteratee, undefined, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all provided values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {Array} array The array to filter.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.without([1, 2, 1, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = restParam(function(array, values) {\n\t      return isArrayLike(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the provided arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of values.\n\t     * @example\n\t     *\n\t     * _.xor([1, 2], [4, 2]);\n\t     * // => [1, 4]\n\t     */\n\t    function xor() {\n\t      var index = -1,\n\t          length = arguments.length;\n\t\n\t      while (++index < length) {\n\t        var array = arguments[index];\n\t        if (isArrayLike(array)) {\n\t          var result = result\n\t            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n\t            : array;\n\t        }\n\t      }\n\t      return result ? baseUniq(result) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the first\n\t     * elements of the given arrays, the second of which contains the second elements\n\t     * of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = restParam(unzip);\n\t\n\t    /**\n\t     * The inverse of `_.pairs`; this method returns an object composed from arrays\n\t     * of property names and values. Provide either a single two dimensional array,\n\t     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n\t     * and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias object\n\t     * @category Array\n\t     * @param {Array} props The property names.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     *\n\t     * _.zipObject(['fred', 'barney'], [30, 40]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function zipObject(props, values) {\n\t      var index = -1,\n\t          length = props ? props.length : 0,\n\t          result = {};\n\t\n\t      if (length && !values && !isArray(props[0])) {\n\t        values = [];\n\t      }\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        if (values) {\n\t          result[key] = values[index];\n\t        } else if (key) {\n\t          result[key[0]] = key[1];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an iteratee to specify\n\t     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n\t     * and invoked with four arguments: (accumulator, value, index, group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee] The function to combine grouped values.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = restParam(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 2 ? arrays[length - 2] : undefined,\n\t          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      if (length > 2 && typeof iteratee == 'function') {\n\t        length -= 2;\n\t      } else {\n\t        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n\t        thisArg = undefined;\n\t      }\n\t      arrays.length = length;\n\t      return unzipWith(arrays, iteratee, thisArg);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object that wraps `value` with explicit method\n\t     * chaining enabled.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _.chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(chr) {\n\t     *     return chr.user + ' is ' + chr.age;\n\t     *   })\n\t     *   .first()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor is\n\t     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n\t     * this method is to \"tap into\" a method chain in order to perform operations\n\t     * on intermediate results within the chain.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor, thisArg) {\n\t      interceptor.call(thisArg, value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @param {*} [thisArg] The `this` binding of `interceptor`.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor, thisArg) {\n\t      return interceptor.call(thisArg, value);\n\t    }\n\t\n\t    /**\n\t     * Enables explicit method chaining on the wrapper object.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // without explicit chaining\n\t     * _(users).first();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // with explicit chaining\n\t     * _(users).chain()\n\t     *   .first()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Creates a new array joining a wrapped array with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @name concat\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var wrapped = _(array).concat(2, [3], [[4]]);\n\t     *\n\t     * console.log(wrapped.value());\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    var wrapperConcat = restParam(function(values) {\n\t      values = baseFlatten(values);\n\t      return this.thru(function(array) {\n\t        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).map(function(value) {\n\t     *   return Math.pow(value, 2);\n\t     * });\n\t     *\n\t     * var other = [3, 4];\n\t     * var otherWrapped = wrapped.plant(other);\n\t     *\n\t     * otherWrapped.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the wrapped array so the first element becomes the last, the\n\t     * second element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t\n\t      var interceptor = function(value) {\n\t        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n\t      };\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(interceptor);\n\t    }\n\t\n\t    /**\n\t     * Produces the result of coercing the unwrapped value to a string.\n\t     *\n\t     * @name toString\n\t     * @memberOf _\n\t     * @category Chain\n\t     * @returns {string} Returns the coerced string value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).toString();\n\t     * // => '1,2,3'\n\t     */\n\t    function wrapperToString() {\n\t      return (this.value() + '');\n\t    }\n\t\n\t    /**\n\t     * Executes the chained sequence to extract the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @alias run, toJSON, valueOf\n\t     * @category Chain\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements corresponding to the given keys, or indexes,\n\t     * of `collection`. Keys may be specified as individual arguments or as arrays\n\t     * of keys.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(number|number[]|string|string[])} [props] The property names\n\t     *  or indexes of elements to pick, specified individually or in arrays.\n\t     * @returns {Array} Returns the new array of picked elements.\n\t     * @example\n\t     *\n\t     * _.at(['a', 'b', 'c'], [0, 2]);\n\t     * // => ['a', 'c']\n\t     *\n\t     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n\t     * // => ['barney', 'pebbles']\n\t     */\n\t    var at = restParam(function(collection, props) {\n\t      return baseAt(collection, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the number of times the key was returned by `iteratee`.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy([4.3, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * The predicate is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias all\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': false },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.every(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias select\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.filter([4, 5, 6], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 6]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.filter(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.filter(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function filter(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias detect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.result(_.find(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.result(_.find(users, 'active', false), 'user');\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.result(_.find(users, 'active'), 'user');\n\t     * // => 'barney'\n\t     */\n\t    var find = createFind(baseEach);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(baseEachRight, true);\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning the first element that has equivalent property\n\t     * values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n\t     * // => 'barney'\n\t     *\n\t     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n\t     * // => 'fred'\n\t     */\n\t    function findWhere(collection, source) {\n\t      return find(collection, baseMatches(source));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` invoking `iteratee` for each element.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection). Iteratee functions may exit iteration early\n\t     * by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n\t     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n\t     * may be used for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from left to right and returns the array\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n\t     *   console.log(n, key);\n\t     * });\n\t     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n\t     */\n\t    var forEach = createForEach(arrayEach, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array|Object|string} Returns `collection`.\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEachRight(function(n) {\n\t     *   console.log(n);\n\t     * }).value();\n\t     * // => logs each value from right to left and returns the array\n\t     */\n\t    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is an array of the elements responsible for generating the key.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return Math.floor(n);\n\t     * });\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n\t     *   return this.floor(n);\n\t     * }, Math);\n\t     * // => { '4': [4.2], '6': [6.1, 6.4] }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n\t     * from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias contains, include\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} target The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, target, fromIndex, guard) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      if (!isLength(length)) {\n\t        collection = values(collection);\n\t        length = collection.length;\n\t      }\n\t      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n\t        fromIndex = 0;\n\t      } else {\n\t        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n\t      }\n\t      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n\t        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n\t        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` through `iteratee`. The corresponding value\n\t     * of each key is the last element responsible for generating the key. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var keyData = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.indexBy(keyData, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return String.fromCharCode(object.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.indexBy(keyData, function(object) {\n\t     *   return this.fromCharCode(object.code);\n\t     * }, String);\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var indexBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function it is\n\t     * invoked for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invoke([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invoke = restParam(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` through\n\t     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n\t     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n\t     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n\t     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n\t     * `sum`, `uniq`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias collect\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function timesThree(n) {\n\t     *   return n * 3;\n\t     * }\n\t     *\n\t     * _.map([1, 2], timesThree);\n\t     * // => [3, 6]\n\t     *\n\t     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n\t     * // => [3, 6] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee, thisArg) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return func(collection, iteratee);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, while the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is bound\n\t     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.partition([1, 2, 3], function(n) {\n\t     *   return n % 2;\n\t     * });\n\t     * // => [[1, 3], [2]]\n\t     *\n\t     * _.partition([1.2, 2.3, 3.4], function(n) {\n\t     *   return this.floor(n) % 2;\n\t     * }, Math);\n\t     * // => [[1.2, 3.4], [2.3]]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * var mapper = function(array) {\n\t     *   return _.pluck(array, 'user');\n\t     * };\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n\t     * // => [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.map(_.partition(users, 'active', false), mapper);\n\t     * // => [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.map(_.partition(users, 'active'), mapper);\n\t     * // => [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Gets the property value of `path` from all elements in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Array|string} path The path of the property to pluck.\n\t     * @returns {Array} Returns the property values.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.pluck(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * var userIndex = _.indexBy(users, 'user');\n\t     * _.pluck(userIndex, 'age');\n\t     * // => [36, 40] (iteration order is not guaranteed)\n\t     */\n\t    function pluck(collection, path) {\n\t      return map(collection, property(path));\n\t    }\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` through `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not provided the first element of `collection` is used as the initial\n\t     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n\t     * and `sortByOrder`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldl, inject\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(total, n) {\n\t     *   return total + n;\n\t     * });\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     *   return result;\n\t     * }, {});\n\t     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n\t     */\n\t    var reduce = createReduce(arrayReduce, baseEach);\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias foldr\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * _.reject([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [1, 3]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.pluck(_.reject(users, 'active', false), 'user');\n\t     * // => ['fred']\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.reject(users, 'active'), 'user');\n\t     * // => ['barney']\n\t     */\n\t    function reject(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getCallback(predicate, thisArg, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element or `n` random elements from a collection.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to sample.\n\t     * @param {number} [n] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {*} Returns the random sample(s).\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     *\n\t     * _.sample([1, 2, 3, 4], 2);\n\t     * // => [3, 1]\n\t     */\n\t    function sample(collection, n, guard) {\n\t      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n\t        collection = toIterable(collection);\n\t        var length = collection.length;\n\t        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n\t      }\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sample(collection, POSITIVE_INFINITY);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the size of `collection`.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      var length = collection ? getLength(collection) : 0;\n\t      return isLength(length) ? length : keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * The function returns as soon as it finds a passing value and does not iterate\n\t     * over the entire collection. The predicate is bound to `thisArg` and invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias any\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.some(users, 'active', false);\n\t     * // => true\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, thisArg) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n\t        predicate = undefined;\n\t      }\n\t      if (typeof predicate != 'function' || thisArg !== undefined) {\n\t        predicate = getCallback(predicate, thisArg, 3);\n\t      }\n\t      return func(collection, predicate);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection through `iteratee`. This method performs\n\t     * a stable sort, that is, it preserves the original sort order of equal elements.\n\t     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return Math.sin(n);\n\t     * });\n\t     * // => [3, 1, 2]\n\t     *\n\t     * _.sortBy([1, 2, 3], function(n) {\n\t     *   return this.sin(n);\n\t     * }, Math);\n\t     * // => [3, 1, 2]\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred' },\n\t     *   { 'user': 'pebbles' },\n\t     *   { 'user': 'barney' }\n\t     * ];\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.pluck(_.sortBy(users, 'user'), 'user');\n\t     * // => ['barney', 'fred', 'pebbles']\n\t     */\n\t    function sortBy(collection, iteratee, thisArg) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      var index = -1;\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n\t      });\n\t      return baseSortBy(result, compareAscending);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n\t     * or property names.\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n\t     *  The iteratees to sort by, specified as individual values or arrays of values.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n\t     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n\t     *\n\t     * _.map(_.sortByAll(users, 'user', function(chr) {\n\t     *   return Math.floor(chr.age / 10);\n\t     * }), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    var sortByAll = restParam(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var guard = iteratees[2];\n\t      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n\t        iteratees.length = 1;\n\t      }\n\t      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.sortByAll` except that it allows specifying the\n\t     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n\t     * values are sorted in ascending order. Otherwise, a value is sorted in\n\t     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n\t     *\n\t     * If a property name is provided for an iteratee the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If an object is provided for an iteratee the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 42 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // sort by `user` in ascending order and by `age` in descending order\n\t     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n\t     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n\t     */\n\t    function sortByOrder(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (guard && isIterateeCall(iteratees, orders, guard)) {\n\t        orders = undefined;\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseSortByOrder(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between each element in `collection` and the\n\t     * source object, returning an array of all elements that have equivalent\n\t     * property values.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t     * ];\n\t     *\n\t     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t     * // => ['barney']\n\t     *\n\t     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t     * // => ['fred']\n\t     */\n\t    function where(collection, source) {\n\t      return filter(collection, baseMatches(source));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the number of milliseconds that have elapsed since the Unix epoch\n\t     * (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Date\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => logs the number of milliseconds it took for the deferred function to be invoked\n\t     */\n\t    var now = nativeNow || function() {\n\t      return new Date().getTime();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it is called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => logs 'done saving!' after the two async saves have completed\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      n = nativeIsFinite(n = +n) ? n : 0;\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to `n` arguments ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      if (guard && isIterateeCall(func, n, guard)) {\n\t        n = undefined;\n\t      }\n\t      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it is called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery('#add').on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        if (typeof n == 'function') {\n\t          var temp = n;\n\t          n = func;\n\t          func = temp;\n\t        } else {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t      }\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and prepends any additional `_.bind` arguments to those provided to the\n\t     * bound function.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = restParam(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bind.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method. Method names may be specified as individual arguments or as arrays\n\t     * of method names. If no method names are provided all enumerable function\n\t     * properties, own and inherited, of `object` are bound.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} [methodNames] The object method names to bind,\n\t     *  specified as individual method names or arrays of method names.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view);\n\t     * jQuery('#docs').on('click', view.onClick);\n\t     * // => logs 'clicked docs' when the element is clicked\n\t     */\n\t    var bindAll = restParam(function(object, methodNames) {\n\t      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\t\n\t      var index = -1,\n\t          length = methodNames.length;\n\t\n\t      while (++index < length) {\n\t        var key = methodNames[index];\n\t        object[key] = createWrapper(object[key], BIND_FLAG, object);\n\t      }\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` and prepends\n\t     * any additional `_.bindKey` arguments to those provided to the bound function.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist.\n\t     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Object} object The object the method belongs to.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // using placeholders\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = restParam(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, bindKey.placeholder);\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts one or more arguments of `func` that when\n\t     * called either invokes `func` returning its result, if all `func` arguments\n\t     * have been provided, or returns a function that accepts one or more of the\n\t     * remaining `func` arguments, and so on. The arity of `func` may be specified\n\t     * if `func.length` is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curry = createCurry(CURRY_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // using placeholders\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed invocations. Provide an options object to indicate that `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n\t     * Subsequent calls to the debounced function return the result of the last\n\t     * `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=false] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n\t     *  delayed before it is invoked.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // avoid costly calculations while the window size is in flux\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n\t     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n\t     *   'maxWait': 1000\n\t     * }));\n\t     *\n\t     * // cancel a debounced call\n\t     * var todoChanges = _.debounce(batchLog, 1000);\n\t     * Object.observe(models.todo, todoChanges);\n\t     *\n\t     * Object.observe(models, function(changes) {\n\t     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n\t     *     todoChanges.cancel();\n\t     *   }\n\t     * }, ['delete']);\n\t     *\n\t     * // ...at some point `models.todo` is changed\n\t     * models.todo.completed = true;\n\t     *\n\t     * // ...before 1 second has passed `models.todo` is deleted\n\t     * // which cancels the debounced `todoChanges` call\n\t     * delete models.todo;\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var args,\n\t          maxTimeoutId,\n\t          result,\n\t          stamp,\n\t          thisArg,\n\t          timeoutId,\n\t          trailingCall,\n\t          lastCalled = 0,\n\t          maxWait = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = wait < 0 ? 0 : (+wait || 0);\n\t      if (options === true) {\n\t        var leading = true;\n\t        trailing = false;\n\t      } else if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timeoutId) {\n\t          clearTimeout(timeoutId);\n\t        }\n\t        if (maxTimeoutId) {\n\t          clearTimeout(maxTimeoutId);\n\t        }\n\t        lastCalled = 0;\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t      }\n\t\n\t      function complete(isCalled, id) {\n\t        if (id) {\n\t          clearTimeout(id);\n\t        }\n\t        maxTimeoutId = timeoutId = trailingCall = undefined;\n\t        if (isCalled) {\n\t          lastCalled = now();\n\t          result = func.apply(thisArg, args);\n\t          if (!timeoutId && !maxTimeoutId) {\n\t            args = thisArg = undefined;\n\t          }\n\t        }\n\t      }\n\t\n\t      function delayed() {\n\t        var remaining = wait - (now() - stamp);\n\t        if (remaining <= 0 || remaining > wait) {\n\t          complete(trailingCall, maxTimeoutId);\n\t        } else {\n\t          timeoutId = setTimeout(delayed, remaining);\n\t        }\n\t      }\n\t\n\t      function maxDelayed() {\n\t        complete(trailing, timeoutId);\n\t      }\n\t\n\t      function debounced() {\n\t        args = arguments;\n\t        stamp = now();\n\t        thisArg = this;\n\t        trailingCall = trailing && (timeoutId || !leading);\n\t\n\t        if (maxWait === false) {\n\t          var leadingCall = leading && !timeoutId;\n\t        } else {\n\t          if (!maxTimeoutId && !leading) {\n\t            lastCalled = stamp;\n\t          }\n\t          var remaining = maxWait - (stamp - lastCalled),\n\t              isCalled = remaining <= 0 || remaining > maxWait;\n\t\n\t          if (isCalled) {\n\t            if (maxTimeoutId) {\n\t              maxTimeoutId = clearTimeout(maxTimeoutId);\n\t            }\n\t            lastCalled = stamp;\n\t            result = func.apply(thisArg, args);\n\t          }\n\t          else if (!maxTimeoutId) {\n\t            maxTimeoutId = setTimeout(maxDelayed, remaining);\n\t          }\n\t        }\n\t        if (isCalled && timeoutId) {\n\t          timeoutId = clearTimeout(timeoutId);\n\t        }\n\t        else if (!timeoutId && wait !== maxWait) {\n\t          timeoutId = setTimeout(delayed, wait);\n\t        }\n\t        if (leadingCall) {\n\t          isCalled = true;\n\t          result = func.apply(thisArg, args);\n\t        }\n\t        if (isCalled && !timeoutId && !maxTimeoutId) {\n\t          args = thisArg = undefined;\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // logs 'deferred' after one or more milliseconds\n\t     */\n\t    var defer = restParam(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke the function with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => logs 'later' after one second\n\t     */\n\t    var delay = restParam(function(func, wait, args) {\n\t      return baseDelay(func, wait, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the provided\n\t     * functions with the `this` binding of the created function, where each\n\t     * successive invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow(_.add, square);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the provided functions from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias backflow, compose\n\t     * @category Function\n\t     * @param {...Function} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight(square, _.add);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is coerced to a string and used as the\n\t     * cache key. The `func` is invoked with the `this` binding of the memoized\n\t     * function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoizing function.\n\t     * @example\n\t     *\n\t     * var upperCase = _.memoize(function(string) {\n\t     *   return string.toUpperCase();\n\t     * });\n\t     *\n\t     * upperCase('fred');\n\t     * // => 'FRED'\n\t     *\n\t     * // modifying the result cache\n\t     * upperCase.cache.set('fred', 'BARNEY');\n\t     * upperCase('fred');\n\t     * // => 'BARNEY'\n\t     *\n\t     * // replacing `_.memoize.Cache`\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'barney' };\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.memoize.Cache = WeakMap;\n\t     * var identity = _.memoize(_.identity);\n\t     *\n\t     * identity(object);\n\t     * // => { 'user': 'fred' }\n\t     * identity(other);\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new memoize.Cache;\n\t      return memoized;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that runs each argument through a corresponding\n\t     * transform function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms] The functions to transform\n\t     * arguments, specified as individual functions or arrays of functions.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var modded = _.modArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, square, doubled);\n\t     *\n\t     * modded(1, 2);\n\t     * // => [1, 4]\n\t     *\n\t     * modded(5, 10);\n\t     * // => [25, 20]\n\t     */\n\t    var modArgs = restParam(function(func, transforms) {\n\t      transforms = baseFlatten(transforms);\n\t      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = transforms.length;\n\t      return restParam(function(args) {\n\t        var index = nativeMin(args.length, length);\n\t        while (index--) {\n\t          args[index] = transforms[index](args[index]);\n\t        }\n\t        return func.apply(this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first call. The `func` is invoked\n\t     * with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partial` arguments prepended\n\t     * to those provided to the new function. This method is like `_.bind` except\n\t     * it does **not** alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // using placeholders\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = createPartial(PARTIAL_FLAG);\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to those provided to the new function.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method does not set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // using placeholders\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified indexes where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes,\n\t     *  specified as individual indexes or arrays of indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, 2, 0, 1);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * var map = _.rearg(_.map, [1, 0]);\n\t     * map(function(n) {\n\t     *   return n * 3;\n\t     * }, [1, 2, 3]);\n\t     * // => [3, 6, 9]\n\t     */\n\t    var rearg = restParam(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as an array.\n\t     *\n\t     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.restParam(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function restParam(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            rest = Array(length);\n\t\n\t        while (++index < length) {\n\t          rest[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, rest);\n\t          case 1: return func.call(this, args[0], rest);\n\t          case 2: return func.call(this, args[0], args[1], rest);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = rest;\n\t        return func.apply(this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the created\n\t     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n\t     *\n\t     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * // with a Promise\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function(array) {\n\t        return func.apply(this, array);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed invocations. Provide an options object to indicate\n\t     * that `func` should be invoked on the leading and/or trailing edge of the\n\t     * `wait` timeout. Subsequent calls to the throttled function return the\n\t     * result of the last `func` call.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the the throttled function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.leading=true] Specify invoking on the leading\n\t     *  edge of the timeout.\n\t     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n\t     *  edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // avoid excessively updating the position while scrolling\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n\t     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // cancel a trailing throttled call\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (options === false) {\n\t        leading = false;\n\t      } else if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} wrapper The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n\t     * otherwise they are assigned by reference. If `customizer` is provided it is\n\t     * invoked to produce the cloned values. If `customizer` returns `undefined`\n\t     * cloning is handled by the method instead. The `customizer` is bound to\n\t     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var shallow = _.clone(users);\n\t     * shallow[0] === users[0];\n\t     * // => true\n\t     *\n\t     * var deep = _.clone(users, true);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.clone(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 0\n\t     */\n\t    function clone(value, isDeep, customizer, thisArg) {\n\t      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n\t        isDeep = false;\n\t      }\n\t      else if (typeof isDeep == 'function') {\n\t        thisArg = customizer;\n\t        customizer = isDeep;\n\t        isDeep = false;\n\t      }\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, isDeep);\n\t    }\n\t\n\t    /**\n\t     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n\t     * to produce the cloned values. If `customizer` returns `undefined` cloning\n\t     * is handled by the method instead. The `customizer` is bound to `thisArg`\n\t     * and invoked with two argument; (value [, index|key, object]).\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n\t     * The enumerable properties of `arguments` objects and objects created by\n\t     * constructors other than `Object` are cloned to plain `Object` objects. An\n\t     * empty object is returned for uncloneable values such as functions, DOM nodes,\n\t     * Maps, Sets, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to deep clone.\n\t     * @param {Function} [customizer] The function to customize cloning values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * var deep = _.cloneDeep(users);\n\t     * deep[0] === users[0];\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var el = _.cloneDeep(document.body, function(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * });\n\t     *\n\t     * el === document.body\n\t     * // => false\n\t     * el.nodeName\n\t     * // => BODY\n\t     * el.childNodes.length;\n\t     * // => 20\n\t     */\n\t    function cloneDeep(value, customizer, thisArg) {\n\t      return typeof customizer == 'function'\n\t        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n\t        : baseClone(value, true);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    function gt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    function gte(value, other) {\n\t      return value >= other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      return isObjectLike(value) && isArrayLike(value) &&\n\t        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(function() { return arguments; }());\n\t     * // => false\n\t     */\n\t    var isArray = nativeIsArray || function(value) {\n\t      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is empty. A value is considered empty unless it is an\n\t     * `arguments` object, array, string, or jQuery-like collection with a length\n\t     * greater than `0` or an object with own enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Array|Object|string} value The value to inspect.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n\t          (isObjectLike(value) && isFunction(value.splice)))) {\n\t        return !value.length;\n\t      }\n\t      return !keys(value).length;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent. If `customizer` is provided it is invoked to compare values.\n\t     * If `customizer` returns `undefined` comparisons are handled by the method\n\t     * instead. The `customizer` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, other [, index|key]).\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. Functions and DOM nodes\n\t     * are **not** supported. Provide a customizer function to extend support\n\t     * for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias eq\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * object == other;\n\t     * // => false\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * // using a customizer callback\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqual(array, other, function(value, other) {\n\t     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n\t     *     return true;\n\t     *   }\n\t     * });\n\t     * // => true\n\t     */\n\t    function isEqual(value, other, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(10);\n\t     * // => true\n\t     *\n\t     * _.isFinite('10');\n\t     * // => false\n\t     *\n\t     * _.isFinite(true);\n\t     * // => false\n\t     *\n\t     * _.isFinite(Object(10));\n\t     * // => false\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in older versions of Chrome and Safari which return 'function' for regexes\n\t      // and Safari 8 equivalents which return 'object' for typed array constructors.\n\t      return isObject(value) && objToString.call(value) == funcTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(1);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      // Avoid a V8 JIT bug in Chrome 19-20.\n\t      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between `object` and `source` to determine if\n\t     * `object` contains equivalent property values. If `customizer` is provided\n\t     * it is invoked to compare values. If `customizer` returns `undefined`\n\t     * comparisons are handled by the method instead. The `customizer` is bound\n\t     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n\t     *\n\t     * **Note:** This method supports comparing properties of arrays, booleans,\n\t     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n\t     * and DOM nodes are **not** supported. Provide a customizer function to extend\n\t     * support for comparing other values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize value comparisons.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     *\n\t     * // using a customizer callback\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatch(object, source, function(value, other) {\n\t     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n\t     * });\n\t     * // => true\n\t     */\n\t    function isMatch(object, source, customizer, thisArg) {\n\t      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n\t      return baseIsMatch(object, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n\t     * which returns `true` for `undefined` and other non-numeric values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a native function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (value == null) {\n\t        return false;\n\t      }\n\t      if (isFunction(value)) {\n\t        return reIsNative.test(fnToString.call(value));\n\t      }\n\t      return isObjectLike(value) && reIsHostCtor.test(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n\t     * as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(8.4);\n\t     * // => true\n\t     *\n\t     * _.isNumber(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNumber('8.4');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * **Note:** This method assumes objects created by the `Object` constructor\n\t     * have no inherited enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      var Ctor;\n\t\n\t      // Exit early for non `Object` objects.\n\t      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n\t          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n\t        return false;\n\t      }\n\t      // IE < 9 iterates inherited properties before own properties. If the first\n\t      // iterated property is an object's own property then there are no inherited\n\t      // enumerable properties.\n\t      var result;\n\t      // In most environments an object's own properties are iterated before\n\t      // its inherited properties. If the last iterated property is an object's\n\t      // own property then there are no inherited enumerable properties.\n\t      baseForIn(value, function(subValue, key) {\n\t        result = key;\n\t      });\n\t      return result === undefined || hasOwnProperty.call(value, result);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    function lt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    function lte(value, other) {\n\t      return value <= other;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * (function() {\n\t     *   return _.toArray(arguments).slice(1);\n\t     * }(1, 2, 3));\n\t     * // => [2, 3]\n\t     */\n\t    function toArray(value) {\n\t      var length = value ? getLength(value) : 0;\n\t      if (!isLength(length)) {\n\t        return values(value);\n\t      }\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      return arrayCopy(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable\n\t     * properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return baseCopy(value, keysIn(value));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Recursively merges own enumerable properties of the source object(s), that\n\t     * don't resolve to `undefined` into the destination object. Subsequent sources\n\t     * overwrite property assignments of previous sources. If `customizer` is\n\t     * provided it is invoked to produce the merged values of the destination and\n\t     * source properties. If `customizer` returns `undefined` merging is handled\n\t     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n\t     * with five arguments: (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     *\n\t     * // using a customizer callback\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.merge(object, other, function(a, b) {\n\t     *   if (_.isArray(a)) {\n\t     *     return a.concat(b);\n\t     *   }\n\t     * });\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var merge = createAssigner(baseMerge);\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object. Subsequent sources overwrite property assignments of previous sources.\n\t     * If `customizer` is provided it is invoked to produce the assigned values.\n\t     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t     * (objectValue, sourceValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object` and is based on\n\t     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {*} [thisArg] The `this` binding of `customizer`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using a customizer callback\n\t     * var defaults = _.partialRight(_.assign, function(value, other) {\n\t     *   return _.isUndefined(value) ? other : value;\n\t     * });\n\t     *\n\t     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var assign = createAssigner(function(object, source, customizer) {\n\t      return customizer\n\t        ? assignWith(object, source, customizer)\n\t        : baseAssign(object, source);\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the given `prototype` object. If a\n\t     * `properties` object is provided its own enumerable properties are assigned\n\t     * to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties, guard) {\n\t      var result = baseCreate(prototype);\n\t      if (guard && isIterateeCall(prototype, properties, guard)) {\n\t        properties = undefined;\n\t      }\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own enumerable properties of source object(s) to the destination\n\t     * object for all destination properties that resolve to `undefined`. Once a\n\t     * property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = createDefaults(assign, assignDefaults);\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    var findKey = createFindKey(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * If a property name is provided for `predicate` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `predicate` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(chr) {\n\t     *   return chr.age < 40;\n\t     * });\n\t     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n\t     *\n\t     * // using the `_.matches` callback shorthand\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // using the `_.matchesProperty` callback shorthand\n\t     * _.findLastKey(users, 'active', false);\n\t     * // => 'fred'\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    var findLastKey = createFindKey(baseForOwnRight);\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable properties of an object invoking\n\t     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n\t     */\n\t    var forIn = createForIn(baseFor);\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n\t     */\n\t    var forInRight = createForIn(baseForRight);\n\t\n\t    /**\n\t     * Iterates over own enumerable properties of an object invoking `iteratee`\n\t     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n\t     * three arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n\t     */\n\t    var forOwn = createForOwn(baseForOwn);\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n\t     */\n\t    var forOwnRight = createForOwn(baseForOwnRight);\n\t\n\t    /**\n\t     * Creates an array of function property names from all enumerable properties,\n\t     * own and inherited, of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias methods\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the new array of property names.\n\t     * @example\n\t     *\n\t     * _.functions(_);\n\t     * // => ['after', 'ary', 'assign', ...]\n\t     */\n\t    function functions(object) {\n\t      return baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the property value at `path` of `object`. If the resolved value is\n\t     * `undefined` the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': { 'c': 3 } } };\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b.c');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b', 'c']);\n\t     * // => true\n\t     */\n\t    function has(object, path) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      var result = hasOwnProperty.call(object, path);\n\t      if (!result && !isKey(path)) {\n\t        path = toPath(path);\n\t        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        path = last(path);\n\t        result = hasOwnProperty.call(object, path);\n\t      }\n\t      return result || (isLength(object.length) && isIndex(path, object.length) &&\n\t        (isArray(object) || isArguments(object)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite property\n\t     * assignments of previous values unless `multiValue` is `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {boolean} [multiValue] Allow multiple values per key.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     *\n\t     * // with `multiValue`\n\t     * _.invert(object, true);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function invert(object, multiValue, guard) {\n\t      if (guard && isIterateeCall(object, multiValue, guard)) {\n\t        multiValue = undefined;\n\t      }\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (multiValue) {\n\t          if (hasOwnProperty.call(result, value)) {\n\t            result[value].push(key);\n\t          } else {\n\t            result[value] = [key];\n\t          }\n\t        }\n\t        else {\n\t          result[value] = key;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    var keys = !nativeKeys ? shimKeys : function(object) {\n\t      var Ctor = object == null ? undefined : object.constructor;\n\t      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t          (typeof object != 'function' && isArrayLike(object))) {\n\t        return shimKeys(object);\n\t      }\n\t      return isObject(object) ? nativeKeys(object) : [];\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      if (!isObject(object)) {\n\t        object = Object(object);\n\t      }\n\t      var length = object.length;\n\t      length = (length && isLength(length) &&\n\t        (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t      var Ctor = object.constructor,\n\t          index = -1,\n\t          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t          result = Array(length),\n\t          skipIndexes = length > 0;\n\t\n\t      while (++index < length) {\n\t        result[index] = (index + '');\n\t      }\n\t      for (var key in object) {\n\t        if (!(skipIndexes && isIndex(key, length)) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * property of `object` through `iteratee`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    var mapKeys = createObjectMapper(true);\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated by\n\t     * running each own enumerable property of `object` through `iteratee`. The\n\t     * iteratee function is bound to `thisArg` and invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n\t     *  per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @example\n\t     *\n\t     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n\t     *   return n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    var mapValues = createObjectMapper();\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable properties of `object` that are not omitted.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to omit, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.omit(object, 'age');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.omit(object, _.isNumber);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var omit = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      if (typeof props[0] != 'function') {\n\t        var props = arrayMap(baseFlatten(props), String);\n\t        return pickByArray(object, baseDifference(keysIn(object), props));\n\t      }\n\t      var predicate = bindCallback(props[0], props[1], 3);\n\t      return pickByCallback(object, function(value, key, object) {\n\t        return !predicate(value, key, object);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a two dimensional array of the key-value pairs for `object`,\n\t     * e.g. `[[key1, value1], [key2, value2]]`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the new array of key-value pairs.\n\t     * @example\n\t     *\n\t     * _.pairs({ 'barney': 36, 'fred': 40 });\n\t     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t     */\n\t    function pairs(object) {\n\t      object = toObject(object);\n\t\n\t      var index = -1,\n\t          props = keys(object),\n\t          length = props.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t        result[index] = [key, object[key]];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties. Property\n\t     * names may be specified as individual arguments or as arrays of property\n\t     * names. If `predicate` is provided it is invoked for each property of `object`\n\t     * picking the properties `predicate` returns truthy for. The predicate is\n\t     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function|...(string|string[])} [predicate] The function invoked per\n\t     *  iteration or property names to pick, specified as individual property\n\t     *  names or arrays of property names.\n\t     * @param {*} [thisArg] The `this` binding of `predicate`.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.pick(object, 'user');\n\t     * // => { 'user': 'fred' }\n\t     *\n\t     * _.pick(object, _.isString);\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    var pick = restParam(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      return typeof props[0] == 'function'\n\t        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n\t        : pickByArray(object, baseFlatten(props));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a function\n\t     * it is invoked with the `this` binding of its parent object and its result\n\t     * is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a.b.c', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      var result = object == null ? undefined : object[path];\n\t      if (result === undefined) {\n\t        if (object != null && !isKey(path, object)) {\n\t          path = toPath(path);\n\t          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t          result = object == null ? undefined : object[last(path)];\n\t        }\n\t        result = result === undefined ? defaultValue : result;\n\t      }\n\t      return isFunction(result) ? result.call(object) : result;\n\t    }\n\t\n\t    /**\n\t     * Sets the property value of `path` on `object`. If a portion of `path`\n\t     * does not exist it is created.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to augment.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, 'x[0].y.z', 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      if (object == null) {\n\t        return object;\n\t      }\n\t      var pathKey = (path + '');\n\t      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = path[index];\n\t        if (isObject(nested)) {\n\t          if (index == lastIndex) {\n\t            nested[key] = value;\n\t          } else if (nested[key] == null) {\n\t            nested[key] = isIndex(path[index + 1]) ? [] : {};\n\t          }\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own enumerable\n\t     * properties through `iteratee`, with each invocation potentially mutating\n\t     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n\t     * with four arguments: (accumulator, value, key, object). Iteratee functions\n\t     * may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Array|Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * });\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n\t     *   result[key] = n * 3;\n\t     * });\n\t     * // => { 'a': 3, 'b': 6 }\n\t     */\n\t    function transform(object, iteratee, accumulator, thisArg) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getCallback(iteratee, thisArg, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property values\n\t     * of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to but not including, `end`. If\n\t     * `end` is not specified it is set to `start` with `start` then set to `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} n The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     */\n\t    function inRange(value, start, end) {\n\t      start = +start || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between `min` and `max` (inclusive). If only one\n\t     * argument is provided a number between `0` and the given number is returned.\n\t     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t     * number is returned instead of an integer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Number\n\t     * @param {number} [min=0] The minimum possible value.\n\t     * @param {number} [max=1] The maximum possible value.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(min, max, floating) {\n\t      if (floating && isIterateeCall(min, max, floating)) {\n\t        max = floating = undefined;\n\t      }\n\t      var noMin = min == null,\n\t          noMax = max == null;\n\t\n\t      if (floating == null) {\n\t        if (noMax && typeof min == 'boolean') {\n\t          floating = min;\n\t          min = 1;\n\t        }\n\t        else if (typeof max == 'boolean') {\n\t          floating = max;\n\t          noMax = true;\n\t        }\n\t      }\n\t      if (noMin && noMax) {\n\t        max = 1;\n\t        noMax = false;\n\t      }\n\t      min = +min || 0;\n\t      if (noMax) {\n\t        max = min;\n\t        min = 0;\n\t      } else {\n\t        max = +max || 0;\n\t      }\n\t      if (floating || min % 1 || max % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t      }\n\t      return baseRandom(min, max);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__foo_bar__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n\t    });\n\t\n\t    /**\n\t     * Capitalizes the first character of `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('fred');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      string = baseToString(string);\n\t      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = baseToString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      target = (target + '');\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional characters\n\t     * use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value.\n\t     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in Internet Explorer < 9, they can break out\n\t     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n\t     * for more details.\n\t     *\n\t     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n\t     * to reduce XSS vectors.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n\t      string = baseToString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n\t     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasRegExpChars.test(string))\n\t        ? string.replace(reRegExpChars, escapeRegExpChar)\n\t        : (string || '(?:)');\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__foo_bar__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = baseToString(string);\n\t      length = +length;\n\t\n\t      var strLength = string.length;\n\t      if (strLength >= length || !nativeIsFinite(length)) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2,\n\t          leftLength = nativeFloor(mid),\n\t          rightLength = nativeCeil(mid);\n\t\n\t      chars = createPadding('', rightLength, chars);\n\t      return chars.slice(0, leftLength) + string + chars;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padLeft('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padLeft('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padLeft('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padLeft = createPadDir();\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padRight('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padRight('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padRight('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    var padRight = createPadDir(true);\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n\t     * in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n\t     * of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = trim(string);\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=0] The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n) {\n\t      var result = '';\n\t      string = baseToString(string);\n\t      n = +n;\n\t      if (n < 1 || !string || !nativeIsFinite(n)) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        string += string;\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--foo-bar');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__foo_bar__');\n\t     * // => 'Foo Bar'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = baseToString(string);\n\t      position = position == null\n\t        ? 0\n\t        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\t\n\t      return string.lastIndexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is provided it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options] The options object.\n\t     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports] An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n\t     * @param {string} [options.variable] The data object variable name.\n\t     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // using the \"interpolate\" delimiter to create a compiled template\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // using the HTML \"escape\" delimiter to escape data property values\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the internal `print` function in \"evaluate\" delimiters\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // using custom template delimiters\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // using backslashes to treat delimiters as plain text\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // using the `imports` option to import `jQuery` as `jq`\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // using the `sourceURL` option to specify a custom sourceURL for the template\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n\t     *\n\t     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // using the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and a stack trace\n\t     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, otherOptions) {\n\t      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n\t        options = otherOptions = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\t\n\t      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products requires returning the `match`\n\t        // string in order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n\t      }\n\t      chars = (chars + '');\n\t      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimLeft('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimLeft('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimLeft(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(trimmedLeftIndex(string));\n\t      }\n\t      return string.slice(charsLeftIndex(string, (chars + '')));\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimRight('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimRight('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimRight(string, chars, guard) {\n\t      var value = string;\n\t      string = baseToString(string);\n\t      if (!string) {\n\t        return string;\n\t      }\n\t      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n\t        return string.slice(0, trimmedRightIndex(string) + 1);\n\t      }\n\t      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object|number} [options] The options object or maximum string length.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', 24);\n\t     * // => 'hi-diddly-ho there, n...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.trunc('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function trunc(string, options, guard) {\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (options != null) {\n\t        if (isObject(options)) {\n\t          var separator = 'separator' in options ? options.separator : separator;\n\t          length = 'length' in options ? (+options.length || 0) : length;\n\t          omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t        } else {\n\t          length = +options || 0;\n\t        }\n\t      }\n\t      string = baseToString(string);\n\t      if (length >= string.length) {\n\t        return string;\n\t      }\n\t      var end = length - omission.length;\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = string.slice(0, end);\n\t      if (separator == null) {\n\t        return result + omission;\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              newEnd,\n\t              substring = string.slice(0, end);\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd == null ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(separator, end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n\t     * corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n\t     * entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = baseToString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      if (guard && isIterateeCall(string, pattern, guard)) {\n\t        pattern = undefined;\n\t      }\n\t      string = baseToString(string);\n\t      return string.match(pattern || reWords) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it is invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function} func The function to attempt.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // avoid throwing errors for invalid selectors\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = restParam(function(func, args) {\n\t      try {\n\t        return func.apply(undefined, args);\n\t      } catch(e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and arguments of the created function. If `func` is a property name the\n\t     * created callback returns the property value for a given element. If `func`\n\t     * is an object the created callback returns `true` for elements that contain\n\t     * the equivalent object properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @alias iteratee\n\t     * @category Utility\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // wrap to create custom callback shorthands\n\t     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n\t     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n\t     *   if (!match) {\n\t     *     return callback(func, thisArg);\n\t     *   }\n\t     *   return function(object) {\n\t     *     return match[2] == 'gt'\n\t     *       ? object[match[1]] > match[3]\n\t     *       : object[match[1]] < match[3];\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(users, 'age__gt36');\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function callback(func, thisArg, guard) {\n\t      if (guard && isIterateeCall(func, thisArg, guard)) {\n\t        thisArg = undefined;\n\t      }\n\t      return isObjectLike(func)\n\t        ? matches(func)\n\t        : baseCallback(func, thisArg);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var getter = _.constant(object);\n\t     *\n\t     * getter() === object;\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * This method returns the first argument provided to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.identity(object) === object;\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a deep comparison between a given object\n\t     * and `source`, returning `true` if the given object has equivalent property\n\t     * values, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties. For comparing a single\n\t     * own or inherited property value see `_.matchesProperty`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that compares the property value of `path` on a given\n\t     * object to `value`.\n\t     *\n\t     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t     * their own, not inherited, enumerable properties.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` on a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n\t     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    var method = restParam(function(path, args) {\n\t      return function(object) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path on `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = restParam(function(object, args) {\n\t      return function(path) {\n\t        return invokePath(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable function properties of a source object to the\n\t     * destination object. If `object` is a function then methods are added to\n\t     * its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether the functions added\n\t     *  are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      if (options == null) {\n\t        var isObj = isObject(source),\n\t            props = isObj ? keys(source) : undefined,\n\t            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\t\n\t        if (!(methodNames ? methodNames.length : isObj)) {\n\t          methodNames = false;\n\t          options = source;\n\t          source = object;\n\t          object = this;\n\t        }\n\t      }\n\t      if (!methodNames) {\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = true,\n\t          index = -1,\n\t          isFunc = isFunction(object),\n\t          length = methodNames.length;\n\t\n\t      if (options === false) {\n\t        chain = false;\n\t      } else if (isObject(options) && 'chain' in options) {\n\t        chain = options.chain;\n\t      }\n\t      while (++index < length) {\n\t        var methodName = methodNames[index],\n\t            func = source[methodName];\n\t\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = (function(func) {\n\t            return function() {\n\t              var chainAll = this.__chain__;\n\t              if (chain || chainAll) {\n\t                var result = object(this.__wrapped__),\n\t                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\t\n\t                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t                result.__chain__ = chainAll;\n\t                return result;\n\t              }\n\t              return func.apply(object, arrayPush([this.value()], arguments));\n\t            };\n\t          }(func));\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      root._ = oldDash;\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A no-operation function that returns `undefined` regardless of the\n\t     * arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * _.noop(object) === undefined;\n\t     * // => true\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the property value at `path` on a\n\t     * given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': { 'c': 2 } } },\n\t     *   { 'a': { 'b': { 'c': 1 } } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b.c'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the property value at a given path on `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return baseGet(object, toPath(path), path + '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. If `end` is not specified it is\n\t     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n\t     * a zero-length range is created unless a negative `step` is specified.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the new array of numbers.\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    function range(start, end, step) {\n\t      if (step && isIterateeCall(start, end, step)) {\n\t        end = step = undefined;\n\t      }\n\t      start = +start || 0;\n\t      step = step == null ? 1 : (+step || 0);\n\t\n\t      if (end == null) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = +end || 0;\n\t      }\n\t      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n\t      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee function `n` times, returning an array of the results\n\t     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n\t     * one argument; (index).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n\t     * // => [3, 6, 4]\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   mage.castSpell(n);\n\t     * });\n\t     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n\t     *\n\t     * _.times(3, function(n) {\n\t     *   this.cast(n);\n\t     * }, mage);\n\t     * // => also invokes `mage.castSpell(n)` three times\n\t     */\n\t    function times(n, iteratee, thisArg) {\n\t      n = nativeFloor(n);\n\t\n\t      // Exit early to avoid a JSC JIT bug in Safari 8\n\t      // where `Array(0)` is treated as `Array(1)`.\n\t      if (n < 1 || !nativeIsFinite(n)) {\n\t        return [];\n\t      }\n\t      var index = -1,\n\t          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\t\n\t      iteratee = bindCallback(iteratee, thisArg, 1);\n\t      while (++index < n) {\n\t        if (index < MAX_ARRAY_LENGTH) {\n\t          result[index] = iteratee(index);\n\t        } else {\n\t          iteratee(index);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Utility\n\t     * @param {string} [prefix] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return baseToString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} augend The first number to add.\n\t     * @param {number} addend The second number to add.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    function add(augend, addend) {\n\t      return (+augend || 0) + (+addend || 0);\n\t    }\n\t\n\t    /**\n\t     * Calculates `n` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Calculates `n` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n\t     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => -Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.max(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.max(users, 'age');\n\t     * // => { 'user': 'fred', 'age': 40 }\n\t     */\n\t    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\t\n\t    /**\n\t     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n\t     * `Infinity` is returned. If an iteratee function is provided it is invoked\n\t     * for each value in `collection` to generate the criterion by which the value\n\t     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n\t     * arguments: (value, index, collection).\n\t     *\n\t     * If a property name is provided for `iteratee` the created `_.property`\n\t     * style callback returns the property value of the given element.\n\t     *\n\t     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t     * style callback returns `true` for elements that have a matching property\n\t     * value, else `false`.\n\t     *\n\t     * If an object is provided for `iteratee` the created `_.matches` style\n\t     * callback returns `true` for elements that have the properties of the given\n\t     * object, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => Infinity\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.min(users, function(chr) {\n\t     *   return chr.age;\n\t     * });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.min(users, 'age');\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var min = createExtremum(lt, POSITIVE_INFINITY);\n\t\n\t    /**\n\t     * Calculates `n` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {number} n The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Gets the sum of the values in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array|Object|string} collection The collection to iterate over.\n\t     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n\t     * @param {*} [thisArg] The `this` binding of `iteratee`.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 6]);\n\t     * // => 10\n\t     *\n\t     * _.sum({ 'a': 4, 'b': 6 });\n\t     * // => 10\n\t     *\n\t     * var objects = [\n\t     *   { 'n': 4 },\n\t     *   { 'n': 6 }\n\t     * ];\n\t     *\n\t     * _.sum(objects, function(object) {\n\t     *   return object.n;\n\t     * });\n\t     * // => 10\n\t     *\n\t     * // using the `_.property` callback shorthand\n\t     * _.sum(objects, 'n');\n\t     * // => 10\n\t     */\n\t    function sum(collection, iteratee, thisArg) {\n\t      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n\t        iteratee = undefined;\n\t      }\n\t      iteratee = getCallback(iteratee, thisArg, 3);\n\t      return iteratee.length == 1\n\t        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n\t        : baseSum(collection, iteratee);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    // Add functions to the `Map` cache.\n\t    MapCache.prototype['delete'] = mapDelete;\n\t    MapCache.prototype.get = mapGet;\n\t    MapCache.prototype.has = mapHas;\n\t    MapCache.prototype.set = mapSet;\n\t\n\t    // Add functions to the `Set` cache.\n\t    SetCache.prototype.push = cachePush;\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    // Add functions that return wrapped values when chaining.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.callback = callback;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.functions = functions;\n\t    lodash.groupBy = groupBy;\n\t    lodash.indexBy = indexBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.invert = invert;\n\t    lodash.invoke = invoke;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.modArgs = modArgs;\n\t    lodash.negate = negate;\n\t    lodash.omit = omit;\n\t    lodash.once = once;\n\t    lodash.pairs = pairs;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pluck = pluck;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.restParam = restParam;\n\t    lodash.set = set;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortByAll = sortByAll;\n\t    lodash.sortByOrder = sortByOrder;\n\t    lodash.spread = spread;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.times = times;\n\t    lodash.toArray = toArray;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.union = union;\n\t    lodash.uniq = uniq;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.where = where;\n\t    lodash.without = without;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.backflow = flowRight;\n\t    lodash.collect = map;\n\t    lodash.compose = flowRight;\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.extend = assign;\n\t    lodash.iteratee = callback;\n\t    lodash.methods = functions;\n\t    lodash.object = zipObject;\n\t    lodash.select = filter;\n\t    lodash.tail = rest;\n\t    lodash.unique = uniq;\n\t\n\t    // Add functions to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions that return unwrapped values when chaining.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.deburr = deburr;\n\t    lodash.endsWith = endsWith;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.findWhere = findWhere;\n\t    lodash.first = first;\n\t    lodash.floor = floor;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isString = isString;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.min = min;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padLeft = padLeft;\n\t    lodash.padRight = padRight;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.sum = sum;\n\t    lodash.template = template;\n\t    lodash.trim = trim;\n\t    lodash.trimLeft = trimLeft;\n\t    lodash.trimRight = trimRight;\n\t    lodash.trunc = trunc;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.words = words;\n\t\n\t    // Add aliases.\n\t    lodash.all = every;\n\t    lodash.any = some;\n\t    lodash.contains = includes;\n\t    lodash.eq = isEqual;\n\t    lodash.detect = find;\n\t    lodash.foldl = reduce;\n\t    lodash.foldr = reduceRight;\n\t    lodash.head = first;\n\t    lodash.include = includes;\n\t    lodash.inject = reduce;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!lodash.prototype[methodName]) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), false);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add functions capable of returning wrapped and unwrapped values when chaining.\n\t    lodash.sample = sample;\n\t\n\t    lodash.prototype.sample = function(n) {\n\t      if (!this.__chain__ && n == null) {\n\t        return sample(this.value());\n\t      }\n\t      return this.thru(function(value) {\n\t        return sample(value, n);\n\t      });\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type string\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n\t        } else {\n\t          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type != LAZY_MAP_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n\t    arrayEach(['first', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n\t    arrayEach(['initial', 'rest'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n\t    arrayEach(['pluck', 'where'], function(methodName, index) {\n\t      var operationName = index ? 'filter' : 'map',\n\t          createCallback = index ? baseMatches : property;\n\t\n\t      LazyWrapper.prototype[methodName] = function(value) {\n\t        return this[operationName](createCallback(value));\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n\t      predicate = getCallback(predicate, thisArg, 1);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = start == null ? 0 : (+start || 0);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = (+end || 0);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n\t      return this.reverse().takeWhile(predicate, thisArg).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(POSITIVE_INFINITY);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n\t          retUnwrapped = /^(?:first|last)$/.test(methodName),\n\t          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var args = retUnwrapped ? [1] : arguments,\n\t            chainAll = this.__chain__,\n\t            value = this.__wrapped__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var interceptor = function(value) {\n\t          return (retUnwrapped && chainAll)\n\t            ? lodashFunc(value, 1)[0]\n\t            : lodashFunc.apply(undefined, arrayPush([value], args));\n\t        };\n\t\n\t        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (retUnwrapped && !chainAll) {\n\t          if (onlyLazy) {\n\t            value = value.clone();\n\t            value.__actions__.push(action);\n\t            return func.call(value);\n\t          }\n\t          return lodashFunc.call(undefined, this.value())[0];\n\t        }\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push(action);\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        return this.thru(interceptor);\n\t      };\n\t    });\n\t\n\t    // Add `Array` and `String` methods to `lodash.prototype`.\n\t    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n\t      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          return func.apply(this.value(), args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(value, args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified function names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = lodashFunc.name,\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\t\n\t    // Add functions to the lazy wrapper.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chaining functions to the `lodash` wrapper.\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.concat = wrapperConcat;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toString = wrapperToString;\n\t    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add function aliases to the `lodash` wrapper.\n\t    lodash.prototype.collect = lodash.prototype.map;\n\t    lodash.prototype.head = lodash.prototype.first;\n\t    lodash.prototype.select = lodash.prototype.filter;\n\t    lodash.prototype.tail = lodash.prototype.rest;\n\t\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Expose lodash to the global object when an AMD loader is present to avoid\n\t    // errors in cases where lodash is loaded by a script tag and not intended\n\t    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n\t    // more details.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeExports && freeModule) {\n\t    // Export for Node.js or RingoJS.\n\t    if (moduleExports) {\n\t      (freeModule.exports = _)._ = _;\n\t    }\n\t    // Export for Rhino with CommonJS support.\n\t    else {\n\t      freeExports._ = _;\n\t    }\n\t  }\n\t  else {\n\t    // Export for a browser or Rhino.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18)(module), (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.TIME_DATA_OPERATIONS = false;\n\t\n\texports.RUN_BENCHMARKS = false;\n\t\n\texports.SHOW_MAXIMA_AND_MINIMA = true;\n\t\n\texports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\t\n\texports.SYNTENY_MARGIN = 50;\n\texports.CIRCLE_RADIUS = 2;\n\texports.UNSELECTED_DOT_FILL = '#D0D0D0';\n\texports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\n\texports.DOTPLOT_COLOR_TRANS_LEN = 500;\n\t\n\texports.HISTOGRAM_MARGIN = 50;\n\texports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\n\texports.NUM_HISTOGRAM_TICKS = 100;\n\texports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\t\n\texports.COLOR_RANGES = {\n\t\trg: {\n\t\t\trange: ['red', 'green'],\n\t\t\tquantized: false\n\t\t},\n\t\trg_quantized: {\n\t\t\trange: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'], /* From colorbrewer */\n\t\t\tquantized: true\n\t\t},\n\t\trainbow: {\n\t\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\t\tquantized: false\n\t\t},\n\t\trainbow_quantized: {\n\t\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\t\tquantized: true\n\t\t},\n\t\tunselected: {\n\t\t\trange: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n\t\t\tquantized: false\n\t\t}\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\texports.getComputedAttr = function getComputedAttr(element, attr) {\n\t\tvar computed = getComputedStyle(element)[attr];\n\t\treturn parseInt(computed, 10);\n\t};\n\t\n\texports.samplePointsInRange = function (extent, n) {\n\t\treturn _.map(_.range(n), d3.scale.linear().domain([0, n - 1]).range(extent));\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\texports.simplify = function simplify(_x, _x2) {\n\t\tvar _again = true;\n\t\n\t\t_function: while (_again) {\n\t\t\tvar dirtyPoints = _x,\n\t\t\t    persistence = _x2;\n\t\t\t_again = false;\n\t\n\t\t\tvar points = removeNonExtrema(dirtyPoints);\n\t\t\tvar index = indexOfSmallestPointDifference(points);\n\t\n\t\t\tif (points.length < 3 || gapBetweenPoints(points, index) > persistence) return points;\n\t\n\t\t\tvar toRemove = index === 0 ? 1 : index;\n\t\t\tpoints.splice(toRemove, 1);\n\t\n\t\t\t_x = points;\n\t\t\t_x2 = persistence;\n\t\t\t_again = true;\n\t\t\tpoints = index = toRemove = undefined;\n\t\t\tcontinue _function;\n\t\t}\n\t};\n\t\n\tfunction removeNonExtrema(A) {\n\t\treturn _.filter(A, function (element, index) {\n\t\t\tif (index === 0 || index === A.length - 1) return true;\n\t\n\t\t\tvar before = A[index - 1].y;\n\t\t\tvar here = element.y;\n\t\t\tvar after = A[index + 1].y;\n\t\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t\t});\n\t}\n\t\n\tfunction gapBetweenPoints(A, i) {\n\t\treturn Math.abs(A[i].y - A[i + 1].y);\n\t}\n\t\n\tfunction indexOfSmallestPointDifference(A) {\n\t\treturn _(A.length - 1).range().min(function (i) {\n\t\t\treturn gapBetweenPoints(A, i);\n\t\t});\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function transform(props) {\n\t  var transform = [];\n\t  if (Array.isArray(props)) {\n\t    props.forEach(function forEachAccessor(prop) {\n\t      var key = Object.keys(prop)[0];\n\t      transform.push(key + '(' + prop[key] + ')');\n\t    });\n\t  }\n\t  return transform.join(' ');\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\t/*\n\t * I want to run a benchmark, but I don't want to block UI updates \n\t * in between iterations.\n\t *\n\t * My guess is that this isn't super accurate for fast functions.\n\t */\n\texports.benchmark = function (testArgs, f, done) {\n\t\n\t\tvar results = [];\n\t\tvar runOne = function runOne(tests) {\n\t\t\tif (!tests.length) return done(stats(results));\n\t\n\t\t\tresults.push(timeIt(f, tests[0]));\n\t\t\tsetTimeout(runOne, 0, tests.slice(1));\n\t\t};\n\t\tsetTimeout(runOne, 0, testArgs);\n\t\n\t\tvar timeIt = function timeIt(f, arg) {\n\t\t\tvar start = Date.now();\n\t\t\tf(arg);\n\t\t\treturn Date.now() - start;\n\t\t};\n\t\n\t\tvar stats = function stats(times) {\n\t\t\treturn {\n\t\t\t\ttotalTime: _.sum(times),\n\t\t\t\tcount: times.length,\n\t\t\t\tmax: _.max(times),\n\t\t\t\taverage: _.sum(times) / times.length\n\t\t\t};\n\t\t};\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar persistenceFuncs = __webpack_require__(5);\n\tvar d3 = __webpack_require__(2);\n\tvar _ = __webpack_require__(1);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar AUTO_SCALE_VALLEY_FILL = _require.AUTO_SCALE_VALLEY_FILL;\n\t\n\texports.generateAutoScale = function (points, persistence) {\n\t\tvar extrema = persistenceFuncs.simplify(points, persistence);\n\t\treturn generateColorScaleFromExtrema(extrema);\n\t};\n\t\n\tvar isMaxima = function isMaxima(A, i) {\n\t\treturn A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t};\n\tvar shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t\treturn i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t};\n\t\n\tvar generateColorScaleFromExtrema = function generateColorScaleFromExtrema(extrema) {\n\t\tvar colors = d3.scale.category10();\n\t\n\t\tvar colored = _.map(extrema, function (x, i, A) {\n\t\t\tvar color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n\t\t\treturn _.defaults({}, x, { color: color });\n\t\t});\n\t\n\t\tvar domain = _.map(colored, function (d) {\n\t\t\treturn d.x + d.dx / 2;\n\t\t});\n\t\tvar range = _.map(colored, function (d) {\n\t\t\treturn d.color;\n\t\t});\n\t\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d3 = __webpack_require__(2);\n\tvar _ = __webpack_require__(1);\n\tvar utils = __webpack_require__(4);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar COLOR_RANGES = _require.COLOR_RANGES;\n\t\n\texports.onData = function (data) {\n\t\tvar generateScale = function generateScale(field, name) {\n\t\t\tvar extent = d3.extent(data, function (point) {\n\t\t\t\treturn point[field];\n\t\t\t});\n\t\n\t\t\tvar colorScale = COLOR_RANGES[name];\n\t\t\tvar range = colorScale.range;\n\t\t\tvar domain = utils.samplePointsInRange(extent, range.length);\n\t\n\t\t\tvar scale = colorScale.quantized ? d3.scale.quantize() : d3.scale.linear();\n\t\n\t\t\treturn scale.domain(domain).range(range);\n\t\t};\n\t\n\t\t/* _.memoize acts only on the first arg unless we tell it otherwise */\n\t\treturn _.memoize(generateScale, function (field, name) {\n\t\t\treturn field + '.' + name;\n\t\t});\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar utils = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar transform = __webpack_require__(6);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar SYNTENY_MARGIN = _require.SYNTENY_MARGIN;\n\tvar CIRCLE_RADIUS = _require.CIRCLE_RADIUS;\n\tvar UNSELECTED_DOT_FILL = _require.UNSELECTED_DOT_FILL;\n\tvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = _require.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\tvar DOTPLOT_COLOR_TRANS_LEN = _require.DOTPLOT_COLOR_TRANS_LEN;\n\t\n\tfunction synteny(id, dataObj, field, initialColorScale, meta) {\n\t\n\t\tvar xExtent = [0, _.max(dataObj.getXLineOffsets())];\n\t\tvar yExtent = [0, _.max(dataObj.getYLineOffsets())];\n\t\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\t\n\t\tvar baseID = id.substring(1);\n\t\tvar svgElement = document.getElementById(baseID);\n\t\tvar computedWidth = utils.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\t\tvar computedHeight = utils.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\t\tvar windowAspectRatio = computedHeight / computedWidth;\n\t\n\t\tvar width;\n\t\tvar height;\n\t\n\t\tif (windowAspectRatio / dataAspectRatio > 1) {\n\t\t\twidth = computedWidth;\n\t\t\theight = dataAspectRatio * width;\n\t\t} else {\n\t\t\theight = computedHeight;\n\t\t\twidth = 1 / dataAspectRatio * height;\n\t\t}\n\t\n\t\td3.select(id).attr('width', width + 2 * SYNTENY_MARGIN);\n\t\td3.select(id).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\n\t\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\t\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\t\n\t\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function () {\n\t\t\tvar t = d3.event.translate;\n\t\t\tvar s = d3.event.scale;\n\t\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t\t// prevents the translate from growing large. This way, you don't\n\t\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\t\tzoom.translate(t);\n\t\n\t\t\tbrushGroup.attr('transform', transform([{ translate: t }, { scale: s }]));\n\t\n\t\t\tvar tempXOffsets = _.filter(xOffsets, function (x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t});\n\t\t\tvar tempXGaps = _.filter(xAxisTickValues, function (x) {\n\t\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t\t});\n\t\t\tvar tempYOffsets = _.filter(yOffsets, function (y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t});\n\t\t\tvar tempYGaps = _.filter(yAxisTickValues, function (y) {\n\t\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t\t});\n\t\n\t\t\txLineAxis.tickValues(tempXOffsets);\n\t\t\txGapsAxis.tickValues(tempXGaps);\n\t\t\tyLineAxis.tickValues(tempYOffsets);\n\t\t\tyGapsAxis.tickValues(tempYGaps);\n\t\n\t\t\txAxisGapsGroup.call(xGapsAxis);\n\t\t\tyAxisGapsGroup.call(yGapsAxis);\n\t\t\txAxisLineGroup.call(xLineAxis);\n\t\t\tyAxisLineGroup.call(yLineAxis);\n\t\n\t\t\tsetSyntenyData('zoom');\n\t\t});\n\t\n\t\tfunction resizeBrushBoundary() {\n\t\t\tvar scaling = zoom.scale();\n\t\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\t\tvar vertical = ['.e', '.w'];\n\t\t\tvar horizontal = ['.n', '.s'];\n\t\t\tvar horizontalRescale = _.union(corners, vertical);\n\t\t\tvar verticalRescale = _.union(corners, horizontal);\n\t\n\t\t\t_.map(horizontalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t\t});\n\t\n\t\t\t_.map(verticalRescale, function (name) {\n\t\t\t\td3.select('.resize' + name).select('rect').attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t\t});\n\t\t}\n\t\n\t\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t  * All sorts of nasty things happen when the scales get changed underneath a\n\t  * brush. */\n\t\tvar brush = d3.svg.brush().x(xScale.copy()).y(yScale.copy()).on('brush', function () {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t}).on('brushend', function () {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t}\n\t\t});\n\t\n\t\td3.select(id + '-canvas').attr('width', width + 2 * SYNTENY_MARGIN).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\tvar context = document.getElementById(id.substring(1) + '-canvas').getContext('2d');\n\t\n\t\td3.select(id + '-canvas-bak').attr('width', width + 2 * SYNTENY_MARGIN).attr('height', height + 2 * SYNTENY_MARGIN);\n\t\tvar contextbak = document.getElementById(id.substring(1) + '-canvas-bak').getContext('2d');\n\t\n\t\tvar svg = d3.select(id);\n\t\n\t\tvar TEXT_OFFSET = 35;\n\t\tvar TEXT_BOX_HEIGHT = 25;\n\t\tsvg.append('text').attr('x', (width + 2 * SYNTENY_MARGIN) / 3).attr('width', (width + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.x_name);\n\t\n\t\tsvg.append('text').attr('transform', 'rotate(-90)').attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3).attr('width', (height + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN - TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.y_name);\n\t\n\t\tsvg.append('defs').append('clipPath').attr('id', 'plot-clip-box').append('rect').attr('x', 0).attr('width', width).attr('y', 0).attr('height', height).attr('fill', 'black');\n\t\n\t\tvar xOffsets = dataObj.getXLineOffsets();\n\t\tvar xPairs = _.zip(_.initial(xOffsets), _.rest(xOffsets));\n\t\tvar xAxisTickValues = _.map(xPairs, function (p) {\n\t\t\treturn (p[0] + p[1]) / 2;\n\t\t});\n\t\n\t\tvar xOffsetToNameMap = _.object(xAxisTickValues, dataObj.getXLineNames());\n\t\n\t\tvar xLineAxis = d3.svg.axis().scale(xScale).tickValues(xOffsets).tickFormat(_.constant('')).orient('bottom').tickSize(-height);\n\t\n\t\tvar xGapsAxis = d3.svg.axis().scale(xScale).tickValues(xAxisTickValues).tickFormat(function (x) {\n\t\t\treturn xOffsetToNameMap[x];\n\t\t}).orient('bottom').tickSize(0);\n\t\n\t\tvar xAxisWrapper = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, height + SYNTENY_MARGIN] }]));\n\t\tvar xAxisGapsGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xGapsAxis);\n\t\tvar xAxisLineGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xLineAxis);\n\t\n\t\tvar yOffsets = dataObj.getYLineOffsets();\n\t\tvar yPairs = _.zip(_.initial(yOffsets), _.rest(yOffsets));\n\t\tvar yAxisTickValues = _.map(yPairs, function (p) {\n\t\t\treturn (p[0] + p[1]) / 2;\n\t\t});\n\t\tvar yOffsetToNameMap = _.object(yAxisTickValues, dataObj.getYLineNames());\n\t\n\t\tvar yLineAxis = d3.svg.axis().scale(yScale).tickValues(yOffsets).tickFormat(_.constant('')).orient('left').tickSize(-width);\n\t\n\t\tvar yGapsAxis = d3.svg.axis().scale(yScale).tickValues(yAxisTickValues).tickFormat(function (x) {\n\t\t\treturn yOffsetToNameMap[x];\n\t\t}).orient('left').tickSize(0);\n\t\n\t\tvar yAxisWrapper = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, SYNTENY_MARGIN] }]));\n\t\tvar yAxisGapsGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yGapsAxis);\n\t\tvar yAxisLineGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yLineAxis);\n\t\n\t\tsvg = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, SYNTENY_MARGIN] }])).append('g').attr('id', 'zoom-group').call(zoom).on('mousedown.zoom', null); //disable panning\n\t\n\t\tvar brushGroup = svg.append('g').attr('clip-path', 'url(#plot-clip-box)').append('g').attr('id', 'brush-group').call(brush);\n\t\n\t\tvar colorScale = initialColorScale;\n\t\n\t\tfunction draw(elapsedMS, initialColorScale, finalColorScale, typeHint) {\n\t\t\tvar start = Date.now();\n\t\n\t\t\tvar intermediateColorScale;\n\t\t\tif (elapsedMS === 0 && typeHint === 'data') {\n\t\t\t\tintermediateColorScale = finalColorScale;\n\t\t\t} else {\n\t\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\t\t}\n\t\n\t\t\tvar allData = dataObj.currentData();\n\t\t\tvar activeDots = allData.active;\n\t\t\tvar allDots = allData.raw;\n\t\n\t\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tif (typeHint === 'zoom') {\n\t\t\t\tcontextbak.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\t\tcontextbak.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t\t_.each(allDots, function (d) {\n\t\t\t\t\tvar cx = SYNTENY_MARGIN + xScale(d.x_relative_offset);\n\t\t\t\t\tvar cy = SYNTENY_MARGIN + yScale(d.y_relative_offset);\n\t\n\t\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN) return;\n\t\n\t\t\t\t\tcontextbak.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t//console.log('Time to draw bg points:', Date.now() - start);\n\t\t\tstart = Date.now();\n\t\n\t\t\tcontext.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\n\t\t\t/* On top, active dots */\n\t\n\t\t\tvar _xScale$domain = xScale.domain();\n\t\n\t\t\tvar _xScale$domain2 = _slicedToArray(_xScale$domain, 2);\n\t\n\t\t\tvar minDomX = _xScale$domain2[0];\n\t\t\tvar maxDomX = _xScale$domain2[1];\n\t\n\t\t\tvar _yScale$domain = yScale.domain();\n\t\n\t\t\tvar _yScale$domain2 = _slicedToArray(_yScale$domain, 2);\n\t\n\t\t\tvar minDomY = _yScale$domain2[0];\n\t\t\tvar maxDomY = _yScale$domain2[1];\n\t\n\t\t\tvar _xScale$range = xScale.range();\n\t\n\t\t\tvar _xScale$range2 = _slicedToArray(_xScale$range, 2);\n\t\n\t\t\tvar minRanX = _xScale$range2[0];\n\t\t\tvar maxRanX = _xScale$range2[1];\n\t\n\t\t\tvar _yScale$range = yScale.range();\n\t\n\t\t\tvar _yScale$range2 = _slicedToArray(_yScale$range, 2);\n\t\n\t\t\tvar minRanY = _yScale$range2[0];\n\t\t\tvar maxRanY = _yScale$range2[1];\n\t\n\t\t\tvar widthDomX = maxDomX - minDomX;\n\t\t\tvar widthDomY = maxDomY - minDomY;\n\t\t\tvar widthRanX = maxRanX - minRanX;\n\t\t\tvar widthRanY = maxRanY - minRanY;\n\t\t\tvar xRatio = widthRanX / widthDomX;\n\t\t\tvar xShift = minDomX * xRatio + minRanX - SYNTENY_MARGIN;\n\t\t\tvar yRatio = widthRanY / widthDomY;\n\t\t\tvar yShift = maxDomY * yRatio + maxRanY - SYNTENY_MARGIN;\n\t\n\t\t\tvar groups = [];\n\t\t\tvar index = 0;\n\t\t\tfunction makeComp(v) {\n\t\t\t\treturn function (x) {\n\t\t\t\t\treturn x.roundedlogks < v;\n\t\t\t\t};\n\t\t\t}\n\t\t\twhile (index < activeDots.length) {\n\t\t\t\tvar lo = index;\n\t\t\t\tvar val = activeDots[index].roundedlogks;\n\t\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\t\troundedlogks: val\n\t\t\t\t}, makeComp(val));\n\t\t\t\tgroups.push([lo, index]);\n\t\t\t}\n\t\n\t\t\tfor (var g = 0; g < groups.length; g++) {\n\t\t\t\tvar group = groups[g];\n\t\t\t\tvar loIndex = group[0];\n\t\t\t\tvar hiIndex = group[1];\n\t\t\t\tcontext.fillStyle = intermediateColorScale(activeDots[loIndex].roundedlogks);\n\t\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\t\tvar d = activeDots[i];\n\t\t\t\t\tvar cx = d.x_relative_offset * xRatio - xShift;\n\t\t\t\t\tvar cy = d.y_relative_offset * yRatio - yShift;\n\t\n\t\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN) continue;\n\t\n\t\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcontext.fillStyle = 'white';\n\t\t\tcontext.fillRect(0, 0, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(0, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(SYNTENY_MARGIN + width, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontext.fillRect(0, height + SYNTENY_MARGIN, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\n\t\t\tvar diff = Date.now() - start;\n\t\t\t//console.log('Start of call to end of draw call:', diff);\n\t\t\tif (elapsedMS > 0) {\n\t\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction interpolateScales(a, b, t) {\n\t\t\tvar aDomain = a.domain();\n\t\t\tvar bDomain = b.domain();\n\t\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\t\tvar max = Math.max(aDomain[1], bDomain[1]);\n\t\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\t\tvar domain = _.range(min, max + 1, step);\n\t\t\tvar range = _.map(domain, function (input) {\n\t\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t\t});\n\t\t\treturn d3.scale.linear().domain(domain).range(range);\n\t\t}\n\t\n\t\tfunction setSyntenyData(typeHint) {\n\t\t\tif (typeHint == 'autoscale') return;\n\t\t\tdraw(0, colorScale, colorScale, typeHint);\n\t\t}\n\t\tdataObj.addListener(setSyntenyData);\n\t\tsetSyntenyData('zoom');\n\t\n\t\tfunction setNavigationMode(mode) {\n\t\t\tif (mode === 'pan') {\n\t\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t\t} else if (mode === 'brush') {\n\t\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\t\tcolorScale = newColorScale;\n\t\t}\n\t\n\t\tfunction setField(f) {\n\t\t\tfield = f;\n\t\t\tsetSyntenyData();\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetNavMode: setNavigationMode,\n\t\t\tsetColorScale: setColorScale,\n\t\t\tsetField: setField\n\t\t};\n\t}\n\t\n\texports.synteny = synteny;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar HISTOGRAM_MARGIN = _require.HISTOGRAM_MARGIN;\n\tvar HISTOGRAM_Y_SCALE_TRANS_LEN = _require.HISTOGRAM_Y_SCALE_TRANS_LEN;\n\tvar NUM_HISTOGRAM_TICKS = _require.NUM_HISTOGRAM_TICKS;\n\tvar UNSELECTED_BAR_FILL = _require.UNSELECTED_BAR_FILL;\n\t\n\tvar persistenceFuncs = __webpack_require__(5);\n\tvar utils = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar transform = __webpack_require__(6);\n\t\n\tfunction histogram(id, dataObj, field, colorScale) {\n\t\tvar dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\t\n\t\tvar plot = d3.select(id);\n\t\tvar plotWidth = utils.getComputedAttr(plot.node(), 'width');\n\t\tvar plotHeight = utils.getComputedAttr(plot.node(), 'height');\n\t\n\t\tvar prettyNames = {\n\t\t\tlogks: 'log(ks)',\n\t\t\tlogkn: 'log(kn)',\n\t\t\tlogkskn: 'log(ks/kn)'\n\t\t};\n\t\tplot.append('text').attr('x', 2 * plotHeight / 3).attr('width', plotHeight / 3).attr('y', 50).attr('height', 50).classed('histogram-title', true).text(prettyNames[field]);\n\t\n\t\tfunction plotBrushBrush() {\n\t\t\tif (!plotBrush.empty()) {\n\t\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t\t}\n\t\t}\n\t\n\t\tfunction plotBrushEnd() {\n\t\t\tif (plotBrush.empty()) {\n\t\t\t\tdataObj.removeDataFilter(field);\n\t\t\t}\n\t\t\tdataObj.notifyListeners('histogram-stop');\n\t\t\tupdateColors(dataBarSel); // Cancel color animation -- just brushing\n\t\t}\n\t\n\t\tvar xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\t\n\t\tvar _bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n\t\tvar getYExtent = function getYExtent(summary) {\n\t\t\treturn [0, 3 / 2 * d3.max(_.pluck(summary, 'y'))];\n\t\t};\n\t\n\t\tvar yPlotScale = d3.scale.linear().domain(getYExtent(dataObj.currentDataSummary(_bins, field))).range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\t\n\t\tfunction updateMinMaxMarkers(persistence) {\n\t\t\tvar summary = dataObj.currentDataSummary(_bins, field);\n\t\t\tvar extrema = persistenceFuncs.simplify(summary, persistence);\n\t\n\t\t\tvar isMaxima = function isMaxima(A, i) {\n\t\t\t\treturn A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t\t\t};\n\t\t\tvar shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t\t\t\treturn i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t\t\t};\n\t\t\tvar markers = _.map(extrema, function (d, i, A) {\n\t\t\t\treturn {\n\t\t\t\t\tcolor: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t\t\t\t\tx: d.x + d.dx / 2,\n\t\t\t\t\ty: d.y\n\t\t\t\t};\n\t\t\t});\n\t\n\t\t\tvar tempSelA = plot.selectAll('.maxMark').data(markers);\n\t\t\ttempSelA.exit().remove();\n\t\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\t\ttempSelA.attr('cx', function (d) {\n\t\t\t\treturn xPlotScale(d.x);\n\t\t\t}).attr('cy', function (d) {\n\t\t\t\treturn yPlotScale(d.y) - 5;\n\t\t\t}).attr('r', 3).attr('fill', function (d) {\n\t\t\t\treturn d.color;\n\t\t\t});\n\t\t}\n\t\n\t\tvar plotBrush = d3.svg.brush().x(xPlotScale).on('brush', plotBrushBrush).on('brushend', plotBrushEnd);\n\t\n\t\tvar dataBarSel = plot.selectAll('.dataBars').data(dataObj.currentDataSummary(_bins, field)).enter().append('rect').classed('dataBars', true).attr('x', function (d) {\n\t\t\treturn xPlotScale(d.x);\n\t\t}).attr('width', function (d) {\n\t\t\treturn xPlotScale(d.x + d.dx) - xPlotScale(d.x);\n\t\t});\n\t\n\t\tvar brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group').attr('transform', transform([{ translate: [0, HISTOGRAM_MARGIN] }])).call(plotBrush);\n\t\tbrushSelectForBM.selectAll('rect').attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\t\n\t\tvar xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\t\tvar yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\t\n\t\tplot.append('g').attr('transform', transform([{ translate: [0, plotHeight - HISTOGRAM_MARGIN] }])).classed('xAxis', true).call(xAxis);\n\t\tvar yAxisSel = plot.append('g').attr('transform', transform([{ translate: [HISTOGRAM_MARGIN, 0] }])).classed('yAxis', true).call(yAxis);\n\t\n\t\tvar updateHeights = function updateHeights(selection) {\n\t\t\tselection.transition(); // cancel transition\n\t\t\tselection.attr('y', function (d) {\n\t\t\t\treturn yPlotScale(d.y);\n\t\t\t});\n\t\t};\n\t\tvar updateColors = function updateColors(selection) {\n\t\t\tselection.transition(); // cancel transition\n\t\t\tvar extent = plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n\t\t\tvar active = function active(bin) {\n\t\t\t\treturn bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\t\t\t};\n\t\n\t\t\tselection.attr('height', function (d) {\n\t\t\t\treturn plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y);\n\t\t\t}).attr('fill', function (d) {\n\t\t\t\treturn active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL;\n\t\t\t});\n\t\t};\n\t\n\t\tvar updatePlotAttrs = function updatePlotAttrs(selection) {\n\t\t\tupdateHeights(selection);\n\t\t\tupdateColors(selection);\n\t\t};\n\t\n\t\tfunction updatePlot(typeHint) {\n\t\t\tdataBarSel.transition(); /* cancel previous transition */\n\t\n\t\t\ttypeHint = typeHint || '';\n\t\n\t\t\tvar summary = dataObj.currentDataSummary(_bins, field);\n\t\t\tvar tempSel = dataBarSel.data(summary);\n\t\n\t\t\tif (typeHint.indexOf('stop') > -1) {\n\t\t\t\tyPlotScale.domain(getYExtent(summary));\n\t\t\t\tyAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t\t\t\ttempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n\t\t\t}\n\t\n\t\t\ttempSel.call(updatePlotAttrs);\n\t\t}\n\t\n\t\tdataObj.addListener(updatePlot);\n\t\n\t\tfunction setColorScale(newColorScale) {\n\t\t\tcolorScale = newColorScale;\n\t\t\tupdatePlot('stop'); /* trigger animation -- FIXME */\n\t\t}\n\t\n\t\treturn {\n\t\t\tsetColorScale: setColorScale,\n\t\t\tbrush: plotBrush,\n\t\t\tsendBrushEvent: plotBrushBrush,\n\t\t\tselection: brushSelectForBM,\n\t\t\tupdateMinMaxMarkers: updateMinMaxMarkers,\n\t\t\tbins: function bins() {\n\t\t\t\treturn dataObj.currentDataSummary(_bins, field);\n\t\t\t}\n\t\t};\n\t}\n\t\n\texports.histogram = histogram;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i['return']) _i['return'](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError('Invalid attempt to destructure non-iterable instance'); } }; })();\n\t\n\tvar histogram = __webpack_require__(11);\n\tvar dotplot = __webpack_require__(10);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar autoscale = __webpack_require__(8);\n\t\n\t__webpack_require__(17);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar RUN_BENCHMARKS = _require.RUN_BENCHMARKS;\n\tvar SHOW_MAXIMA_AND_MINIMA = _require.SHOW_MAXIMA_AND_MINIMA;\n\t\n\tfunction buildDiv(element_id) {\n\t\tvar div = d3.select(element_id).append('div').classed('_synteny-dotplot-builder', true);\n\t\n\t\tdiv.append('canvas').attr('id', 'dotplot-canvas-bak').classed('dotplot', true);\n\t\tdiv.append('canvas').attr('id', 'dotplot-canvas').classed('dotplot', true);\n\t\tdiv.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\t\n\t\tvar histogramWrapper = div.append('div').attr('id', 'histogram-wrapper');\n\t\thistogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\t\thistogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\t\thistogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\t\n\t\tvar formWrapper = div.append('div').attr('id', 'form-wrapper');\n\t\n\t\tfunction makeForm(title, optionId, elements, checkIndex) {\n\t\t\tvar navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\t\tnavOptions.append('strong').text(title + ': ');\n\t\n\t\t\tvar navForm = navOptions.append('form').attr('id', optionId);\n\t\t\tvar options = navForm.selectAll('input').data(elements).enter().append('input').attr('type', 'radio').attr('name', optionId).attr('value', function (d) {\n\t\t\t\treturn d[0];\n\t\t\t});\n\t\n\t\t\toptions.forEach(function (selection) {\n\t\t\t\tselection.forEach(function (element, i) {\n\t\t\t\t\tvar label = document.createElement('label');\n\t\t\t\t\tlabel.textContent = elements[i][1];\n\t\t\t\t\tnavForm.node().insertBefore(label, element);\n\t\t\t\t});\n\t\t\t});\n\t\n\t\t\toptions[0][checkIndex].checked = true;\n\t\t}\n\t\n\t\tvar option = function option(value, text) {\n\t\t\treturn [value, text];\n\t\t};\n\t\n\t\tmakeForm('Navigation Mode', 'mouse-options', [option('brush', 'Brushing'), option('pan', 'Panning')], 0);\n\t\n\t\tmakeForm('Plotting order', 'summary-options', [option('minimum', 'High to Low'), option('maximum', 'Low to High')], 0);\n\t\n\t\tmakeForm('Dot Plot Coloring', 'plot-var-options', [option('logks', 'log ks'), option('logkn', 'log kn'), option('logkskn', 'log ks/kn')], 0);\n\t\n\t\tmakeForm('Color Scale', 'color-options', [option('rg', 'red-green'), option('rg_quantized', 'rg_quantized'), option('rainbow', 'rainbow'), option('rainbow_quantized', 'rainbow_quantized'), option('auto', 'auto')], 0);\n\t\n\t\tvar persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\tpersistenceOptions.append('strong').text('Auto-scale persistence');\n\t\n\t\tpersistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100).attr('value', 40).attr('step', 1);\n\t\n\t\tpersistenceOptions.append('button').attr('id', 'persistence-button').attr('type', 'button').text('Refresh auto scale');\n\t\n\t\tpersistenceOptions.append('p').text('Largest persistence edge that will be removed: ').append('label').attr('id', 'persistence-text').text('40');\n\t}\n\t\n\tfunction controller(dataObj, element_id, meta) {\n\t\n\t\tbuildDiv('#' + element_id);\n\t\n\t\tvar refreshAutoScale = function refreshAutoScale(persistence) {\n\t\t\tvar radio = document.getElementById('color-options');\n\t\t\tvar auto = _.find(radio.children, function (child) {\n\t\t\t\treturn child.value === 'auto';\n\t\t\t});\n\t\t\tauto.checked = true;\n\t\n\t\t\tvar h = histograms[activeField];\n\t\t\th.setColorScale(autoscale.generateAutoScale(h.bins(), persistence));\n\t\n\t\t\tif (SHOW_MAXIMA_AND_MINIMA) _.each(histograms, function (h) {\n\t\t\t\treturn h.updateMinMaxMarkers(persistence);\n\t\t\t});\n\t\t};\n\t\n\t\tvar getPersistence = function getPersistence() {\n\t\t\treturn d3.select('#persistence').node().value;\n\t\t};\n\t\n\t\td3.select('#persistence').on('input', function () {\n\t\t\tvar p = getPersistence();\n\t\t\trefreshAutoScale(p);\n\t\t\td3.select('#persistence-text').node().innerText = p;\n\t\t});\n\t\n\t\td3.select('#persistence-button').on('click', function () {\n\t\t\trefreshAutoScale(getPersistence());\n\t\t});\n\t\n\t\t/* zoom/pan switching */\n\t\td3.selectAll('#mouse-options input[name=mouse-options]').on('change', function () {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\t\n\t\t/* summary mode switching */\n\t\td3.selectAll('#summary-options input[name=summary-options]').on('change', function () {\n\t\t\tdataObj.setOrder('logks', this.value === 'minimum');\n\t\t});\n\t\n\t\t/* Plot variable switching */\n\t\td3.selectAll('#plot-var-options input[name=plot-var-options]').on('change', function () {\n\t\t\thistograms[activeField].setColorScale(colorScale(activeField, 'unselected'));\n\t\t\tactiveField = this.value;\n\t\t\tsyntenyPlot.setField(activeField);\n\t\t\tvar newCS;\n\t\t\tif (activeCS === 'auto') {\n\t\t\t\tnewCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t\t\t} else {\n\t\t\t\tnewCS = colorScale(activeField, activeCS);\n\t\t\t}\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t});\n\t\n\t\t/* color mode switching */\n\t\tvar activeField = 'logks';\n\t\tvar activeCS = 'rg';\n\t\td3.selectAll('#color-options input[name=color-options]').on('change', function () {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t\t\t} else {\n\t\t\t\tnewCS = colorScale(activeField, this.value);\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\tactiveCS = this.value;\n\t\t});\n\t\n\t\tvar colorScale = __webpack_require__(9).onData(dataObj.currentData().raw);\n\t\n\t\tvar initial = colorScale(activeField, 'rg');\n\t\tvar unselected = colorScale(activeField, 'unselected');\n\t\n\t\tvar syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initial, meta);\n\t\tvar histograms = {\n\t\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initial),\n\t\t\t'logkn': histogram.histogram('#plot2', dataObj, 'logkn', unselected),\n\t\t\t'logkskn': histogram.histogram('#plot3', dataObj, 'logkskn', unselected)\n\t\t};\n\t\n\t\t// Since the histograms aren't controlling their own color scale policy\n\t\t// now (a good thing), we need to manually fire of their update methods.\n\t\t// Eventually, we should fix this up.\n\t\tdataObj.addListener(function (typeHint) {\n\t\t\tif (typeHint.indexOf('stop') > -1) _.each(histograms, function (h) {\n\t\t\t\treturn h.updateMinMaxMarkers(getPersistence());\n\t\t\t});\n\t\t});\n\t\tdataObj.notifyListeners('initial');\n\t\n\t\t/* Benchmark */\n\t\tif (RUN_BENCHMARKS) {\n\t\t\t(function () {\n\t\t\t\tvar _d3$extent = d3.extent(dataObj.currentData().raw, function (x) {\n\t\t\t\t\treturn x.logks;\n\t\t\t\t});\n\t\n\t\t\t\tvar _d3$extent2 = _slicedToArray(_d3$extent, 2);\n\t\n\t\t\t\tvar minLogKs = _d3$extent2[0];\n\t\t\t\tvar maxLogKs = _d3$extent2[1];\n\t\n\t\t\t\tvar points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\t\n\t\t\t\tvar rangeList = _.chain(points).map(function (lo) {\n\t\t\t\t\treturn _.map(points, function (hi) {\n\t\t\t\t\t\treturn [lo, hi];\n\t\t\t\t\t});\n\t\t\t\t}).flatten().filter(function (_ref) {\n\t\t\t\t\tvar _ref2 = _slicedToArray(_ref, 2);\n\t\n\t\t\t\t\tvar lo = _ref2[0];\n\t\t\t\t\tvar hi = _ref2[1];\n\t\t\t\t\treturn lo < hi;\n\t\t\t\t}).value();\n\t\n\t\t\t\tvar asyncBenchmark = __webpack_require__(7);\n\t\t\t\tasyncBenchmark.benchmark(rangeList, function (range) {\n\t\t\t\t\thistograms.logks.brush.extent(range);\n\t\t\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t\t\t}, function (info) {\n\t\t\t\t\talert('Average brush time: ' + info.average + ', max: ' + info.max);\n\t\t\t\t});\n\t\t\t})();\n\t\t}\n\t}\n\t\n\texports.controller = controller;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(14)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder .dotplot{float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:50%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:grey}._synteny-dotplot-builder #histogram-wrapper{float:right;width:50%}._synteny-dotplot-builder .histogram{width:100%;height:25%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{position:absolute;bottom:10;right:10;width:50%;height:12%}._synteny-dotplot-builder form{display:inline}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n\t  var slice = [].slice;\n\t\n\t  function queue(parallelism) {\n\t    var q,\n\t        tasks = [],\n\t        started = 0, // number of tasks that have been started (and perhaps finished)\n\t        active = 0, // number of tasks currently being executed (started but not finished)\n\t        remaining = 0, // number of tasks not yet finished\n\t        popping, // inside a synchronous task callback?\n\t        error = null,\n\t        await = noop,\n\t        all;\n\t\n\t    if (!parallelism) parallelism = Infinity;\n\t\n\t    function pop() {\n\t      while (popping = started < tasks.length && active < parallelism) {\n\t        var i = started++,\n\t            t = tasks[i],\n\t            a = slice.call(t, 1);\n\t        a.push(callback(i));\n\t        ++active;\n\t        t[0].apply(null, a);\n\t      }\n\t    }\n\t\n\t    function callback(i) {\n\t      return function(e, r) {\n\t        --active;\n\t        if (error != null) return;\n\t        if (e != null) {\n\t          error = e; // ignore new tasks and squelch active callbacks\n\t          started = remaining = NaN; // stop queued tasks from starting\n\t          notify();\n\t        } else {\n\t          tasks[i] = r;\n\t          if (--remaining) popping || pop();\n\t          else notify();\n\t        }\n\t      };\n\t    }\n\t\n\t    function notify() {\n\t      if (error != null) await(error);\n\t      else if (all) await(error, tasks);\n\t      else await.apply(null, [error].concat(tasks));\n\t    }\n\t\n\t    return q = {\n\t      defer: function() {\n\t        if (!error) {\n\t          tasks.push(arguments);\n\t          ++remaining;\n\t          pop();\n\t        }\n\t        return q;\n\t      },\n\t      await: function(f) {\n\t        await = f;\n\t        all = false;\n\t        if (!remaining) notify();\n\t        return q;\n\t      },\n\t      awaitAll: function(f) {\n\t        await = f;\n\t        all = true;\n\t        if (!remaining) notify();\n\t        return q;\n\t      }\n\t    };\n\t  }\n\t\n\t  function noop() {}\n\t\n\t  queue.version = \"1.0.7\";\n\t  if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return queue; }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n\t  else this.queue = queue;\n\t})();\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(13);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(16)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** synteny-dotplot-builder.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7f051435002b9440aa8d\n **/","'use strict';\n\nconst { \n\tTIME_DATA_OPERATIONS \n} = require('constants');\n\nconst queue = require('queue-async');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst sv = require('synteny-vis');\n\nexports.makeSyntenyDotPlot = ({data_url, element_id, genome_x, genome_y}) => {\n\tqueue()\n\t\t.defer(d3.text, data_url)\n\t\t.await((err, ks) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst x_name = genome_x.name;\n\t\t\tconst y_name = genome_y.name;\n\n\t\t\tconst ksData = ksTextToObjects(ks);\n\t\t\tconst xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t\t\tconst yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t\t\tconst inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\n\t\t\tconst ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t\t\tconsole.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t\t\tsv.controller(ksDataObject, element_id, {x_name, y_name});\n\t\t});\n};\n\nfunction ksTextToObjects(text) {\n\t/* .ks files are delimited with a combination of tabs and double bars. */\n\tconst csvLines = text\n\t\t.replace(/\\|\\|/g, ',')\n\t\t.replace(/\\t/g, ',')\n\t\t.replace(' ', '')\n\t\t.split('\\n');\n\n\treturn _.chain(csvLines)\n\t\t.filter(line => line && line[0] !== '#')\n\t\t.map(ksLineToSyntenyDot)\n\t\t.filter(line => isFinite(line.logks) && isFinite(line.logkn))\n\t\t.value();\n}\n\nfunction ksLineToSyntenyDot(line) {\n\tconst fields = line.split(',');\n\n\tconst ks = Number(fields[0]);\n\tconst kn = Number(fields[1]);\n\tconst log10 = n => Math.log(n) / Math.log(10);\n\n\treturn {\n\t\tks,\n\t\tlogks: log10(ks),\n\t\troundedlogks: Math.floor(log10(ks) * 10) / 10,\n\t\tkn,\n\t\tlogkn: log10(kn),\n\t\tlogkskn: log10(ks) - log10(kn),\n\t\tx_chromosome_id: fields[3],\n\t\ty_chromosome_id: fields[15],\n\t\tx_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t\ty_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t};\n}\n\nfunction lengthsToCumulativeBPCounts(len_list) {\n\tconst ntLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.length;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tconst geLenList = _.chain(len_list)\n\t\t.sortBy('length')\n\t\t.reverse()\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tconst nameLenList = _.chain(len_list)\n\t\t.sortBy('name')\n\t\t.reduce(function(map, kv) {\n\t\t\tmap[kv.name] = map.total;\n\t\t\tmap.total += kv.gene_count;\n\t\t\treturn map;\n\t\t}, {\n\t\t\ttotal: 0\n\t\t})\n\t\t.value();\n\n\tconst geneCounts = _.object(\n\t\t_.map(len_list, x => x.name), \n\t\t_.map(len_list, x => x.gene_count)\n\t);\n\n\treturn {\n\t\tnt: ntLenList,\n\t\tge: geLenList,\n\t\tname: nameLenList,\n\t\tgene_counts: geneCounts\n\t};\n}\n\n// Compute absolute BP offset from chromosome and relative offset\nfunction inlineKSData(ks, xmap, ymap) {\n\t_.each(ks, function(ksObj) {\n\t\tvar xShift = xmap.nt[ksObj.x_chromosome_id];\n\t\tvar yShift = ymap.nt[ksObj.y_chromosome_id];\n\t\tksObj.x_relative_offset += xShift;\n\t\tksObj.y_relative_offset += yShift;\n\t});\n\treturn ks;\n}\n\nfunction between(low, high, field) {\n\tif (field) {\n\t\treturn x => low <= x[field] && x[field] < high;\n\t} else {\n\t\treturn x => low <= x && x < high;\n\t}\n}\n\nfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\tvar xmap = xmapPair.ge;\n\tvar ymap = ymapPair.ge;\n\tvar ret = {};\n\n\tvar dataFilters = {};\n\n\tret.getXLineOffsets = function() {\n\t\treturn _.chain(xmap).values().sortBy().value();\n\t};\n\n\tret.getYLineOffsets = function() {\n\t\treturn _.chain(ymap).values().sortBy().value();\n\t};\n\n\tvar gentMode = 'nt';\n\tret.setGEvNTMode = function(mode) {\n\t\tgentMode = mode;\n\t\txmap = xmapPair[mode];\n\t\tymap = ymapPair[mode];\n\t\tret.notifyListeners('ge-v-nt-change');\n\t};\n\n\tret.getGEvNTMode = function() {\n\t\treturn gentMode;\n\t};\n\n\tret.setOrder = function(field, descending) {\n\t\tsyntenyDots = _.sortBy(syntenyDots, field);\n\t\tif (descending) {\n\t\t\tsyntenyDots.reverse();\n\t\t}\n\t\tret.notifyListeners('order-change');\n\t};\n\n\tret.getXLineNames = function() {\n\t\treturn filterMapForNames(xmap);\n\t};\n\n\tret.getYLineNames = function() {\n\t\treturn filterMapForNames(ymap);\n\t};\n\n\tfunction filterMapForNames(map) {\n\t\treturn _.chain(map)\n\t\t\t.pairs()\n\t\t\t.sortBy('1')\n\t\t\t.pluck('0')\n\t\t\t.reject(x => x === 'total')\n\t\t\t.value();\n\t}\n\n\tfunction getFilterFunction(filter) {\n\t\tconst filterFuncs = _.values(filter);\n\t\treturn x => _.all(_.map(filterFuncs, f => f(x)));\n\t}\n\n\tret.currentData = function currentData() {\n\t\treturn {\n\t\t\traw: syntenyDots,\n\t\t\tactive: _.filter(syntenyDots, getFilterFunction(dataFilters))\n\t\t};\n\t};\n\n\tconst sortedDots = _.memoize(_.partial(_.sortBy, syntenyDots));\n\tret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t\tconst filtersWithoutField = getFilterFunction(_.omit(dataFilters, field));\n\t\tconst validPoints = _.filter(sortedDots(field), filtersWithoutField);\n\t\tconst dx = ticks[1] - ticks[0];\n\n\t\treturn _.map(ticks, x => {\n\t\t\tconst hi = _.sortedIndex(validPoints, {[field]: x + dx}, field);\n\t\t\tconst lo = _.sortedIndex(validPoints, {[field]: x}, field);\n\t\t\treturn { x, dx, y: hi - lo };\n\t\t});\n\t};\n\n\tret.addSpatialFilter = function(extents, typeHint) {\n\t\tdataFilters.spatial = function(dot) {\n\t\t\treturn dot.x_relative_offset >= extents[0][0] &&\n\t\t\t\tdot.x_relative_offset <= extents[1][0] &&\n\t\t\t\tdot.y_relative_offset >= extents[0][1] &&\n\t\t\t\tdot.y_relative_offset <= extents[1][1];\n\t\t};\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.removeSpatialFilter = function(typeHint) {\n\t\tdelete dataFilters.spatial;\n\t\tret.notifyListeners(typeHint);\n\t};\n\n\tret.addDataFilter = function(extent, field, typeHint) {\n\t\tdataFilters[field] = between(extent[0], extent[1], field);\n\t\tret.notifyListeners(typeHint || 'data');\n\t};\n\n\tret.removeDataFilter = function(field) {\n\t\tdelete dataFilters[field]\n\t\t;\n\t\tret.notifyListeners('data-stop');\n\t};\n\n\tvar listeners = [];\n\tret.addListener = function(x) {\n\t\tlisteners.push(x);\n\t};\n\n\tret.notifyListeners = function(typeOfChange) {\n\t\t_.each(listeners, function(x) {\n\t\t\tx(typeOfChange);\n\t\t});\n\t};\n\n\tif (TIME_DATA_OPERATIONS) {\n\t\tconst logIt = (f, name) => {\n\t\t\treturn (...args) => {\n\t\t\t\tvar start = Date.now();\n\t\t\t\tvar x = f.call(null, ...args);\n\t\t\t\tconsole.log(name, Date.now() - start);\n\t\t\t\treturn x;\n\t\t\t};\n\t\t};\n\n\t\tret.currentData = logIt(ret.currentData, 'currentData');\n\t\tret.currentDataSummary = logIt(ret.currentDataSummary, 'currentDataSummary');\n\t\tret.notifyListeners = logIt(ret.notifyListeners, 'notifyListeners');\n\t}\n\n\tret.setOrder('logks', true);\n\tret.setGEvNTMode(gentMode);\n\treturn ret;\n}\n\n// We need to expose this to the outside world.\nwindow.makeSyntenyDotPlot = exports.makeSyntenyDotPlot;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/index.js\n ** module id = 1\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nexports.TIME_DATA_OPERATIONS = false;\n\nexports.RUN_BENCHMARKS = false;\n\nexports.SHOW_MAXIMA_AND_MINIMA = true;\n\nexports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\nexports.SYNTENY_MARGIN = 50; \nexports.CIRCLE_RADIUS = 2;\nexports.UNSELECTED_DOT_FILL = '#D0D0D0';\nexports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\nexports.DOTPLOT_COLOR_TRANS_LEN = 500; \n\nexports.HISTOGRAM_MARGIN = 50; \nexports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\nexports.NUM_HISTOGRAM_TICKS = 100;\nexports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\nexports.COLOR_RANGES = {\n\trg: { \n\t\trange: ['red', 'green'],\n\t\tquantized: false\n\t},\n\trg_quantized: {\n\t\trange: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf',\n\t\t\t'#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'], /* From colorbrewer */\n\t\tquantized: true\n\t},\n\trainbow: {\n\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\tquantized: false\n\t},\n\trainbow_quantized: {\n\t\trange: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t\tquantized: true\n\t},\n\tunselected: {\n\t\trange: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n\t\tquantized: false\n\t}\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","'use strict';\n\nconst _ = require('lodash');\nconst d3 = require('d3');\n\nexports.getComputedAttr = function getComputedAttr(element, attr) {\n\tconst computed = getComputedStyle(element)[attr];\n\treturn parseInt(computed, 10);\n};\n\nexports.samplePointsInRange = (extent, n) => {\n\treturn _.map(_.range(n), d3.scale.linear().domain([0, n-1]).range(extent));\n};\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","'use strict';\n\nconst _ = require('lodash');\n\nexports.simplify = function simplify(dirtyPoints, persistence) {\n\tconst points = removeNonExtrema(dirtyPoints);\n\tconst index = indexOfSmallestPointDifference(points);\n\n\tif (points.length < 3 || gapBetweenPoints(points, index) > persistence)\n\t\treturn points;\n\n\tconst toRemove = index === 0 ? 1 : index;\n\tpoints.splice(toRemove, 1);\n\n\treturn simplify(points, persistence);\n};\n\nfunction removeNonExtrema(A) {\n\treturn _.filter(A, function(element, index) {\n\t\tif (index === 0 || index === A.length - 1)\n\t\t\treturn true;\n\n\t\tconst before = A[index - 1].y;\n\t\tconst here = element.y;\n\t\tconst after = A[index + 1].y;\n\t\treturn here > Math.max(before, after) || here < Math.min(before, after);\n\t});\n}\n\nfunction gapBetweenPoints(A, i) {\n\treturn Math.abs(A[i].y - A[i + 1].y);\n}\n\nfunction indexOfSmallestPointDifference(A) {\n\treturn _(A.length - 1).range().min(i => gapBetweenPoints(A, i));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/persistence.js\n **/","'use strict';\n\nmodule.exports = function transform(props) {\n  var transform = [];\n  if (Array.isArray(props)) {\n    props.forEach(function forEachAccessor(prop) {\n      var key = Object.keys(prop)[0];\n      transform.push(key + '(' + prop[key] + ')');\n    });\n  }\n  return transform.join(' ');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svg-transform/index.js\n ** module id = 6\n ** module chunks = 0\n **/","const _ = require('lodash');\n\n/*\n * I want to run a benchmark, but I don't want to block UI updates \n * in between iterations.\n *\n * My guess is that this isn't super accurate for fast functions.\n */\nexports.benchmark = (testArgs, f, done) => {\n\n\tconst results = [];\n\tconst runOne = tests => {\n\t\tif (!tests.length)\n\t\t\treturn done(stats(results));\n\n\t\tresults.push(timeIt(f, tests[0]));\n\t\tsetTimeout(runOne, 0, tests.slice(1));\n\t};\n\tsetTimeout(runOne, 0, testArgs);\n\n\tconst timeIt = (f, arg) => {\n\t\tconst start = Date.now();\n\t\tf(arg);\n\t\treturn Date.now() - start;\n\t};\n\n\tconst stats = times => ({\n\t\ttotalTime: _.sum(times),\n\t\tcount: times.length,\n\t\tmax: _.max(times),\n\t\taverage: _.sum(times) / times.length\n\t});\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/async-benchmark.js\n **/","'use strict';\n\nconst persistenceFuncs = require('persistence');\nconst d3 = require('d3');\nconst _ = require('lodash');\n\nconst { \n\tAUTO_SCALE_VALLEY_FILL \n} = require('constants');\n\nexports.generateAutoScale = (points, persistence) => {\n\tconst extrema = persistenceFuncs.simplify(points, persistence);\n\treturn generateColorScaleFromExtrema(extrema);\n};\n\nconst isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\nconst shouldBeMarked = (x, i, A) => i > 0 && i < A.length - 1 && isMaxima(A, i);\n\nconst generateColorScaleFromExtrema = (extrema) => {\n\tconst colors = d3.scale.category10();\n\n\tconst colored = _.map(extrema, (x, i, A) => {\n\t\tconst color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n\t\treturn _.defaults({}, x, {color});\n\t});\n\n\tconst domain = _.map(colored, d => d.x + d.dx / 2);\n\tconst range = _.map(colored, d => d.color);\n\n\treturn d3.scale.linear().domain(domain).range(range);\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/auto-colorscale.js\n **/","const d3 = require('d3');\nconst _ = require('lodash');\nconst utils = require('utils');\n\nconst {\n\tCOLOR_RANGES\n} = require('constants');\n\nexports.onData = (data) => {\n\tconst generateScale = (field, name) => {\n\t\tconst extent = d3.extent(data, point => point[field]);\n\n\t\tconst colorScale = COLOR_RANGES[name];\n\t\tconst range = colorScale.range;\n\t\tconst domain = utils.samplePointsInRange(extent, range.length);\n\t\n\t\tconst scale = colorScale.quantized ? d3.scale.quantize() : d3.scale.linear();\n\t\n\t\treturn scale.domain(domain).range(range);\n\t}; \n\n\t/* _.memoize acts only on the first arg unless we tell it otherwise */\n\treturn _.memoize(generateScale, (field, name) => field + '.' + name);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/colorscales.js\n **/","'use strict';\n\nconst utils = require('utils');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst transform = require('svg-transform');\n\nconst { \n\tSYNTENY_MARGIN ,\n\tCIRCLE_RADIUS,\n\tUNSELECTED_DOT_FILL,\n\tNUM_COLOR_SCALE_INTERPOLATION_SAMPLES,\n\tDOTPLOT_COLOR_TRANS_LEN\n} = require('constants');\n\nfunction synteny(id, dataObj, field, initialColorScale, meta) {\n\n\tvar xExtent = [0, _.max(dataObj.getXLineOffsets())];\n\tvar yExtent = [0, _.max(dataObj.getYLineOffsets())];\n\tvar dataAspectRatio = yExtent[1] / xExtent[1];\n\n\tconst baseID = id.substring(1);\n\tconst svgElement = document.getElementById(baseID);\n\tvar computedWidth = utils.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\tvar computedHeight = utils.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\tvar windowAspectRatio = computedHeight / computedWidth;\n\n\tvar width;\n\tvar height;\n\n\tif (windowAspectRatio / dataAspectRatio > 1) {\n\t\twidth = computedWidth;\n\t\theight = dataAspectRatio * width;\n\t} else {\n\t\theight = computedHeight;\n\t\twidth = 1 / dataAspectRatio * height;\n\t}\n\n\td3.select(id).attr('width', width + 2 * SYNTENY_MARGIN);\n\td3.select(id).attr('height', height + 2 * SYNTENY_MARGIN);\n\n\tvar xScale = d3.scale.linear().domain(xExtent).range([0, width]);\n\tvar yScale = d3.scale.linear().domain(yExtent).range([height, 0]);\n\n\tvar zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function() {\n\t\tvar t = d3.event.translate;\n\t\tvar s = d3.event.scale;\n\t\tt[0] = Math.min(0, Math.max(-width * s + width, t[0]));\n\t\tt[1] = Math.min(0, Math.max(-height * s + height, t[1]));\n\t\t// prevents the translate from growing large. This way, you don't \n\t\t// have to \"scroll back\" onto the canvas if you pan past the edge.\n\t\tzoom.translate(t);\n\n\t\tbrushGroup.attr('transform', transform([{translate: t}, {scale: s}]));\n\n\t\tvar tempXOffsets = _.filter(xOffsets, function(x) {\n\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t});\n\t\tvar tempXGaps = _.filter(xAxisTickValues, function(x) {\n\t\t\treturn 0 <= xScale(x) && xScale(x) <= width;\n\t\t});\n\t\tvar tempYOffsets = _.filter(yOffsets, function(y) {\n\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t});\n\t\tvar tempYGaps = _.filter(yAxisTickValues, function(y) {\n\t\t\treturn 0 <= yScale(y) && yScale(y) <= height;\n\t\t});\n\n\t\txLineAxis.tickValues(tempXOffsets);\n\t\txGapsAxis.tickValues(tempXGaps);\n\t\tyLineAxis.tickValues(tempYOffsets);\n\t\tyGapsAxis.tickValues(tempYGaps);\n\n\t\txAxisGapsGroup.call(xGapsAxis);\n\t\tyAxisGapsGroup.call(yGapsAxis);\n\t\txAxisLineGroup.call(xLineAxis);\n\t\tyAxisLineGroup.call(yLineAxis);\n\n\t\tsetSyntenyData('zoom');\n\t});\n\n\tfunction resizeBrushBoundary() {\n\t\tvar scaling = zoom.scale();\n\t\tvar corners = ['.nw', '.ne', '.se', '.sw'];\n\t\tvar vertical = ['.e', '.w'];\n\t\tvar horizontal = ['.n', '.s'];\n\t\tvar horizontalRescale = _.union(corners, vertical);\n\t\tvar verticalRescale = _.union(corners, horizontal);\n\n\t\t_.map(horizontalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t\t});\n\n\t\t_.map(verticalRescale, function(name) {\n\t\t\td3.select('.resize' + name).select('rect')\n\t\t\t\t.attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t\t});\n\t}\n\n\t/* We are copying the scale here because brushes do not play nice with zooming.\n\t * All sorts of nasty things happen when the scales get changed underneath a\n\t * brush. */\n\tvar brush = d3.svg.brush()\n\t\t.x(xScale.copy())\n\t\t.y(yScale.copy())\n\t\t.on('brush', function() {\n\t\t\tif (!brush.empty()) {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t\t\t\tresizeBrushBoundary();\n\t\t\t}\n\t\t})\n\t\t.on('brushend', function() {\n\t\t\tif (brush.empty()) {\n\t\t\t\tdataObj.removeSpatialFilter('spatial-stop');\n\t\t\t} else {\n\t\t\t\tdataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t\t\t}\n\t\t});\n\n\td3.select(id + '-canvas')\n\t\t.attr('width', width + 2 * SYNTENY_MARGIN)\n\t\t.attr('height', height + 2 * SYNTENY_MARGIN);\n\tvar context = document.getElementById(id.substring(1) + '-canvas').getContext('2d');\n\n\td3.select(id + '-canvas-bak')\n\t\t.attr('width', width + 2 * SYNTENY_MARGIN)\n\t\t.attr('height', height + 2 * SYNTENY_MARGIN);\n\tvar contextbak = document.getElementById(id.substring(1) + '-canvas-bak').getContext('2d');\n\n\tvar svg = d3.select(id);\n\n\tvar TEXT_OFFSET = 35;\n\tvar TEXT_BOX_HEIGHT = 25;\n\tsvg.append('text')\n\t\t.attr('x', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (width + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN + height + TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(meta.x_name);\n\n\tsvg.append('text')\n\t\t.attr('transform', 'rotate(-90)')\n\t\t.attr('x', -2 * (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('width', (height + 2 * SYNTENY_MARGIN) / 3)\n\t\t.attr('y', SYNTENY_MARGIN - TEXT_OFFSET)\n\t\t.attr('height', TEXT_BOX_HEIGHT)\n\t\t.classed('plot-title', true)\n\t\t.text(meta.y_name);\n\n\tsvg\n\t\t.append('defs')\n\t\t.append('clipPath')\n\t\t.attr('id', 'plot-clip-box')\n\t\t.append('rect')\n\t\t.attr('x', 0)\n\t\t.attr('width', width)\n\t\t.attr('y', 0)\n\t\t.attr('height', height)\n\t\t.attr('fill', 'black');\n\n\tvar xOffsets = dataObj.getXLineOffsets();\n\tvar xPairs = _.zip(_.initial(xOffsets), _.rest(xOffsets));\n\tvar xAxisTickValues = _.map(xPairs, function(p) {\n\t\treturn (p[0] + p[1]) / 2;\n\t});\n\n\tvar xOffsetToNameMap = _.object(xAxisTickValues, dataObj.getXLineNames());\n\n\tvar xLineAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.tickValues(xOffsets)\n\t\t.tickFormat(_.constant(''))\n\t\t.orient('bottom')\n\t\t.tickSize(-height);\n\n\tvar xGapsAxis = d3.svg.axis()\n\t\t.scale(xScale)\n\t\t.tickValues(xAxisTickValues)\n\t\t.tickFormat(function(x) {\n\t\t\treturn xOffsetToNameMap[x];\n\t\t})\n\t\t.orient('bottom')\n\t\t.tickSize(0);\n\n\tvar xAxisWrapper = svg.append('g').attr('transform', transform([{translate: [SYNTENY_MARGIN, height + SYNTENY_MARGIN]}]));\n\tvar xAxisGapsGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xGapsAxis);\n\tvar xAxisLineGroup = xAxisWrapper.append('g').classed('xAxis', true).call(xLineAxis);\n\n\tvar yOffsets = dataObj.getYLineOffsets();\n\tvar yPairs = _.zip(_.initial(yOffsets), _.rest(yOffsets));\n\tvar yAxisTickValues = _.map(yPairs, function(p) {\n\t\treturn (p[0] + p[1]) / 2;\n\t});\n\tvar yOffsetToNameMap = _.object(yAxisTickValues, dataObj.getYLineNames());\n\n\tvar yLineAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.tickValues(yOffsets)\n\t\t.tickFormat(_.constant(''))\n\t\t.orient('left')\n\t\t.tickSize(-width);\n\n\tvar yGapsAxis = d3.svg.axis()\n\t\t.scale(yScale)\n\t\t.tickValues(yAxisTickValues)\n\t\t.tickFormat(function(x) {\n\t\t\treturn yOffsetToNameMap[x];\n\t\t})\n\t\t.orient('left')\n\t\t.tickSize(0);\n\n\tvar yAxisWrapper = svg.append('g').attr('transform', transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]));\n\tvar yAxisGapsGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yGapsAxis);\n\tvar yAxisLineGroup = yAxisWrapper.append('g').classed('yAxis', true).call(yLineAxis);\n\n\tsvg = svg\n\t\t.append('g')\n\t\t.attr('transform', transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]))\n\t\t.append('g').attr('id', 'zoom-group')\n\t\t.call(zoom).on('mousedown.zoom', null); //disable panning\n\n\tvar brushGroup = svg\n\t\t.append('g').attr('clip-path', 'url(#plot-clip-box)')\n\t\t.append('g').attr('id', 'brush-group')\n\t\t.call(brush);\n\n\tvar colorScale = initialColorScale;\n\n\tfunction draw(elapsedMS, initialColorScale, finalColorScale, typeHint) {\n\t\tvar start = Date.now();\n\n\t\tvar intermediateColorScale;\n\t\tif (elapsedMS === 0 && typeHint === 'data') {\n\t\t\tintermediateColorScale = finalColorScale;\n\t\t} else {\n\t\t\tvar t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t\t\tintermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\t}\n\n\t\tvar allData = dataObj.currentData();\n\t\tvar activeDots = allData.active;\n\t\tvar allDots = allData.raw;\n\n\t\t//console.log('Time after collecting data', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tif (typeHint === 'zoom') {\n\t\t\tcontextbak.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\t\tcontextbak.fillStyle = UNSELECTED_DOT_FILL;\n\t\t\t_.each(allDots, function(d) {\n\t\t\t\tvar cx = SYNTENY_MARGIN + xScale(d.x_relative_offset);\n\t\t\t\tvar cy = SYNTENY_MARGIN + yScale(d.y_relative_offset);\n\n\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN)\n\t\t\t\t\treturn;\n\n\t\t\t\tcontextbak.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t});\n\t\t}\n\n\t\t//console.log('Time to draw bg points:', Date.now() - start);\n\t\tstart = Date.now();\n\n\t\tcontext.clearRect(0, 0, width + 2 * SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\n\t\t/* On top, active dots */\n\t\tconst [minDomX, maxDomX] = xScale.domain();\n\t\tconst [minDomY, maxDomY] = yScale.domain();\n\t\tconst [minRanX, maxRanX] = xScale.range();\n\t\tconst [minRanY, maxRanY] = yScale.range();\n\t\tconst widthDomX = maxDomX - minDomX;\n\t\tconst widthDomY = maxDomY - minDomY;\n\t\tconst widthRanX = maxRanX - minRanX;\n\t\tconst widthRanY = maxRanY - minRanY;\n\t\tconst xRatio = widthRanX / widthDomX;\n\t\tconst xShift = minDomX * xRatio + minRanX - SYNTENY_MARGIN;\n\t\tconst yRatio = widthRanY / widthDomY;\n\t\tconst yShift = maxDomY * yRatio + maxRanY - SYNTENY_MARGIN;\n\n\t\tvar groups = [];\n\t\tvar index = 0;\n\t\tfunction makeComp(v) {\n\t\t\treturn function(x) {\n\t\t\t\treturn x.roundedlogks < v;\n\t\t\t};\n\t\t}\n\t\twhile (index < activeDots.length) {\n\t\t\tvar lo = index;\n\t\t\tvar val = activeDots[index].roundedlogks;\n\t\t\tindex = _.sortedLastIndex(activeDots, {\n\t\t\t\troundedlogks: val\n\t\t\t}, makeComp(val));\n\t\t\tgroups.push([lo, index]);\n\t\t}\n\n\t\tfor (var g = 0; g < groups.length; g++) {\n\t\t\tvar group = groups[g];\n\t\t\tvar loIndex = group[0];\n\t\t\tvar hiIndex = group[1];\n\t\t\tcontext.fillStyle = intermediateColorScale(activeDots[loIndex].roundedlogks);\n\t\t\tfor (var i = loIndex; i < hiIndex; i++) {\n\t\t\t\tvar d = activeDots[i];\n\t\t\t\tvar cx = d.x_relative_offset * xRatio - xShift;\n\t\t\t\tvar cy = d.y_relative_offset * yRatio - yShift;\n\n\t\t\t\tif (cx < SYNTENY_MARGIN || cx > width + SYNTENY_MARGIN || cy < SYNTENY_MARGIN || cy > height + SYNTENY_MARGIN)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tcontext.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t\t\t}\n\t\t}\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect(0, 0, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\t\tcontext.fillRect(0, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\tcontext.fillRect(SYNTENY_MARGIN + width, 0, SYNTENY_MARGIN, height + 2 * SYNTENY_MARGIN);\n\t\tcontext.fillRect(0, height + SYNTENY_MARGIN, width + 2 * SYNTENY_MARGIN, SYNTENY_MARGIN);\n\n\t\tvar diff = Date.now() - start;\n\t\t//console.log('Start of call to end of draw call:', diff);\n\t\tif (elapsedMS > 0) {\n\t\t\tsetTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t\t}\n\t}\n\n\tfunction interpolateScales(a, b, t) {\n\t\tvar aDomain = a.domain();\n\t\tvar bDomain = b.domain();\n\t\tvar min = Math.min(aDomain[0], bDomain[0]);\n\t\tvar max = Math.max(aDomain[1], bDomain[1]);\n\t\tvar step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t\tvar domain = _.range(min, max + 1, step);\n\t\tvar range = _.map(domain, function(input) {\n\t\t\treturn d3.interpolateRgb(a(input), b(input))(t);\n\t\t});\n\t\treturn d3.scale.linear().domain(domain).range(range);\n\t}\n\n\tfunction setSyntenyData(typeHint) {\n\t\tif (typeHint == 'autoscale') return;\n\t\tdraw(0, colorScale, colorScale, typeHint);\n\t}\n\tdataObj.addListener(setSyntenyData);\n\tsetSyntenyData('zoom');\n\n\tfunction setNavigationMode(mode) {\n\t\tif (mode === 'pan') {\n\t\t\td3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t\t\td3.select(id).select('#zoom-group').call(zoom);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', null);\n\t\t\td3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t\t} else if (mode === 'brush') {\n\t\t\td3.select(id).select('#brush-group').call(brush);\n\t\t\td3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t\t\td3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t\t}\n\t}\n\n\tfunction setColorScale(newColorScale) {\n\t\tdraw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t\tcolorScale = newColorScale;\n\t}\n\n\tfunction setField(f) {\n\t\tfield = f;\n\t\tsetSyntenyData();\n\t}\n\n\treturn {\n\t\tsetNavMode: setNavigationMode,\n\t\tsetColorScale: setColorScale,\n\t\tsetField: setField\n\t};\n}\n\nexports.synteny = synteny;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dotplot.js\n **/","'use strict';\n\nconst {\n\tHISTOGRAM_MARGIN,\n\tHISTOGRAM_Y_SCALE_TRANS_LEN,\n\tNUM_HISTOGRAM_TICKS,\n\tUNSELECTED_BAR_FILL\n} = require('constants');\n\nconst persistenceFuncs = require('persistence');\nconst utils = require('utils');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst transform = require('svg-transform');\n\nfunction histogram(id, dataObj, field, colorScale) {\n\tconst dataExtent = d3.extent(_.pluck(dataObj.currentData().raw, field));\n\n\tconst plot = d3.select(id);\n\tconst plotWidth = utils.getComputedAttr(plot.node(), 'width');\n\tconst plotHeight = utils.getComputedAttr(plot.node(), 'height');\n\n\tconst prettyNames = {\n\t\tlogks: 'log(ks)',\n\t\tlogkn: 'log(kn)',\n\t\tlogkskn: 'log(ks/kn)'\n\t};\n\tplot.append('text')\n\t\t.attr('x', 2 * plotHeight / 3)\n\t\t.attr('width', plotHeight / 3)\n\t\t.attr('y', 50)\n\t\t.attr('height', 50)\n\t\t.classed('histogram-title', true)\n\t\t.text(prettyNames[field]);\n\n\tfunction plotBrushBrush() {\n\t\tif (!plotBrush.empty()) {\n\t\t\tdataObj.addDataFilter(plotBrush.extent(), field);\n\t\t}\n\t}\n\n\tfunction plotBrushEnd() {\n\t\tif (plotBrush.empty()) {\n\t\t\tdataObj.removeDataFilter(field);\n\t\t}\n\t\tdataObj.notifyListeners('histogram-stop');\n\t\tupdateColors(dataBarSel); // Cancel color animation -- just brushing\n\t}\n\n\tconst xPlotScale = d3.scale.linear()\n\t\t.domain(dataExtent)\n\t\t.range([HISTOGRAM_MARGIN, plotWidth - HISTOGRAM_MARGIN]);\n\n\tconst bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n\tconst getYExtent = (summary) => [0, 3 / 2 * d3.max(_.pluck(summary, 'y'))];\n\n\tconst yPlotScale = d3.scale.linear()\n\t\t.domain(getYExtent(dataObj.currentDataSummary(bins, field)))\n\t\t.range([plotHeight - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\n\tfunction updateMinMaxMarkers(persistence) {\n\t\tconst summary = dataObj.currentDataSummary(bins, field);\n\t\tconst extrema = persistenceFuncs.simplify(summary, persistence);\n\n\t\tconst isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t\tconst shouldBeMarked = (x, i, A) => i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t\tconst markers = _.map(extrema, function(d, i, A) {\n\t\t\treturn {\n\t\t\t\tcolor: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t\t\t\tx: d.x + d.dx / 2,\n\t\t\t\ty: d.y\n\t\t\t};\n\t\t});\n\n\t\tconst tempSelA = plot.selectAll('.maxMark').data(markers);\n\t\ttempSelA.exit().remove();\n\t\ttempSelA.enter().append('circle').classed('maxMark', 1);\n\t\ttempSelA\n\t\t\t.attr('cx', d => xPlotScale(d.x))\n\t\t\t.attr('cy', d => yPlotScale(d.y) - 5)\n\t\t\t.attr('r', 3)\n\t\t\t.attr('fill', d => d.color);\n\t}\n\n\tconst plotBrush = d3.svg.brush()\n\t\t.x(xPlotScale)\n\t\t.on('brush', plotBrushBrush)\n\t\t.on('brushend', plotBrushEnd);\n\n\tconst dataBarSel = plot.selectAll('.dataBars')\n\t\t.data(dataObj.currentDataSummary(bins, field))\n\t\t.enter()\n\t\t.append('rect').classed('dataBars', true)\n\t\t.attr('x', d => xPlotScale(d.x))\n\t\t.attr('width', d => xPlotScale(d.x + d.dx) - xPlotScale(d.x));\n\n\tconst brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group')\n\t\t.attr('transform', transform([{translate: [0, HISTOGRAM_MARGIN]}]))\n\t\t.call(plotBrush);\n\tbrushSelectForBM.selectAll('rect')\n\t\t.attr('height', plotHeight - 2 * HISTOGRAM_MARGIN);\n\n\tconst xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\tconst yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\n\tplot.append('g')\n\t\t.attr('transform', transform([{translate: [0, plotHeight - HISTOGRAM_MARGIN]}]))\n\t\t.classed('xAxis', true).call(xAxis);\n\tconst yAxisSel = plot.append('g')\n\t\t.attr('transform', transform([{translate: [HISTOGRAM_MARGIN, 0]}]))\n\t\t.classed('yAxis', true).call(yAxis);\n\n\tconst updateHeights = selection => {\n\t\tselection.transition(); // cancel transition\n\t\tselection.attr('y', d => yPlotScale(d.y));\n\t};\n\tconst updateColors = selection => {\n\t\tselection.transition(); // cancel transition\n\t\tconst extent = plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n\t\tconst active = bin => bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\n\t\tselection\n\t\t\t.attr('height', d => plotHeight - HISTOGRAM_MARGIN - yPlotScale(d.y))\n\t\t\t.attr('fill', d => active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL);\n\t};\n\n\tconst updatePlotAttrs = selection => {\n\t\tupdateHeights(selection);\n\t\tupdateColors(selection);\n\t};\n\n\tfunction updatePlot(typeHint) {\n\t\tdataBarSel.transition(); /* cancel previous transition */\n\n\t\ttypeHint = typeHint || '';\n\n\t\tconst summary = dataObj.currentDataSummary(bins, field);\n\t\tlet tempSel = dataBarSel.data(summary);\n\n\t\tif (typeHint.indexOf('stop') > -1) {\n\t\t\tyPlotScale.domain(getYExtent(summary));\n\t\t\tyAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t\t\ttempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n\t\t} \n\n\t\ttempSel.call(updatePlotAttrs);\n\t}\n\n\tdataObj.addListener(updatePlot);\n\n\tfunction setColorScale(newColorScale) {\n\t\tcolorScale = newColorScale;\n\t\tupdatePlot('stop'); /* trigger animation -- FIXME */\n\t}\n\n\treturn {\n\t\tsetColorScale: setColorScale,\n\t\tbrush: plotBrush,\n\t\tsendBrushEvent: plotBrushBrush,\n\t\tselection: brushSelectForBM,\n\t\tupdateMinMaxMarkers: updateMinMaxMarkers,\n\t\tbins: () => dataObj.currentDataSummary(bins, field)\n\t};\n}\n\nexports.histogram = histogram;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/histogram.js\n **/","'use strict';\n\nconst histogram = require('histogram');\nconst dotplot = require('dotplot');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst autoscale = require('auto-colorscale');\n\nrequire('style.css');\n\nconst { \n\tRUN_BENCHMARKS, \n\tSHOW_MAXIMA_AND_MINIMA \n} = require('constants');\n\nfunction buildDiv(element_id) {\n\tconst div = d3.select(element_id).append('div').classed('_synteny-dotplot-builder', true);\n\n\tdiv.append('canvas').attr('id', 'dotplot-canvas-bak').classed('dotplot', true);\n\tdiv.append('canvas').attr('id', 'dotplot-canvas').classed('dotplot', true);\n\tdiv.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\n\tconst histogramWrapper = div.append('div').attr('id', 'histogram-wrapper');\n\thistogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\thistogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\thistogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\n\tconst formWrapper = div.append('div').attr('id', 'form-wrapper');\n\n\tfunction makeForm(title, optionId, elements, checkIndex) {\n\t\tconst navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t\tnavOptions.append('strong').text(title + ': ');\n\n\t\tconst navForm = navOptions.append('form').attr('id', optionId);\n\t\tconst options = navForm.selectAll('input')\n\t\t\t.data(elements).enter().append('input')\n\t\t\t.attr('type', 'radio').attr('name', optionId)\n\t\t\t.attr('value', d => d[0]);\n\n\t\toptions.forEach(selection => {\n\t\t\tselection.forEach((element, i) => {\n\t\t\t\tconst label = document.createElement('label');\n\t\t\t\tlabel.textContent = elements[i][1];\n\t\t\t\tnavForm.node().insertBefore(label, element);\n\t\t\t});\n\t\t});\n\n\t\toptions[0][checkIndex].checked = true;\n\t}\n\n\tconst option = (value, text) => [value, text];\n\n\tmakeForm('Navigation Mode', 'mouse-options', [\n\t\toption('brush', 'Brushing'),\n\t\toption('pan', 'Panning')\n\t], 0);\n\n\tmakeForm('Plotting order', 'summary-options', [\n\t\toption('minimum', 'High to Low'),\n\t\toption('maximum', 'Low to High')\n\t], 0);\n\n\tmakeForm('Dot Plot Coloring', 'plot-var-options', [\n\t\toption('logks', 'log ks'),\n\t\toption('logkn', 'log kn'),\n\t\toption('logkskn', 'log ks/kn')\n\t], 0);\n\n\tmakeForm('Color Scale', 'color-options', [\n\t\toption('rg', 'red-green'),\n\t\toption('rg_quantized', 'rg_quantized'),\n\t\toption('rainbow', 'rainbow'),\n\t\toption('rainbow_quantized', 'rainbow_quantized'),\n\t\toption('auto', 'auto')\n\t], 0);\n\n\tconst persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\tpersistenceOptions.append('strong').text('Auto-scale persistence');\n\n\tpersistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100)\n\t\t.attr('value', 40).attr('step', 1);\n\n\tpersistenceOptions.append('button').attr('id', 'persistence-button').attr('type', 'button').text('Refresh auto scale');\n\n\tpersistenceOptions.append('p').text('Largest persistence edge that will be removed: ').append('label').attr('id', 'persistence-text').text('40');\n}\n\nfunction controller(dataObj, element_id, meta) {\n\n\tbuildDiv('#' + element_id);\n\t\n\tconst refreshAutoScale = (persistence) => {\n\t\tconst radio = document.getElementById('color-options');\n\t\tconst auto = _.find(radio.children, child => child.value === 'auto');\n\t\tauto.checked = true;\n\n\t\tconst h = histograms[activeField];\n\t\th.setColorScale(autoscale.generateAutoScale(h.bins(), persistence));\n\n\t\tif (SHOW_MAXIMA_AND_MINIMA)\n\t\t\t_.each(histograms, h => h.updateMinMaxMarkers(persistence));\n\t};\n\n\tconst getPersistence = () => d3.select('#persistence').node().value;\n\n\td3.select('#persistence')\n\t\t.on('input', () => {\n\t\t\tconst p = getPersistence();\n\t\t\trefreshAutoScale(p);\n\t\t\td3.select('#persistence-text').node().innerText = p;\n\t\t});\n\n\td3.select('#persistence-button')\n\t\t.on('click', () => {\n\t\t\trefreshAutoScale(getPersistence());\n\t\t});\n\n\t/* zoom/pan switching */\n\td3.selectAll('#mouse-options input[name=mouse-options]')\n\t\t.on('change', function() {\n\t\t\tsyntenyPlot.setNavMode(this.value);\n\t\t});\n\n\t/* summary mode switching */\n\td3.selectAll('#summary-options input[name=summary-options]')\n\t\t.on('change', function() {\n\t\t\tdataObj.setOrder('logks', this.value === 'minimum');\n\t\t});\n\n\t/* Plot variable switching */\n\td3.selectAll('#plot-var-options input[name=plot-var-options]')\n\t\t.on('change', function() {\n\t\t\thistograms[activeField].setColorScale(colorScale(activeField, 'unselected'));\n\t\t\tactiveField = this.value;\n\t\t\tsyntenyPlot.setField(activeField);\n\t\t\tvar newCS;\n\t\t\tif (activeCS === 'auto') {\n\t\t\t\tnewCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t\t\t} else {\n\t\t\t\tnewCS = colorScale(activeField, activeCS);\n\t\t\t}\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t});\n\n\t/* color mode switching */\n\tvar activeField = 'logks';\n\tvar activeCS = 'rg';\n\td3.selectAll('#color-options input[name=color-options]')\n\t\t.on('change', function() {\n\t\t\tvar newCS;\n\t\t\tif (this.value === 'auto') {\n\t\t\t\tnewCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t\t\t} else {\n\t\t\t\tnewCS = colorScale(activeField, this.value);\n\t\t\t}\n\t\t\thistograms[activeField].setColorScale(newCS);\n\t\t\tsyntenyPlot.setColorScale(newCS);\n\t\t\tactiveCS = this.value;\n\t\t});\n\n\tconst colorScale = require('colorscales').onData(dataObj.currentData().raw);\n\n\tconst initial = colorScale(activeField, 'rg');\n\tconst unselected = colorScale(activeField, 'unselected');\n\n\tconst syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', initial, meta);\n\tconst histograms = {\n\t\t'logks': histogram.histogram('#plot', dataObj, 'logks', initial),\n\t\t'logkn': histogram.histogram('#plot2', dataObj, 'logkn', unselected),\n\t\t'logkskn': histogram.histogram('#plot3', dataObj, 'logkskn', unselected)\n\t};\n\n\t// Since the histograms aren't controlling their own color scale policy \n\t// now (a good thing), we need to manually fire of their update methods. \n\t// Eventually, we should fix this up.\n\tdataObj.addListener((typeHint) => {\n\t\tif(typeHint.indexOf('stop') > -1)\n\t\t\t_.each(histograms, h => h.updateMinMaxMarkers(getPersistence()));\n\t});\n\tdataObj.notifyListeners('initial');\n\n\t/* Benchmark */\n\tif (RUN_BENCHMARKS) {\n\t\tconst [minLogKs, maxLogKs] = d3.extent(dataObj.currentData().raw, x => x.logks);\n\t\tconst points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\n\t\tconst rangeList = _.chain(points)\n\t\t\t.map(lo => _.map(points, hi => [lo, hi]))\n\t\t\t.flatten()\n\t\t\t.filter(([lo, hi]) => lo < hi)\n\t\t\t.value();\n\n\t\tconst asyncBenchmark = require('async-benchmark');\n\t\tasyncBenchmark.benchmark(rangeList, function(range) {\n\t\t\thistograms.logks.brush.extent(range);\n\t\t\thistograms.logks.brush.event(histograms.logks.selection);\n\t\t}, function(info) {\n\t\t\talert('Average brush time: ' + info.average + ', max: ' + info.max);\n\t\t});\n\t}\n}\n\nexports.controller = controller;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/synteny-vis.js\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder .dotplot{float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:50%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:grey}._synteny-dotplot-builder #histogram-wrapper{float:right;width:50%}._synteny-dotplot-builder .histogram{width:100%;height:25%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{position:absolute;bottom:10;right:10;width:50%;height:12%}._synteny-dotplot-builder form{display:inline}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./src/style.css\n ** module id = 13\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 14\n ** module chunks = 0\n **/","(function() {\n  var slice = [].slice;\n\n  function queue(parallelism) {\n    var q,\n        tasks = [],\n        started = 0, // number of tasks that have been started (and perhaps finished)\n        active = 0, // number of tasks currently being executed (started but not finished)\n        remaining = 0, // number of tasks not yet finished\n        popping, // inside a synchronous task callback?\n        error = null,\n        await = noop,\n        all;\n\n    if (!parallelism) parallelism = Infinity;\n\n    function pop() {\n      while (popping = started < tasks.length && active < parallelism) {\n        var i = started++,\n            t = tasks[i],\n            a = slice.call(t, 1);\n        a.push(callback(i));\n        ++active;\n        t[0].apply(null, a);\n      }\n    }\n\n    function callback(i) {\n      return function(e, r) {\n        --active;\n        if (error != null) return;\n        if (e != null) {\n          error = e; // ignore new tasks and squelch active callbacks\n          started = remaining = NaN; // stop queued tasks from starting\n          notify();\n        } else {\n          tasks[i] = r;\n          if (--remaining) popping || pop();\n          else notify();\n        }\n      };\n    }\n\n    function notify() {\n      if (error != null) await(error);\n      else if (all) await(error, tasks);\n      else await.apply(null, [error].concat(tasks));\n    }\n\n    return q = {\n      defer: function() {\n        if (!error) {\n          tasks.push(arguments);\n          ++remaining;\n          pop();\n        }\n        return q;\n      },\n      await: function(f) {\n        await = f;\n        all = false;\n        if (!remaining) notify();\n        return q;\n      },\n      awaitAll: function(f) {\n        await = f;\n        all = true;\n        if (!remaining) notify();\n        return q;\n      }\n    };\n  }\n\n  function noop() {}\n\n  queue.version = \"1.0.7\";\n  if (typeof define === \"function\" && define.amd) define(function() { return queue; });\n  else if (typeof module === \"object\" && module.exports) module.exports = queue;\n  else this.queue = queue;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/queue-async/queue.js\n ** module id = 15\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 16\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/style.css\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 18\n ** module chunks = 0\n **/"],"sourceRoot":""}